---
swagger: "2.0"
info:
  description: "XMS is the controller of distributed storage system"
  version: "SDS_4.2.000.0.200302"
  title: "XMS API"
  contact: {}
  license:
    name: "Commercial"
basePath: "/v1"
tags:
- name: "cluster"
  description: "ClusterController API /cluster\n"
- name: "hosts"
  description: "HostController Host Management\n"
- name: "host-validators"
  description: "HostValidatorController Host Validator Management\n"
- name: "host-initializations"
  description: "HostInitializationController provides API for host initialization\n"
- name: "disks"
  description: "DiskController Disk Management\n"
- name: "network-interfaces"
  description: "NetworkInterfaceController Network Interface Management\n"
- name: "network-addresses"
  description: "NetworkAddressController Network Address Management\n"
- name: "network-diagnoses"
  description: "NetworkDiagnosisController provides API for network diagnosis\n"
- name: "network-diagnosis-items"
  description: "NetworkDiagnosisItemController provides API for network diagnosis\
    \ item\n"
- name: "pools"
  description: "PoolController Operations about Pools\n"
- name: "chunks"
  description: "ChunkController Chunk Management\n"
- name: "osds"
  description: "OsdController Osd Management\n"
- name: "partitions"
  description: "PartitionController API /partitions.\n"
- name: "osd-groups"
  description: "OsdGroupController API /osd-groups\n"
- name: "block-volumes"
  description: "BlockVolumeController Operations about Block\n"
- name: "block-snapshots"
  description: "BlockSnapshotController Operations about Block Snapshot\n"
- name: "client-groups"
  description: "ClientGroupController Operations about client group\n"
- name: "client-codes"
  description: "ClientCodeController Operations about client code\n"
- name: "clients"
  description: "ClientController API /clients\n"
- name: "access-paths"
  description: "AccessPathController Operations able access paths\n"
- name: "targets"
  description: "TargetController Operations able targets\n"
- name: "mapping-groups"
  description: "MappingGroupController Operations able mapping groups\n"
- name: "luns"
  description: "LunController Operations on luns\n"
- name: "client-lun-mappings"
  description: "ClientLunMappingController API /client-lun-mappings\n"
- name: "alerts"
  description: "AlertController Operations about alert\n"
- name: "alert-rules"
  description: "AlertRuleController Operations about alert rule\n"
- name: "alert-groups"
  description: "AlertGroupController Operations about alert group\n"
- name: "licenses"
  description: "LicenseController Operations about Install\n"
- name: "protection-domains"
  description: "ProtectionDomainController Protection Domain Management\n"
- name: "placement-nodes"
  description: "PlacementNodeController provides API for placement node\n"
- name: "users"
  description: "UserController Manage users\n"
- name: "auth"
  description: "AuthController Manage authentication and authorization\n"
- name: "access-tokens"
  description: "AccessTokenController Manage users\n"
- name: "services"
  description: "ServiceController Disk Management\n"
- name: "snmp"
  description: "SnmpController Operations able snmp\n"
- name: "action-logs"
  description: "ActionLogController Operations about ActionLog\n"
- name: "event-logs"
  description: "EventLogController Operations about EventLog\n"
- name: "confs"
  description: "ConfController Operations about Config\n"
- name: "email-groups"
  description: "EmailGroupController Operations about Email\n"
- name: "version"
  description: "VersionController Operations about Version\n"
- name: "nfs-gateways"
  description: "NFSGatewayController provides API for object storage nfs gateway\n"
- name: "nfs-gateway-bucket-maps"
  description: "NFSGatewayBucketMapController provides API for object storage nfs\
    \ gateway s3 bucket map\n"
- name: "os-users"
  description: "ObjectStorageUserController provides API for object storage user\n"
- name: "os-keys"
  description: "ObjectStorageKeyController provides API for object storage key\n"
- name: "os-policies"
  description: "ObjectStoragePolicyController provides API for object storage policy\n"
- name: "os-storage-classes"
  description: "OSStorageClassController API /os-storage-classes.\n"
- name: "os-external-storage-classes"
  description: "OSExternalStorageClassController API /os-extertal-storage-classes.\n"
- name: "os-buckets"
  description: "ObjectStorageBucketController provides API for object storage bucket\n"
- name: "os-bucket-loggings"
  description: "OSBucketLoggingController API /os-bucket-loggings.\n"
- name: "os-custom-labels"
  description: "OSCustomLabelController provides API for object storage custom label\n"
- name: "os-lifecycles"
  description: "ObjectStorageLifecycleController provides API for object storage lifecycle\n"
- name: "os-gateways"
  description: "ObjectStorageGatewayController provides API for s3 gateway\n"
- name: "os-zones"
  description: "ObjectStorageZoneController API /os-zones\n"
- name: "os-zone-periods"
  description: "OSZonePeriodController API /os-zone-periods\n"
- name: "os-zone-translogs"
  description: "OSZoneTranslogController API /os-zone-translogs\n"
- name: "os-zone-locks"
  description: "OSZoneLockController API /os-zone-locks\n"
- name: "os-remote-policies"
  description: "OSRemotePolicyController API /os-remote-policies\n"
- name: "os-replication-zones"
  description: "OSReplicationZoneController API /os-replication-zones.\n"
- name: "os-replication-paths"
  description: "OSReplicationPathController API /os-replication-paths.\n"
- name: "os-search-engines"
  description: "OSSearchEngineController provides APIs for OS search engine\n"
- name: "os-search-gateways"
  description: "OSSearchGatewayController provides API for os search gateways\n"
- name: "os-objects"
  description: "OSObjectController Object Storage Object Management\n"
- name: "os-zone-pairs"
  description: "OSZonePairsController API /os-zone-pairs\n"
- name: "os-samples"
  description: "OSSampleController API /os-samples\n"
- name: "vm-flavors"
  description: "VMFlavorController API /vm-flavors\n"
- name: "search"
  description: "SearchController defines search apis\n"
- name: "search-capabilities"
  description: "SearchCapabilityController defines search capability apis\n"
- name: "system-logs"
  description: "SystemLogController provides API for system logs\n"
- name: "dp-gateways"
  description: "DpGatewayController API /dp-gateways/\n"
- name: "dp-block-snapshot-policies"
  description: "DpBlockSnapshotPolicyController API /dp-block-snapshot-policies\n"
- name: "dp-block-backup-policies"
  description: "DpBlockBackupPolicyController API /dp-block-backup-policies\n"
- name: "volume-dp-block-backup-policy-mappings"
  description: "VolumeDpBlockBackupPolicyMappingController API /volume-dp-block-backup-policy-mappings\n"
- name: "dp-block-replication-policies"
  description: "DpBlockReplicationPolicyController API /dp-block-replication-policies\n"
- name: "dp-block-snapshot-jobs"
  description: "DpBlockSnapshotJobController API /dp-block-snapshot-jobs/\n"
- name: "dp-block-backup-jobs"
  description: "DpBlockBackupJobController API /dp-block-backup-jobs/\n"
- name: "dp-block-snapshot-recovery-jobs"
  description: "DpBlockSnapshotRecoveryJobController API /dp-block-snapshot-recovery-jobs\n"
- name: "dp-fs-snapshot-policies"
  description: "DpFSSnapshotPolicyController API /dp-fs-snapshot-policies\n"
- name: "dp-fs-snapshot-jobs"
  description: "DpFSSnapshotJobController API /dp-fs-snapshot-jobs/\n"
- name: "dp-sites"
  description: "DpSiteController API /dp-sites/\n"
- name: "host-info"
  description: "HostInfoController Host Info Management\n"
- name: "s3-load-balancer-groups"
  description: "S3LoadBalancerGroupController API\n"
- name: "s3-load-balancers"
  description: "S3LoadBalancerController API\n"
- name: "cloud-platforms"
  description: "CloudPlatformController Cloud Platform Management\n"
- name: "cloud-instances"
  description: "CloudInstanceController Cloud Instance Management\n"
- name: "cloud-volumes"
  description: "CloudVolumeController Cloud Volume Management\n"
- name: "cloud-volume-attachments"
  description: "CloudVolumeAttachmentController Cloud Volume Attachment Management\n"
- name: "fs-arbitration-pools"
  description: "FSArbitrationPoolController File Storage Arbitration Pool Management\n"
- name: "fs-users"
  description: "FSUserController provides API for file storage user\n"
- name: "fs-folders"
  description: "FSFolderController provides API for file storage folder\n"
- name: "fs-quota-trees"
  description: "FSQuotaTreeController provides API for file storage quota tree\n"
- name: "fs-nfs-shares"
  description: "FSNFSShareController provides API for fs nfs shares\n"
- name: "fs-nfs-share-acls"
  description: "FSNFSShareACLController provides API for fs nfs shares acl\n"
- name: "fs-user-groups"
  description: "FSUserGroupController provides APIs for file storage user group\n"
- name: "fs-clients"
  description: "FSClientController provides APIs for file storage client\n"
- name: "fs-client-groups"
  description: "FSClientGroupController provides APIs for file storage client group\n"
- name: "fs-active-directories"
  description: "FSActiveDirectoryController File Storage Active Directory Management\n"
- name: "fs-gateway-groups"
  description: "FSGatewayGroupController provides APIs for file storage gateway group\n"
- name: "fs-gateways"
  description: "FSGatewayController provides APIs for file storage gateway\n"
- name: "fs-snapshots"
  description: "FSSnapshotController provides APIs for file storage snapshot\n"
- name: "fs-ldaps"
  description: "FSLdapController File Storage LDAP Management\n"
- name: "fs-smb-shares"
  description: "FSSMBShareController provides API for fs smb share\n"
- name: "fs-smb-share-acls"
  description: "FSSMBShareACLController provides API for fs smb share acl\n"
- name: "fs-ftp-shares"
  description: "FSFTPShareController provides API for fs ftp share\n"
- name: "fs-ftp-share-acls"
  description: "FSFTPShareACLController provides API for fs ftp share acl\n"
- name: "fs-smb-sessions"
  description: "FSSMBSessionController provides API for fs SMB session\n"
- name: "fs-nfs-connections"
  description: "FSNFSConnectionController provides API for fs NFS connection\n"
- name: "fs-ftp-sessions"
  description: "FSFTPSessionController provides API for fs FTP session\n"
- name: "crypto-keys"
  description: "CryptoKeyController API /crypto-keys/\n"
- name: "identity-platforms"
  description: "IdentityPlatformController Identity Platform Management\n"
- name: "role-mappings"
  description: "RoleMappingController Role Mapping Management\n"
- name: "ssl-certificates"
  description: "SSLCertificateController API\n"
- name: "remote-clusters"
  description: "RemoteClusterController API /remote-clusters\n"
- name: "emails"
  description: "EmailController Operations about Email\n"
- name: "block-volume-groups"
  description: "VolumeGroupController Operations about volume group\n"
- name: "block-volume-group-snapshots"
  description: "VolumeGroupSnapshotController Operations about volume group snapshot\n"
- name: "tasks"
  description: "TaskController Task Management\n"
- name: "host-enc-specs"
  description: "HostEncSpecController API /host-enc-specs/\n"
- name: "vip-groups"
  description: "VIPGroupController API /vip-groups\n"
- name: "vips"
  description: "VIPController API /vips\n"
- name: "vip-instances"
  description: "VIPInstanceController API /vip-instances\n"
- name: "trashes"
  description: "TrashController Operations about Trash\n"
- name: "trash-resources"
  description: "TrashResourceController Operations about Trash\n"
- name: "domain-user-validators"
  description: "DomainUserValidatorController Domain User Validator Management\n"
- name: "block-volume-migration-jobs"
  description: "BlockVolumeMigrationJobController Operations about block volume migration\
    \ job\n"
paths:
  /access-paths/:
    get:
      tags:
      - "access-paths"
      description: "List access paths"
      operationId: "ListAccessPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "client_group_id"
        in: "query"
        description: "related client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      - name: "all"
        in: "query"
        description: "show all access targets"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessPathsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "access-paths"
      description: "Create an access path"
      operationId: "CreateAccessPath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "access_path"
        description: "access path info"
        required: true
        schema:
          $ref: "#/definitions/AccessPathCreateReq"
        x-exportParamName: "AccessPath"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessPathResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/AccessPathResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /access-paths/{access_path_id}:
    get:
      tags:
      - "access-paths"
      description: "Get access path by id"
      operationId: "GetAccessPath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_path_id"
        in: "path"
        description: "access path id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessPathResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "access-paths"
      description: "Delete access path"
      operationId: "DeleteAccessPath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_path_id"
        in: "path"
        description: "access path id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/AccessPathResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "access-paths"
      description: "update access path"
      operationId: "UpdateAccessPath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_path_id"
        in: "path"
        description: "access path id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      - in: "body"
        name: "access_path"
        description: "access path info"
        required: true
        schema:
          $ref: "#/definitions/AccessPathUpdateReq"
        x-exportParamName: "AccessPath"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessPathResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/AccessPathResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /access-tokens/:
    get:
      tags:
      - "access-tokens"
      description: "List access tokens"
      operationId: "ListAccessTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "user_id"
        in: "query"
        description: "The id of user access tokens belong to"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "role"
        in: "query"
        description: "filter access tokens by role"
        required: false
        type: "string"
        x-exportParamName: "Role"
      - name: "all"
        in: "query"
        description: "show all access tokens"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessTokensResp"
        403:
          description: "Forbidden"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    post:
      tags:
      - "access-tokens"
      description: "Create an access token"
      operationId: "CreateAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "access token info"
        required: true
        schema:
          $ref: "#/definitions/AccessTokenCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Accepted"
          schema:
            $ref: "#/definitions/AccessTokenCreateResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /access-tokens/{access_token_id}:
    get:
      tags:
      - "access-tokens"
      description: "get an access Token"
      operationId: "GetAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_token_id"
        in: "path"
        description: "access token id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessTokenId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessTokenResp"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "access-tokens"
      description: "delete an access token"
      operationId: "DeleteAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_token_id"
        in: "path"
        description: "access token id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessTokenId"
      responses:
        204:
          description: "No Content"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "access-tokens"
      description: "update an access token"
      operationId: "UpdateAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_token_id"
        in: "path"
        description: "access token id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessTokenId"
      - in: "body"
        name: "body"
        description: "access token info"
        required: true
        schema:
          $ref: "#/definitions/AccessTokenUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessTokenResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /access-tokens/{access_token_id}:regenerate:
    post:
      tags:
      - "access-tokens"
      description: "regenereate an access token UUID"
      operationId: "RegenerateAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "access_token_id"
        in: "path"
        description: "access token id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessTokenId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessTokenCreateResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /access-tokens:validate:
    post:
      tags:
      - "access-tokens"
      description: "validate an access token"
      operationId: "ValidateAccessToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subject_access_token"
        in: "query"
        description: "access token to be validated"
        required: true
        type: "string"
        x-exportParamName: "SubjectAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccessTokenResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /action-logs/:
    get:
      tags:
      - "action-logs"
      description: "List action logs"
      operationId: "ListActionLogs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "resource_type"
        in: "query"
        description: "resource type of action logs"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "status"
        in: "query"
        description: "status of action logs"
        required: false
        type: "string"
        x-exportParamName: "Status"
      - name: "user_id"
        in: "query"
        description: "user id of action logs"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "create_begin"
        in: "query"
        description: "create begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "CreateBegin"
      - name: "create_end"
        in: "query"
        description: "create end timestamp"
        required: false
        type: "string"
        x-exportParamName: "CreateEnd"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "related_resource"
        in: "query"
        description: "related resource info of search"
        required: false
        type: "string"
        x-exportParamName: "RelatedResource"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ActionLogsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-groups/:
    get:
      tags:
      - "alert-groups"
      description: "List all alert groups"
      operationId: "ListAlertGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    post:
      tags:
      - "alert-groups"
      description: "create alert group"
      operationId: "CreateAlertGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "alert group"
        required: true
        schema:
          $ref: "#/definitions/AlertGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-groups/{group_id}:
    get:
      tags:
      - "alert-groups"
      description: "get alert group"
      operationId: "GetAlertGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of alert group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "alert-groups"
      description: "delete alert group"
      operationId: "DeleteAlertGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of alert group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "alert-groups"
      description: "update alert group"
      operationId: "UpdateAlertGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of alert group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "alert group"
        required: true
        schema:
          $ref: "#/definitions/AlertGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-rules/:
    get:
      tags:
      - "alert-rules"
      description: "List all alert rules"
      operationId: "ListAlertRules"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "alert_group_id"
        in: "query"
        description: "alert group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AlertGroupId"
      - name: "resource_type"
        in: "query"
        description: "resource type of alert rule"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "level"
        in: "query"
        description: "level of alert rule"
        required: false
        type: "string"
        x-exportParamName: "Level"
      - name: "enabled"
        in: "query"
        description: "enabled or not"
        required: false
        type: "boolean"
        x-exportParamName: "Enabled"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRulesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    post:
      tags:
      - "alert-rules"
      description: "create alert rule"
      operationId: "CreateAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "alert rule"
        required: true
        schema:
          $ref: "#/definitions/AlertRuleCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "alert-rules"
      description: "create alert rule"
      operationId: "CreateAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "alert rule"
        required: true
        schema:
          $ref: "#/definitions/AlertRuleCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-rules/schema:
    get:
      tags:
      - "alert-rules"
      description: "get alert rule schema"
      operationId: "GetAlertRuleSchema"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleSchemaResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-rules/{rule_id}:
    get:
      tags:
      - "alert-rules"
      description: "get alert rule"
      operationId: "GetAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "alert-rules"
      description: "delete alert rule"
      operationId: "DeleteAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "alert-rules"
      description: "set alert rule"
      operationId: "UpdateAlertRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      - in: "body"
        name: "body"
        description: "alert rule"
        required: true
        schema:
          $ref: "#/definitions/AlertRuleUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alert-rules/{rule_id}/blacklist:
    get:
      tags:
      - "alert-rules"
      description: "List all blacklist of alert rule"
      operationId: "ListAlertRuleResourceBlacklist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "blacklist"
        in: "query"
        description: "filter resource in blacklist or not"
        required: true
        type: "string"
        x-exportParamName: "Blacklist"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResourceBlacklistResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "alert-rules"
      description: "create resource blacklist of alert rule"
      operationId: "CreateAlertRuleResourceBlacklist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      - in: "body"
        name: "body"
        description: "resource blacklist"
        required: true
        schema:
          $ref: "#/definitions/UpdateAlertRuleResourceBlacklistReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertRuleResourceBlacklistResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "alert-rules"
      description: "delete resource blacklist of alert rule"
      operationId: "DeleteAlertRuleResourceBlacklist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "the id of alert rule"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RuleId"
      - in: "body"
        name: "body"
        description: "resource blacklist"
        required: true
        schema:
          $ref: "#/definitions/UpdateAlertRuleResourceBlacklistReq"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alerts/:
    get:
      tags:
      - "alerts"
      description: "List all alerts"
      operationId: "ListAlerts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "resource_type"
        in: "query"
        description: "resource type of alert"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "resource_id"
        in: "query"
        description: "resource id of alert"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ResourceId"
      - name: "alert_type"
        in: "query"
        description: "type of alert"
        required: false
        type: "string"
        x-exportParamName: "AlertType"
      - name: "acked"
        in: "query"
        description: "acked of alert"
        required: false
        type: "boolean"
        x-exportParamName: "Acked"
      - name: "resolved"
        in: "query"
        description: "resolved or not of alert"
        required: false
        type: "boolean"
        x-exportParamName: "Resolved"
      - name: "resolve_type"
        in: "query"
        description: "resolve type of alert"
        required: false
        type: "string"
        x-exportParamName: "ResolveType"
      - name: "level"
        in: "query"
        description: "level of alert"
        required: false
        type: "string"
        x-exportParamName: "Level"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "alerts"
      description: "delete alerts"
      operationId: "DeleteAlerts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "before"
        in: "query"
        description: "create time of last alert"
        required: false
        type: "string"
        x-exportParamName: "Before"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "alerts"
      description: "set the ack status of alerts"
      operationId: "DoAlerts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "alert"
        description: "the alerts action info"
        required: true
        schema:
          $ref: "#/definitions/AlertsActionReq"
        x-exportParamName: "Alert"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alerts/stats:
    get:
      tags:
      - "alerts"
      description: "count all alert"
      operationId: "CountAlerts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "acked"
        in: "query"
        description: "acked of alert"
        required: false
        type: "boolean"
        x-exportParamName: "Acked"
      - name: "resolved"
        in: "query"
        description: "resolved or not of alert"
        required: false
        type: "boolean"
        x-exportParamName: "Resolved"
      - name: "resource_type"
        in: "query"
        description: "resource type of alert"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "resource_id"
        in: "query"
        description: "resource id of alert"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ResourceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertStatsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /alerts/{alert_id}:
    put:
      tags:
      - "alerts"
      description: "set the ack status of alert"
      operationId: "DoAlert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "alert_id"
        in: "path"
        description: "the id of alert"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AlertId"
      - in: "body"
        name: "alert"
        description: "the alert action info"
        required: true
        schema:
          $ref: "#/definitions/AlertActionReq"
        x-exportParamName: "Alert"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "alerts"
      description: "Delete alert"
      operationId: "DeleteAlert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "alert_id"
        in: "path"
        description: "alert id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AlertId"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /alerts/{alert_id}:resolve:
    post:
      tags:
      - "alerts"
      description: "set the resolved status of alert"
      operationId: "ResolveAlert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "alert_id"
        in: "path"
        description: "the id of alert"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AlertId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AlertResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /auth/rsa-keys:
    post:
      tags:
      - "auth"
      description: "Create RSA key"
      operationId: "CreateRSAKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AuthRSAKeyResp"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
        500:
          description: "InternalServerError"
  /auth/security-policy:
    get:
      tags:
      - "auth"
      description: "setup auth security policy"
      operationId: "GetAuthSecurityPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AuthSecurityPolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "auth"
      description: "update auth security policy"
      operationId: "UpdateAuthSecurityPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "auth security policy info"
        required: true
        schema:
          $ref: "#/definitions/AuthSecurityPolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AuthSecurityPolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /auth/tokens:
    post:
      tags:
      - "auth"
      description: "creates temporary token for credentials"
      operationId: "CreateToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "the identity credential"
        required: true
        schema:
          $ref: "#/definitions/TokenCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "OK"
          schema:
            $ref: "#/definitions/TokenResp"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
        500:
          description: "InternalServerError"
  /auth/tokens:login:
    post:
      tags:
      - "auth"
      description: "logs in"
      operationId: "Login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "the identity credential"
        required: true
        schema:
          $ref: "#/definitions/AuthLoginReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/TokenResp"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
        500:
          description: "InternalServerError"
  /auth/tokens:logout:
    post:
      tags:
      - "auth"
      description: "logs out"
      operationId: "Logout"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-snapshots/:
    get:
      tags:
      - "block-snapshots"
      description: "List block snapshots"
      operationId: "ListBlockSnapshots"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "pool_id"
        in: "query"
        description: "pool id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - name: "block_volume_id"
        in: "query"
        description: "volume id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "reserved"
        in: "query"
        description: "show reserved snapshot or not, default not"
        required: false
        type: "boolean"
        x-exportParamName: "Reserved"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "all"
        in: "query"
        description: "show all snapshots"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnapshotsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "block-snapshots"
      description: "Create block snapshot"
      operationId: "CreateBlockSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "snapshot info"
        required: true
        schema:
          $ref: "#/definitions/SnapshotCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/SnapshotResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-snapshots/{block_snapshot_id}:
    get:
      tags:
      - "block-snapshots"
      description: "get block snapshot"
      operationId: "GetBlockSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_snapshot_id"
        in: "path"
        description: "the block snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockSnapshotId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnapshotResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-snapshots/{snapshot_id}:
    delete:
      tags:
      - "block-snapshots"
      description: "Delete block snapshot"
      operationId: "DeleteBlockSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "snapshot_id"
        in: "path"
        description: "snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SnapshotId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/SnapshotResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "block-snapshots"
      description: "Update block snapshot info"
      operationId: "UpdateSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "snapshot_id"
        in: "path"
        description: "snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SnapshotId"
      - in: "body"
        name: "body"
        description: "snapshot info"
        required: true
        schema:
          $ref: "#/definitions/SnapshotUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnapshotResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /block-volume-group-snapshots/:
    get:
      tags:
      - "block-volume-group-snapshots"
      description: "List block volume group snapshots"
      operationId: "ListBlockVolumeGroupSnapshots"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupSnapshotsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "block-volume-group-snapshots"
      description: "Create block volume group snapshot"
      operationId: "CreateBlockVolumeGroupSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "volume group snapshot info"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupSnapshotCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupSnapshotResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeGroupSnapshotResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-group-snapshots/{block_volume_group_snapshot_id}:
    get:
      tags:
      - "block-volume-group-snapshots"
      description: "get block volume group snapshot"
      operationId: "GetBlockVolumeGroupSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_snapshot_id"
        in: "path"
        description: "the block volume group snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupSnapshotId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnapshotResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "block-volume-group-snapshots"
      description: "Delete a block volume group snapshot"
      operationId: "DeleteBlockVolumeGroupSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_snapshot_id"
        in: "path"
        description: "block volume group snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupSnapshotId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeGroupSnapshotResp"
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "block-volume-group-snapshots"
      description: "Update block volume group snapshot"
      operationId: "UpdateBlockVolumeGroupSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_snapshot_id"
        in: "path"
        description: "the block volume group snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupSnapshotId"
      - in: "body"
        name: "body"
        description: "volume group snapshot info"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupSnapshotUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupSnapshotResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-groups/:
    get:
      tags:
      - "block-volume-groups"
      description: "List block volume groups"
      operationId: "ListBlockVolumeGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "block-volume-groups"
      description: "Create block volume group"
      operationId: "CreateBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "volume group info"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-groups/{block_volume_group_id}:
    get:
      tags:
      - "block-volume-groups"
      description: "get a block volume group"
      operationId: "GetBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_id"
        in: "path"
        description: "block volume group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "block-volume-groups"
      description: "Delete a block volume group"
      operationId: "DeleteBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_id"
        in: "path"
        description: "block volume group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "block-volume-groups"
      description: "Update block volume group"
      operationId: "UpdateBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_id"
        in: "path"
        description: "block volume group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupId"
      - in: "body"
        name: "body"
        description: "volume group info"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /block-volume-groups/{block_volume_group_id}/block-volumes:
    put:
      tags:
      - "block-volume-groups"
      description: "Add block volume to block volume group"
      operationId: "AddBlockVolumeToBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_id"
        in: "path"
        description: "block volume group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupId"
      - in: "body"
        name: "body"
        description: "volume ids"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupAddVolumeReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "block-volume-groups"
      description: "Remove block volume from block volume group"
      operationId: "RemoveBlockVolumeFromBlockVolumeGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_group_id"
        in: "path"
        description: "block volume group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeGroupId"
      - in: "body"
        name: "body"
        description: "volume ids"
        required: true
        schema:
          $ref: "#/definitions/VolumeGroupRemoveVolumeReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /block-volume-migration-jobs/:
    get:
      tags:
      - "block-volume-migration-jobs"
      description: "List volume migration jobs"
      operationId: "ListBlockVolumeMigrationJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "status"
        in: "query"
        description: "the status of volume migration job"
        required: false
        type: "string"
        x-exportParamName: "Status"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-migration-jobs/{block_volume_migration_job_id}:
    get:
      tags:
      - "block-volume-migration-jobs"
      description: "get a volume migration job"
      operationId: "GetBlockVolumeMigrationJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_migration_job_id"
        in: "path"
        description: "volume migration job id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeMigrationJobId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-migration-jobs/{block_volume_migration_job_id}:cancel:
    post:
      tags:
      - "block-volume-migration-jobs"
      operationId: "CancelBlockVolumeMigrationJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_migration_job_id"
        in: "path"
        description: "block volume migration job id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeMigrationJobId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volume-migration-jobs/{block_volume_migration_job_id}:update:
    post:
      tags:
      - "block-volume-migration-jobs"
      operationId: "UpdateMigration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_migration_job_id"
        in: "path"
        description: "block volume migration job id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeMigrationJobId"
      - in: "body"
        name: "body"
        description: "volume migration udpate info"
        required: true
        schema:
          $ref: "#/definitions/BlockVolumeUpdateMigrationReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/BlockVolumeMigrationJobResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /block-volumes/:
    get:
      tags:
      - "block-volumes"
      description: "List block volumes"
      operationId: "ListBlockVolumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "pool_id"
        in: "query"
        description: "The id of the pool volumes belong to"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - name: "block_snapshot_id"
        in: "query"
        description: "related snapshot id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockSnapshotId"
      - name: "name"
        in: "query"
        description: "name of volume"
        required: false
        type: "string"
        x-exportParamName: "Name"
      - name: "client_group_id"
        in: "query"
        description: "related client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      - name: "mapping_group_id"
        in: "query"
        description: "related mapping group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - name: "access_path_id"
        in: "query"
        description: "related access path id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      - name: "passive"
        in: "query"
        description: "passive or not"
        required: false
        type: "boolean"
        x-exportParamName: "Passive"
      - name: "recycled"
        in: "query"
        description: "recycled or not"
        required: false
        type: "boolean"
        x-exportParamName: "Recycled"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "all"
        in: "query"
        description: "show all volumes"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      - name: "dp_block_backup_policy_id"
        in: "query"
        description: "show volumes of specific dp block backup policy"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DpBlockBackupPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "block-volumes"
      description: "Create block volume"
      operationId: "CreateBlockVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "volume info"
        required: true
        schema:
          $ref: "#/definitions/VolumeCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/samples:
    get:
      tags:
      - "block-volumes"
      description: "Get samples of multiple block volumes"
      operationId: "BatchGetBlockVolumeSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MultiVolumesSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:
    get:
      tags:
      - "block-volumes"
      description: "get a block volume"
      operationId: "GetBlockVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "block-volumes"
      description: "Delete block volume"
      operationId: "DeleteBlockVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "bypass_trash"
        in: "query"
        description: "bypass trash or not"
        required: false
        type: "boolean"
        x-exportParamName: "BypassTrash"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "block-volumes"
      description: "Update block volume info"
      operationId: "UpdateBlockVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "volume info"
        required: true
        schema:
          $ref: "#/definitions/VolumeUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /block-volumes/{block_volume_id}/samples:
    get:
      tags:
      - "block-volumes"
      description: "get a block volume's Samples"
      operationId: "GetBlockVolumeSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:migrate:
    post:
      tags:
      - "block-volumes"
      operationId: "MigrateBlockVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "volume migration info"
        required: true
        schema:
          $ref: "#/definitions/VolumeMigrateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:rebuild-replication:
    post:
      tags:
      - "block-volumes"
      description: "Rebuild block volume replication"
      operationId: "RebuildBlockVolumeReplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "force"
        in: "query"
        description: "force rebuild or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:set-backup-protection:
    post:
      tags:
      - "block-volumes"
      description: "Set backup protection for a block volume"
      operationId: "SetBackupProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "request info"
        required: true
        schema:
          $ref: "#/definitions/VolumeBackupProtectionReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:set-crc:
    post:
      tags:
      - "block-volumes"
      description: "Set block volume crc"
      operationId: "SetBlockVolumeCrc"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "volume crc info"
        required: true
        schema:
          $ref: "#/definitions/VolumeCrcSetReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:set-replication:
    post:
      tags:
      - "block-volumes"
      description: "Set block volume replication"
      operationId: "SetBlockVolumeReplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "volume replication info"
        required: true
        schema:
          $ref: "#/definitions/VolumeReplicationSetReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:set-snapshot-protection:
    post:
      tags:
      - "block-volumes"
      description: "Set snapshot protection for a block volume"
      operationId: "SetSnapshotProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "request info"
        required: true
        schema:
          $ref: "#/definitions/VolumeSnapshotProtectionReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:suspend-replication:
    post:
      tags:
      - "block-volumes"
      description: "Suspend block volume replication"
      operationId: "SuspendBlockVolumeReplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      responses:
        202:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:unset-backup-protection:
    post:
      tags:
      - "block-volumes"
      description: "Unset backup protection for a block volume"
      operationId: "UnsetBackupProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "force"
        in: "query"
        description: "force unset or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:unset-crc:
    post:
      tags:
      - "block-volumes"
      description: "Unset block volume crc"
      operationId: "UnsetBlockVolumeCrc"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - in: "body"
        name: "body"
        description: "volume crc info"
        required: true
        schema:
          $ref: "#/definitions/VolumeCrcSetReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:unset-replication:
    post:
      tags:
      - "block-volumes"
      description: "Unset block volume replication"
      operationId: "SetBlockVolumeReplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      responses:
        202:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /block-volumes/{block_volume_id}:unset-snapshot-protection:
    post:
      tags:
      - "block-volumes"
      description: "Unset snapshot protection for a block volume"
      operationId: "UnsetSnapshotProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "path"
        description: "the block volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "force"
        in: "query"
        description: "force unset or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VolumeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /chunks/{chunk_id}:
    get:
      tags:
      - "chunks"
      description: "get an chunk"
      operationId: "GetChunk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "chunk_id"
        in: "path"
        description: "The id of the chunk"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ChunkId"
      responses:
        200:
          description: "{models.PlacementGroup}"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /client-codes/:
    get:
      tags:
      - "client-codes"
      description: "List client iqns/wwns"
      operationId: "ListClientCodes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "type"
        in: "query"
        description: "FC/iSCSI"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "unused"
        in: "query"
        description: "list unused client codes"
        required: false
        type: "boolean"
        x-exportParamName: "Unused"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientCodesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /client-groups/:
    get:
      tags:
      - "client-groups"
      description: "List client groups"
      operationId: "ListClientGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "block_volume_id"
        in: "query"
        description: "related block volume id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "client-groups"
      description: "Create a client group"
      operationId: "CreateClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "client"
        description: "client group info"
        required: true
        schema:
          $ref: "#/definitions/ClientGroupCreateReq"
        x-exportParamName: "Client"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ClientGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /client-groups/{client_group_id}:
    get:
      tags:
      - "client-groups"
      description: "get a client group"
      operationId: "GetClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "client-groups"
      description: "Delete a client"
      operationId: "DeleteClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "client-groups"
      description: "update client group"
      operationId: "UpdateClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      - in: "body"
        name: "client"
        description: "client group info"
        required: true
        schema:
          $ref: "#/definitions/ClientGroupUpdateReq"
        x-exportParamName: "Client"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ClientGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /client-lun-mappings/:
    get:
      tags:
      - "client-lun-mappings"
      description: "List client lun mappings"
      operationId: "ListClientLunMappings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "mapping_group_id"
        in: "query"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientLunMappingsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /client-lun-mappings/{client_lun_mapping_id}:
    get:
      tags:
      - "client-lun-mappings"
      description: "get a client lun mapping"
      operationId: "GetClientLunMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "client_lun_mapping_id"
        in: "path"
        description: "client lun mapping id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientLunMappingId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientLunMappingResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /clients/:
    get:
      tags:
      - "clients"
      description: "List clients"
      operationId: "ListClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "client_group_id"
        in: "query"
        description: "client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /clients/{client_id}:
    get:
      tags:
      - "clients"
      description: "Get client"
      operationId: "GetClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "client_id"
        in: "path"
        description: "client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClientResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-instances/:
    get:
      tags:
      - "cloud-instances"
      description: "List cloud instances"
      operationId: "ListCloudInstances"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "cloud_platform_id"
        in: "query"
        description: "cloud platform id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudPlatformId"
      - name: "cloud_platform_type"
        in: "query"
        description: "cloud platform type"
        required: false
        type: "string"
        x-exportParamName: "CloudPlatformType"
      - name: "cloud_platform_name"
        in: "query"
        description: "cloud platform name"
        required: false
        type: "string"
        x-exportParamName: "CloudPlatformName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudInstancesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-instances/{cloud_instance_id}:
    get:
      tags:
      - "cloud-instances"
      description: "Get a cloud instance"
      operationId: "GetCloudInstance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_instance_id"
        in: "path"
        description: "cloud instance id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudInstanceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudInstanceResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-instances/{cloud_instance_id}/samples:
    get:
      tags:
      - "cloud-instances"
      description: "get a cloud instance's Samples"
      operationId: "GetCloudInstanceSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_instance_id"
        in: "path"
        description: "cloud instance id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudInstanceId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudInstanceSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-platforms/:
    get:
      tags:
      - "cloud-platforms"
      description: "List cloud platforms"
      operationId: "ListCloudPlatforms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudPlatformsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "cloud-platforms"
      description: "Create cloud platform"
      operationId: "CreateCloudPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "cloud platform info"
        required: true
        schema:
          $ref: "#/definitions/CloudPlatformCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/CloudPlatformResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-platforms/{cloud_platform_id}:
    get:
      tags:
      - "cloud-platforms"
      description: "Get a cloud platform"
      operationId: "GetCloudPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_platform_id"
        in: "path"
        description: "cloud platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudPlatformId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudPlatformResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "cloud-platforms"
      description: "Delete cloud platform"
      operationId: "DeleteCloudPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_platform_id"
        in: "path"
        description: "cloud platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudPlatformId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "cloud-platforms"
      description: "Update a cloud platform"
      operationId: "UpdateCloudPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_platform_id"
        in: "path"
        description: "cloud platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudPlatformId"
      - in: "body"
        name: "body"
        description: "cloud platform info"
        required: true
        schema:
          $ref: "#/definitions/CloudPlatformUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudPlatformResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cloud-platforms/{cloud_platform_id}:sync:
    post:
      tags:
      - "cloud-platforms"
      description: "Sync a cloud platform"
      operationId: "SyncCloudPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_platform_id"
        in: "path"
        description: "cloud platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudPlatformId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/CloudPlatformResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cloud-volume-attachments/:
    get:
      tags:
      - "cloud-volume-attachments"
      description: "List cloud volume attachments"
      operationId: "ListCloudVolumeAttachments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "cloud_instance_id"
        in: "query"
        description: "cloud instance id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudInstanceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudVolumeAttachmentsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-volumes/:
    get:
      tags:
      - "cloud-volumes"
      description: "List cloud volumes"
      operationId: "ListCloudVolumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "cloud_instance_id"
        in: "query"
        description: "cloud instance id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudInstanceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudVolumesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cloud-volumes/{cloud_volume_id}:
    get:
      tags:
      - "cloud-volumes"
      description: "Get a cloud volume"
      operationId: "GetCloudVolume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cloud_volume_id"
        in: "path"
        description: "cloud volume id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CloudVolumeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CloudVolumeResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cluster/:
    get:
      tags:
      - "cluster"
      description: "Output the status of the cluster"
      operationId: "Cluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterRecordResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "cluster"
      description: "set disk lighting mode of cluster"
      operationId: "UpdateCluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "cluster disk lighting info"
        required: true
        schema:
          $ref: "#/definitions/ClusterUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/action-log-report:
    get:
      tags:
      - "cluster"
      description: "Get report of cluster action logs"
      operationId: "GetActionLogReport"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/alert-report:
    get:
      tags:
      - "cluster"
      description: "Get report of cluster alerts"
      operationId: "GetAlertReport"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cluster/bootnode:
    get:
      tags:
      - "cluster"
      description: "get bootnode info"
      operationId: "BootNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BootNodeResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "cluster"
      description: "set bootnode info"
      operationId: "SetBootNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "bootnode info"
        required: true
        schema:
          $ref: "#/definitions/BootNodeReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BootNodeResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/BootNodeResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/event-log-report:
    get:
      tags:
      - "cluster"
      description: "Get report of cluster event logs"
      operationId: "GetEventLogReport"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/installation:
    get:
      tags:
      - "cluster"
      description: "show the installation status"
      operationId: "Installation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterInstallationResp"
        500:
          description: "InternalServerError"
  /cluster/maintenance:
    put:
      tags:
      - "cluster"
      description: "update maintenance mode of cluster"
      operationId: "UpdateClusterMaintenance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "cluster maintenance info"
        required: true
        schema:
          $ref: "#/definitions/ClusterMaintainReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/object-storage:
    get:
      tags:
      - "cluster"
      description: "Get object storage system status"
      operationId: "GetObjectStorage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "cluster"
      description: "Initialize object storage system in current cluster"
      operationId: "InitObjectStorage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "init info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageInitReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "cluster"
      description: "Delete object storage system in current cluster"
      operationId: "DeleteObjectStorage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        409:
          description: "Conflicted"
        500:
          description: "Server Error"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "cluster"
      description: "Set object storage system in current cluster"
      operationId: "SetObjectStorage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "set info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageSetReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/object-storage:commit-master-switching:
    post:
      tags:
      - "cluster"
      description: "Commit the switch to new master os zone."
      operationId: "CommitMasterSwitching"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cluster/object-storage:enable-multi-zone:
    post:
      tags:
      - "cluster"
      description: "Enable multi zone for object storage system"
      operationId: "EnableMultiZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cluster/object-storage:prepare-master-switching:
    post:
      tags:
      - "cluster"
      description: "Prepare to switch to new master os zone."
      operationId: "PrepareMasterSwitching"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/object-storage:rollback-master-switching:
    post:
      tags:
      - "cluster"
      description: "Rollback the switch to new master os zone."
      operationId: "RollbackMasterSwitching"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /cluster/object-storage:switch-os-zone-to-master:
    post:
      tags:
      - "cluster"
      description: "Switch current os zone to master"
      operationId: "SwitchOSZoneToMaster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "force"
        in: "query"
        description: "force to switch even if old master is dead"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/report:
    get:
      tags:
      - "cluster"
      description: "Get report of a cluster"
      operationId: "GetClusterReport"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/samples:
    get:
      tags:
      - "cluster"
      description: "get cluster's samples"
      operationId: "GetClusterSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterSamplesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/stats:
    get:
      tags:
      - "cluster"
      description: "Get overview data of a cluster"
      operationId: "GetClusterOverview"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterOverviewResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/stats-usage-prediction:
    get:
      tags:
      - "cluster"
      description: "Get prediction of stats space usage"
      operationId: "GetStatsUsagePrediction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterStatsPredictionResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster/time:
    get:
      tags:
      - "cluster"
      description: "show current server time"
      operationId: "ServerTime"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterServerTimeResp"
  /cluster:remove-access-info:
    post:
      tags:
      - "cluster"
      description: "Remove cluster access info"
      operationId: "RemoveClusterAccessInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /cluster:set-access-info:
    post:
      tags:
      - "cluster"
      description: "Set cluster access info"
      operationId: "SetClusterAccessInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "access info"
        required: true
        schema:
          $ref: "#/definitions/ClusterSetAccessInfoReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ClusterResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /confs/:
    put:
      tags:
      - "confs"
      description: "set conf item"
      operationId: "SetConfItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "conf item"
        required: true
        schema:
          $ref: "#/definitions/ConfItemSetReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ConfItem"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /confs/{type}:
    get:
      tags:
      - "confs"
      description: "List conf items"
      operationId: "ListConfItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "type"
        in: "path"
        description: "filter the type of conf"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ConfItemsResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "confs"
      description: "set conf items"
      operationId: "SetConfItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "filter the type of conf"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - in: "body"
        name: "body"
        description: "conf items"
        required: true
        schema:
          $ref: "#/definitions/ConfItemsSetReq"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /confs/{type}/{key}:
    get:
      tags:
      - "confs"
      description: "get conf item"
      operationId: "GetConfItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "filter the type of conf"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "key"
        in: "path"
        description: "filter the key of conf item"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ConfItemResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "confs"
      description: "delete conf item"
      operationId: "DeleteConfItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "filter the type of conf item"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "key"
        in: "path"
        description: "filter the key of conf item"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /crypto-keys/:
    get:
      tags:
      - "crypto-keys"
      description: "List crypto keys"
      operationId: "ListCryptoKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CryptoKeysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "crypto-keys"
      description: "Create a crypto key"
      operationId: "CreateCryptoKey"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "name"
        in: "formData"
        description: "crypto key name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "key"
        in: "formData"
        description: "crypto key"
        required: false
        type: "string"
        x-exportParamName: "Key"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CryptoKeyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /crypto-keys/{key_id}:
    get:
      tags:
      - "crypto-keys"
      description: "Get a crypto key"
      operationId: "GetCryptoKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "crypto key id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CryptoKeyResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "crypto-keys"
      description: "Update a crypto key"
      operationId: "UpdateCryptoKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "crypto key id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      - in: "body"
        name: "body"
        description: "crypto key info"
        required: true
        schema:
          $ref: "#/definitions/CryptoKeyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CryptoKeyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /crypto-keys/{key_id}/key:
    get:
      tags:
      - "crypto-keys"
      operationId: "DownloadCryptoKey"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "key_id"
        in: "path"
        description: "crypto key id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      - name: "password"
        in: "query"
        description: "password"
        required: false
        type: "string"
        x-exportParamName: "Password"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /disks/:
    get:
      tags:
      - "disks"
      description: "List all pyhsical disks in the system"
      operationId: "ListDisks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "is_cache"
        in: "query"
        description: "filter cache disk"
        required: false
        type: "boolean"
        x-exportParamName: "IsCache"
      - name: "used"
        in: "query"
        description: "filter used"
        required: false
        type: "boolean"
        x-exportParamName: "Used"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DisksResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /disks/{disk_id}:
    get:
      tags:
      - "disks"
      description: "Get a disk"
      operationId: "GetDisk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "disk_id"
        in: "path"
        description: "disk id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DiskResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "disks"
      description: "update disk info"
      operationId: "UpdateDisk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "disk_id"
        in: "path"
        description: "disk id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      - in: "body"
        name: "disk"
        description: "disk info"
        required: true
        schema:
          $ref: "#/definitions/DiskUpdateReq"
        x-exportParamName: "Disk"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DiskResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /disks/{disk_id}/partitions:
    put:
      tags:
      - "disks"
      description: "create cache partitions for disk"
      operationId: "CreatePartitions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "disk_id"
        in: "path"
        description: "disk id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      - name: "num"
        in: "query"
        description: "num of partitions to create"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Num"
      - in: "body"
        name: "body"
        description: "partitions info"
        required: true
        schema:
          $ref: "#/definitions/PartitionsCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DiskResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "disks"
      description: "delete cache partitions of disk"
      operationId: "DeletePartitions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "disk_id"
        in: "path"
        description: "disk id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DiskResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /disks/{disk_id}/samples:
    get:
      tags:
      - "disks"
      description: "get a disk's samples"
      operationId: "GetDiskSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "disk_id"
        in: "path"
        description: "disk id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DiskSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /domain-user-validators/:
    post:
      tags:
      - "domain-user-validators"
      description: "Create domain user validator"
      operationId: "CreateDomainUserValidator"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "domain user validator info"
        required: true
        schema:
          $ref: "#/definitions/DomainUserValidatorCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DomainUserValidatorResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /domain-user-validators/{domain_user_validator_id}:
    get:
      tags:
      - "domain-user-validators"
      description: "Get domain_user validator"
      operationId: "GetDomainUserValidator"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "domain_user_validator_id"
        in: "path"
        description: "domain user validator id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DomainUserValidatorId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DomainUserValidatorResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-backup-jobs/:
    get:
      tags:
      - "dp-block-backup-jobs"
      description: "List dp block backup jobs"
      operationId: "ListDpBlockBackupJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "block_volume_id"
        in: "query"
        description: "block volume"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "block_snapshot_id"
        in: "query"
        description: "object storage bucket"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockSnapshotId"
      - name: "dp_block_backup_policy_id"
        in: "query"
        description: "dp block backup policy"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DpBlockBackupPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockBackupJobsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-backup-policies/:
    get:
      tags:
      - "dp-block-backup-policies"
      description: "List dp block backup policies"
      operationId: "ListDpBlockBackupPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "block_volume_id"
        in: "query"
        description: "show dp block backup policies of specific block volume"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockBackupPoliciesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-block-backup-policies"
      description: "Create dp block backup policy"
      operationId: "CreateDpBlockBackupPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockBackupPolicyCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockBackupPolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /dp-block-backup-policies/{policy_id}:
    get:
      tags:
      - "dp-block-backup-policies"
      description: "Get dp block backup policy"
      operationId: "GetDpBlockBackupPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockBackupPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-block-backup-policies"
      description: "Delete dp block backup policy"
      operationId: "DeleteDpBlockBackupPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockBackupPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "dp-block-backup-policies"
      description: "Update dp block backup policy"
      operationId: "UpdateDpBlockBackupPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockBackupPolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockBackupPolicyResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockBackupPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-replication-policies/:
    get:
      tags:
      - "dp-block-replication-policies"
      description: "List dp block replication policies"
      operationId: "ListDpBlockReplicationPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockReplicationPoliciesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-block-replication-policies"
      description: "Create dp block replication policy"
      operationId: "CreateDpBlockReplicationPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockReplicationPolicyCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockReplicationPolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-replication-policies/{policy_id}:
    get:
      tags:
      - "dp-block-replication-policies"
      description: "Get dp block replication policy"
      operationId: "GetDpBlockReplicationPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockReplicationPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-block-replication-policies"
      description: "Delete dp block replication policy"
      operationId: "DeleteDpBlockReplicationPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "policy id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        204:
          description: "NoContent"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "dp-block-replication-policies"
      description: "Update dp block replication policy"
      operationId: "UpdateDpBlockReplicationPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockReplicationPolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockReplicationPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-snapshot-jobs/:
    get:
      tags:
      - "dp-block-snapshot-jobs"
      description: "List dp block snapshot jobs"
      operationId: "ListDpBlockSnapshotJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "block_volume_id"
        in: "query"
        description: "block volume"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "block_snapshot_id"
        in: "query"
        description: "object storage bucket"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockSnapshotId"
      - name: "dp_block_snapshot_policy_id"
        in: "query"
        description: "dp block snapshot policy"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DpBlockSnapshotPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotJobsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-snapshot-policies/:
    get:
      tags:
      - "dp-block-snapshot-policies"
      description: "List dp block snapshot policies"
      operationId: "ListDpBlockSnapshotPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPoliciesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-block-snapshot-policies"
      description: "Create dp block snapshot policy"
      operationId: "CreateDpBlockSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockSnapshotPolicyCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-snapshot-policies/{policy_id}:
    get:
      tags:
      - "dp-block-snapshot-policies"
      description: "Get dp block snapshot policy"
      operationId: "GetDpBlockSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-block-snapshot-policies"
      description: "Delete dp block snapshot policy"
      operationId: "DeleteDpBlockSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "dp-block-snapshot-policies"
      description: "Update dp block snapshot policy"
      operationId: "UpdateDpBlockSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockSnapshotPolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPolicyResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-block-snapshot-recovery-jobs/:
    get:
      tags:
      - "dp-block-snapshot-recovery-jobs"
      description: "List dp block snapshot recovery jobs"
      operationId: "ListDpBlockSnapshotRecoveryJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotRecoveryJobsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-block-snapshot-recovery-jobs"
      description: "Create a dp block snapshot recovery job"
      operationId: "CreateDpBlockSnapshotRecoveryJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "resource info"
        required: true
        schema:
          $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpBlockSnapshotRecoveryJobResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /dp-block-snapshot-recovery-jobs/{job_id}:
    get:
      tags:
      - "dp-block-snapshot-recovery-jobs"
      description: "Get a dp block snapshot recovery job"
      operationId: "GetDpBlockSnapshotRecoveryJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "JobId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBlockSnapshotRecoveryJobResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    delete:
      tags:
      - "dp-block-snapshot-recovery-jobs"
      description: "Delete a dp block snapshot recovery job"
      operationId: "DeleteDpBlockSnapshotRecoveryJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "JobId"
      responses:
        204:
          description: "NoContent"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-fs-snapshot-jobs/:
    get:
      tags:
      - "dp-fs-snapshot-jobs"
      description: "List dp fs snapshot jobs"
      operationId: "ListDpFSSnapshotJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_folder_id"
        in: "query"
        description: "fs folder"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "fs_snapshot_id"
        in: "query"
        description: "fs snapshot"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSnapshotId"
      - name: "dp_fs_snapshot_policy_id"
        in: "query"
        description: "dp fs snapshot policy"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DpFsSnapshotPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpFSSnapshotJobsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-fs-snapshot-jobs/{job_id}:
    get:
      tags:
      - "dp-fs-snapshot-jobs"
      description: "Get dp fs snapshot job"
      operationId: "GetDpFSSnapshotJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "JobId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpFSSnapshotJobResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-fs-snapshot-policies/:
    get:
      tags:
      - "dp-fs-snapshot-policies"
      description: "List dp fs snapshot policies"
      operationId: "ListDpFSSnapshotPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpFSSnapshotPoliciesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-fs-snapshot-policies"
      description: "Create dp fs snapshot policy"
      operationId: "CreateDpFSSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpFSSnapshotPolicyCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpFSSnapshotPolicyResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-fs-snapshot-policies/{policy_id}:
    get:
      tags:
      - "dp-fs-snapshot-policies"
      description: "Get dp fs snapshot policy"
      operationId: "GetDpFSSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpFSSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-fs-snapshot-policies"
      description: "Delete dp fs snapshot policy"
      operationId: "DeleteDpFSSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpFSSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "dp-fs-snapshot-policies"
      description: "Update dp fs snapshot policy"
      operationId: "UpdateDpFSSnapshotPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/DpFSSnapshotPolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpFSSnapshotPolicyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-gateways/:
    get:
      tags:
      - "dp-gateways"
      description: "List dp gateways"
      operationId: "ListDpGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpGatewaysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-gateways"
      description: "Create a dp gateway"
      operationId: "CreateDpGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "dp gateway info"
        required: true
        schema:
          $ref: "#/definitions/DpGatewayCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpGatewayResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-gateways/{gateway_id}:
    get:
      tags:
      - "dp-gateways"
      description: "Get dp gateway"
      operationId: "GetDpGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "dp gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpGatewayResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-gateways"
      description: "Delete dp gateway"
      operationId: "DeleteDpGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "dp gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/DpGatewayResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "dp-gateways"
      description: "Update a dp gateway"
      operationId: "UpdateDpGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "dp gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - in: "body"
        name: "body"
        description: "dp gateway info"
        required: true
        schema:
          $ref: "#/definitions/DpGatewayUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpGatewayResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-sites/:
    get:
      tags:
      - "dp-sites"
      description: "List data protection sites"
      operationId: "ListDpSites"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "protection_type"
        in: "query"
        description: "protection type"
        required: false
        type: "string"
        x-exportParamName: "ProtectionType"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpSitesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "dp-sites"
      description: "Create a data protection site"
      operationId: "CreateDpSite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "dp site info"
        required: true
        schema:
          $ref: "#/definitions/DpSiteCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/DpSiteResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-sites/{site_id}:
    get:
      tags:
      - "dp-sites"
      description: "Get data protection site"
      operationId: "GetDpSite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "protection site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpSiteResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "dp-sites"
      description: "Delete data protection site"
      operationId: "DeleteDpSite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "dp site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "dp-sites"
      description: "Update a data protection site"
      operationId: "UpdateDpSite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "dp site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      - in: "body"
        name: "body"
        description: "dp site info"
        required: true
        schema:
          $ref: "#/definitions/DpSiteUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpSiteResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-sites/{site_id}/backup-block-snapshots:
    get:
      tags:
      - "dp-sites"
      description: "List snapshots of a volume stored on a dp site"
      operationId: "GetBackupBlockSnapshots"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "dp site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      - name: "dp_gateway_id"
        in: "query"
        description: "the dp gateway to execute the query"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DpGatewayId"
      - name: "cluster_fs_id"
        in: "query"
        description: "cluster fs id"
        required: true
        type: "string"
        x-exportParamName: "ClusterFsId"
      - name: "block_volume_name"
        in: "query"
        description: "block volume name"
        required: true
        type: "string"
        x-exportParamName: "BlockVolumeName"
      - name: "after"
        in: "query"
        description: "continuation token"
        required: false
        type: "string"
        x-exportParamName: "After"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBackupBlockSnapshotsResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /dp-sites/{site_id}/backup-block-volumes:
    get:
      tags:
      - "dp-sites"
      description: "List volumes of a cluster stored on a dp site"
      operationId: "GetBackupBlockVolumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "dp site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      - name: "dp_gateway_id"
        in: "query"
        description: "the dp gateway to execute the query"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DpGatewayId"
      - name: "cluster_fs_id"
        in: "query"
        description: "cluster fs id"
        required: true
        type: "string"
        x-exportParamName: "ClusterFsId"
      - name: "after"
        in: "query"
        description: "continuation token"
        required: false
        type: "string"
        x-exportParamName: "After"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBackupBlockVolumesResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /dp-sites/{site_id}/backup-clusters:
    get:
      tags:
      - "dp-sites"
      description: "List clusters stored on a dp site"
      operationId: "GetBackupClusters"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "dp site id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SiteId"
      - name: "dp_gateway_id"
        in: "query"
        description: "the dp gateway to execute the query"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DpGatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DpBackupClustersResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /email-groups/:
    get:
      tags:
      - "email-groups"
      description: "List all email groups"
      operationId: "ListEmailGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "alert_group_id"
        in: "query"
        description: "alert group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AlertGroupId"
      - name: "name"
        in: "query"
        description: "name of email groups"
        required: false
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "email-groups"
      description: "create email group"
      operationId: "CreateEmailGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "email group"
        required: true
        schema:
          $ref: "#/definitions/EmailGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /email-groups/{group_id}:
    get:
      tags:
      - "email-groups"
      description: "get email group"
      operationId: "GetEmailGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of email group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "email-groups"
      description: "update email group"
      operationId: "UpdateEmailGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of email group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "email group"
        required: true
        schema:
          $ref: "#/definitions/EmailGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "email-groups"
      description: "delete email group"
      operationId: "DeleteEmailGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "the id of email group"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /emails/:
    post:
      tags:
      - "emails"
      description: "send email"
      operationId: "SendEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "email info"
        required: true
        schema:
          $ref: "#/definitions/EmailSendReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /emails/config:
    get:
      tags:
      - "emails"
      description: "setup email configs"
      operationId: "GetEmailConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailConfigResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "emails"
      description: "setup email configs"
      operationId: "UpdateEmailConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "email config info"
        required: true
        schema:
          $ref: "#/definitions/EmailConfigUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EmailConfigResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /event-logs/:
    get:
      tags:
      - "event-logs"
      description: "List event logs"
      operationId: "ListEventLogs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "status"
        in: "query"
        description: "status of event logs"
        required: false
        type: "string"
        x-exportParamName: "Status"
      - name: "resource_type"
        in: "query"
        description: "resource type of event logs"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EventLogsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-active-directories/:
    get:
      tags:
      - "fs-active-directories"
      description: "List file storage active directories"
      operationId: "ListFSActiveDirectories"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSActiveDirectoriesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-active-directories"
      description: "create file storage active directory"
      operationId: "CreateFSActiveDirectory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "file storage active directory info"
        required: true
        schema:
          $ref: "#/definitions/FSActiveDirectoryCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSActiveDirectoryResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-active-directories/{fs_active_directory_id}:
    get:
      tags:
      - "fs-active-directories"
      description: "Get a file storage active directory"
      operationId: "GetFSActiveDirectory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_active_directory_id"
        in: "path"
        description: "file storage active directory id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsActiveDirectoryId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSActiveDirectoryResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-active-directories"
      description: "Delete file storage active directory"
      operationId: "DeleteFSActiveDirectory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_active_directory_id"
        in: "path"
        description: "file storage active directory id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsActiveDirectoryId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSActiveDirectoryResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-active-directories"
      description: "Update a file storage active directory"
      operationId: "UpdateFSActiveDirectory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_active_directory_id"
        in: "path"
        description: "file storage active directory id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsActiveDirectoryId"
      - in: "body"
        name: "body"
        description: "file storage active directory info"
        required: true
        schema:
          $ref: "#/definitions/FSActiveDirectoryUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSActiveDirectoryResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-active-directories/{fs_active_directory_id}:verify:
    post:
      tags:
      - "fs-active-directories"
      description: "Verify a fs active directory or user/group info"
      operationId: "VerifyFSActiveDirectory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_active_directory_id"
        in: "path"
        description: "file storage active directory id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsActiveDirectoryId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSActiveDirectoryResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-arbitration-pools/:
    get:
      tags:
      - "fs-arbitration-pools"
      description: "List file storage arbitration pools"
      operationId: "ListFSArbitrationPools"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSArbitrationPoolsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-arbitration-pools"
      description: "create file storage arbitration pool"
      operationId: "CreateFSArbitrationPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "file system arbitration pool info"
        required: true
        schema:
          $ref: "#/definitions/FSArbitrationPoolCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FSArbitrationPoolResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-arbitration-pools/{fs_arbitration_pool_id}:
    get:
      tags:
      - "fs-arbitration-pools"
      description: "Get file storage arbitration pool"
      operationId: "GetFSArbitrationPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_arbitration_pool_id"
        in: "path"
        description: "file storage arbitration pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsArbitrationPoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSArbitrationPoolResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-arbitration-pools"
      description: "Delete file storage arbitration pool"
      operationId: "DeleteFSArbitrationPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_arbitration_pool_id"
        in: "path"
        description: "file storage arbitration pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsArbitrationPoolId"
      responses:
        204:
          description: "Not Content"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-arbitration-pools"
      description: "Update file system arbitration pool"
      operationId: "UpdateFSArbitrationPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_arbitration_pool_id"
        in: "path"
        description: "file system arbitration pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsArbitrationPoolId"
      - in: "body"
        name: "body"
        description: "file system arbitration pool info"
        required: true
        schema:
          $ref: "#/definitions/FSArbitrationPoolUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "OK"
          schema:
            $ref: "#/definitions/FSArbitrationPoolResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-client-groups/:
    get:
      tags:
      - "fs-client-groups"
      description: "List file storage client groups"
      operationId: "ListFSClientGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_client_id"
        in: "query"
        description: "file storage client id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientGroupsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-client-groups"
      description: "Create file storage client group"
      operationId: "CreateFSClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "client group info"
        required: true
        schema:
          $ref: "#/definitions/FSClientGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FSClientGroupResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-client-groups/{fs_client_group_id}:
    get:
      tags:
      - "fs-client-groups"
      description: "Get file storage client group"
      operationId: "GetFSClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-client-groups"
      description: "delete file storage client group"
      operationId: "DeleteFSClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      responses:
        204:
          description: "Not Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "fs-client-groups"
      description: "Update file storage client group"
      operationId: "UpdateFSClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      - in: "body"
        name: "body"
        description: "client group info"
        required: true
        schema:
          $ref: "#/definitions/FSClientGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-client-groups/{fs_client_group_id}/fs-clients:
    put:
      tags:
      - "fs-client-groups"
      description: "add clients to file storage client group"
      operationId: "AddFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      - in: "body"
        name: "body"
        description: "clients info"
        required: true
        schema:
          $ref: "#/definitions/FSClientGroupAddClientsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-client-groups"
      description: "remove clients from file storage client group"
      operationId: "RemoveFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_group_id"
        in: "path"
        description: "client group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      - in: "body"
        name: "body"
        description: "clients info"
        required: true
        schema:
          $ref: "#/definitions/FSClientGroupRemoveClientsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-clients/:
    get:
      tags:
      - "fs-clients"
      description: "List file storage clients"
      operationId: "ListFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_client_group_id"
        in: "query"
        description: "file storage client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      - name: "not_fs_client_group_id"
        in: "query"
        description: "group id the client don't belong to"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "NotFsClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-clients"
      description: "Create file storage client"
      operationId: "CreateFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "client info"
        required: true
        schema:
          $ref: "#/definitions/FSClientCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FSClientResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-clients/{fs_client_id}:
    get:
      tags:
      - "fs-clients"
      description: "Get file storage client"
      operationId: "GetFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_id"
        in: "path"
        description: "client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-clients"
      description: "delete file storage client"
      operationId: "DeleteFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_id"
        in: "path"
        description: "client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientId"
      responses:
        204:
          description: "Not Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-clients"
      description: "Update file storage client"
      operationId: "UpdateFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_client_id"
        in: "path"
        description: "client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientId"
      - in: "body"
        name: "body"
        description: "client info"
        required: true
        schema:
          $ref: "#/definitions/FSClientUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSClientResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/:
    get:
      tags:
      - "fs-folders"
      description: "List file storage folders"
      operationId: "ListFolders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_user_id"
        in: "query"
        description: "file storage user id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserId"
      - name: "fs_user_group_id"
        in: "query"
        description: "file storage user group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "file storage gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "fs_snapshot_id"
        in: "query"
        description: "file storage snapshot id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSnapshotId"
      - name: "fs_client_id"
        in: "query"
        description: "file storage client id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientId"
      - name: "fs_client_group_id"
        in: "query"
        description: "file storage client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsClientGroupId"
      - name: "pool_id"
        in: "query"
        description: "pool id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFoldersResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-folders"
      description: "Create file storage folder"
      operationId: "CreateFolder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "folder info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFolderResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}:
    get:
      tags:
      - "fs-folders"
      description: "Get file storage folder"
      operationId: "GetFolder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFolderResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-folders"
      description: "delete file storage folder"
      operationId: "DeleteFolder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "force"
        in: "query"
        description: "force delete"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - name: "fs_folder_id"
        in: "path"
        description: "folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-folders"
      description: "Update file storage folder"
      operationId: "UpdateFolder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - in: "body"
        name: "body"
        description: "folder info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}/fs-quota-trees:
    put:
      tags:
      - "fs-folders"
      description: "add file storage quota trees"
      operationId: "AddFSQuotaTrees"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "fs folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - in: "body"
        name: "body"
        description: "quota trees info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderAddQuotaTreesReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-folders"
      description: "delete fs quota trees from fs folder"
      operationId: "RemoveFSQuotaTrees"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "fs folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - in: "body"
        name: "body"
        description: "quota trees info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderRemoveQuotaTreesReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}/samples:
    get:
      tags:
      - "fs-folders"
      description: "get a file storage folder's samples"
      operationId: "GetFSFolderSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "file storage folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFolderSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}:roll-back:
    post:
      tags:
      - "fs-folders"
      description: "roll back file storage folder"
      operationId: "RollBackFolder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "folder id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - in: "body"
        name: "body"
        description: "folder info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderRollBackReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}:set-snapshot-protection:
    post:
      tags:
      - "fs-folders"
      description: "Set snapshot protection for a fs folder"
      operationId: "SetFSSnapshotProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "fs folder id in db"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - in: "body"
        name: "body"
        description: "request info"
        required: true
        schema:
          $ref: "#/definitions/FSFolderSnapshotProtectionReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-folders/{fs_folder_id}:unset-snapshot-protection:
    post:
      tags:
      - "fs-folders"
      description: "Unset snapshot protection for a fs folder"
      operationId: "UnsetFSSnapshotProtection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_folder_id"
        in: "path"
        description: "fs_folder id in db"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "force"
        in: "query"
        description: "force unset or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFolderResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-sessions/:
    get:
      tags:
      - "fs-ftp-sessions"
      description: "List fs ftp sessions"
      operationId: "ListFSFTPSessions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_ftp_share_id"
        in: "query"
        description: "fs ftp share id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFTPSessionsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-share-acls/:
    get:
      tags:
      - "fs-ftp-share-acls"
      description: "List fs ftp share acls"
      operationId: "ListFSFTPShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_ftp_share_id"
        in: "query"
        description: "fs ftp share id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFTPShareACLsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-shares/:
    get:
      tags:
      - "fs-ftp-shares"
      description: "List fs ftp shares"
      operationId: "ListFSFTPShares"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_folder_id"
        in: "query"
        description: "fs smb id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "fs gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFTPSharesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-ftp-shares"
      description: "Create fs ftp share"
      operationId: "CreateFSFTPShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "share info"
        required: true
        schema:
          $ref: "#/definitions/FSFTPShareCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-shares/{fs_ftp_share_id}:
    get:
      tags:
      - "fs-ftp-shares"
      description: "Get fs ftp share"
      operationId: "GetFSFTPShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ftp_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-ftp-shares"
      description: "delete fs ftp share"
      operationId: "DeleteFSFTPShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ftp_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-shares/{fs_ftp_share_id}:add-acls:
    post:
      tags:
      - "fs-ftp-shares"
      description: "Add fs ftp share acls"
      operationId: "AddFSFTPShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ftp_share_id"
        in: "path"
        description: "fs ftp share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - in: "body"
        name: "body"
        description: "ftp share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSFTPShareAddACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-shares/{fs_ftp_share_id}:remove-acls:
    post:
      tags:
      - "fs-ftp-shares"
      description: "remove fs ftp share acls"
      operationId: "RemoveFSFTPShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ftp_share_id"
        in: "path"
        description: "fs ftp share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSFTPShareRemoveACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ftp-shares/{fs_ftp_share_id}:update-acls:
    post:
      tags:
      - "fs-ftp-shares"
      description: "Update fs ftp share acls"
      operationId: "UpdateFSFTPShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ftp_share_id"
        in: "path"
        description: "ftp share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFtpShareId"
      - in: "body"
        name: "body"
        description: "ftp share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSFTPShareUpdateACLsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSFTPShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateway-groups/:
    get:
      tags:
      - "fs-gateway-groups"
      description: "List file storage gateway groups"
      operationId: "ListFSGatewayGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "type"
        in: "query"
        description: "type of file storage gateway group"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "security"
        in: "query"
        description: "security of file storage gateway group"
        required: false
        type: "string"
        x-exportParamName: "Security"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSGatewayGroupsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-gateway-groups"
      description: "Create file storage gateway group"
      operationId: "CreateFSGatewayGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "gateway group info"
        required: true
        schema:
          $ref: "#/definitions/FSGatewayGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateway-groups/{fs_gateway_group_id}:
    get:
      tags:
      - "fs-gateway-groups"
      description: "Get file storage gateway group"
      operationId: "GetFSGatewayGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_group_id"
        in: "path"
        description: "gateway group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-gateway-groups"
      description: "delete file storage gateway group"
      operationId: "DeleteFSGatewayGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_group_id"
        in: "path"
        description: "gateway group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-gateway-groups"
      description: "Update file storage gateway group"
      operationId: "UpdateFSGatewayGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_group_id"
        in: "path"
        description: "gateway group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - in: "body"
        name: "body"
        description: "gateway group info"
        required: true
        schema:
          $ref: "#/definitions/FSGatewayGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateway-groups/{fs_gateway_group_id}:add-gateways:
    post:
      tags:
      - "fs-gateway-groups"
      description: "add file storage gateways"
      operationId: "AddFSGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_group_id"
        in: "path"
        description: "gateway group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - in: "body"
        name: "body"
        description: "gateways info"
        required: true
        schema:
          $ref: "#/definitions/FSGatewayGroupAddGatewaysReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateway-groups/{fs_gateway_group_id}:remove-gateways:
    post:
      tags:
      - "fs-gateway-groups"
      description: "remove gateways from gateway group"
      operationId: "RemoveFSGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_group_id"
        in: "path"
        description: "gateway group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - in: "body"
        name: "body"
        description: "gateways info"
        required: true
        schema:
          $ref: "#/definitions/FSGatewayGroupRemoveGatewaysReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSGatewayGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateways/:
    get:
      tags:
      - "fs-gateways"
      description: "List file storage gateways"
      operationId: "ListFSGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "file storage gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSGatewaysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-gateways/{fs_gateway_id}:
    get:
      tags:
      - "fs-gateways"
      description: "Get file storage gateway"
      operationId: "GetFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSGatewayResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-ldaps/:
    get:
      tags:
      - "fs-ldaps"
      description: "List file storage ldaps"
      operationId: "ListFSLdaps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSLdapsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-ldaps"
      description: "create file storage ldap"
      operationId: "CreateFSLdap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "file storage ldap info"
        required: true
        schema:
          $ref: "#/definitions/FSLdapCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSLdapResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-ldaps/{fs_ldap_id}:
    get:
      tags:
      - "fs-ldaps"
      description: "Get a file storage ldap"
      operationId: "GetFSLdap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ldap_id"
        in: "path"
        description: "file storage ldap id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsLdapId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSLdapResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-ldaps"
      description: "Delete file storage ldap"
      operationId: "DeleteFSLdap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ldap_id"
        in: "path"
        description: "file storage ldap id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsLdapId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-ldaps"
      description: "Update a file storage ldap"
      operationId: "UpdateFSLdap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ldap_id"
        in: "path"
        description: "file storage ldap id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsLdapId"
      - in: "body"
        name: "body"
        description: "file storage ldap info"
        required: true
        schema:
          $ref: "#/definitions/FSLdapUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSLdapResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-ldaps/{fs_ldap_id}:verify:
    post:
      tags:
      - "fs-ldaps"
      description: "Verify a file storage ldap"
      operationId: "VerifyFSLdap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_ldap_id"
        in: "path"
        description: "file storage ldap id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsLdapId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSLdapResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-nfs-connections/:
    get:
      tags:
      - "fs-nfs-connections"
      description: "List fs nfs connections"
      operationId: "ListFSNFSConnections"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_nfs_share_id"
        in: "query"
        description: "fs nfs id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSNFSConnectionsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-nfs-share-acls/:
    get:
      tags:
      - "fs-nfs-share-acls"
      description: "List fs nfs shares acls"
      operationId: "ListFSNFSShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_nfs_share_id"
        in: "query"
        description: "fs nfs shares id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSNFSShareACLsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-nfs-shares/:
    get:
      tags:
      - "fs-nfs-shares"
      description: "List fs nfs sharess"
      operationId: "ListFSNFSShares"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_folder_id"
        in: "query"
        description: "fs nfs id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "file storage gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSNFSSharesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-nfs-shares"
      description: "Create fs nfs shares"
      operationId: "CreateFSNFSShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "share info"
        required: true
        schema:
          $ref: "#/definitions/FSNFSShareCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-nfs-shares/{fs_nfs_share_id}:
    get:
      tags:
      - "fs-nfs-shares"
      description: "Get fs nfs shares"
      operationId: "GetFSNFSShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_nfs_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-nfs-shares"
      description: "delete fs nfs shares"
      operationId: "DeleteFSNFSShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_nfs_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-nfs-shares/{fs_nfs_share_id}:add-acls:
    post:
      tags:
      - "fs-nfs-shares"
      description: "Add fs nfs shares acls"
      operationId: "AddFSNFSShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_nfs_share_id"
        in: "path"
        description: "fs nfs shares id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSNFSShareAddACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-nfs-shares/{fs_nfs_share_id}:remove-acls:
    post:
      tags:
      - "fs-nfs-shares"
      description: "remove fs nfs shares acls"
      operationId: "RemoveFSNFSShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_nfs_share_id"
        in: "path"
        description: "fs nfs shares id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSNFSShareRemoveACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-nfs-shares/{fs_nfs_share_id}:update-acls:
    post:
      tags:
      - "fs-nfs-shares"
      description: "Update fs nfs share acls"
      operationId: "UpdateFSNFSShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_nfs_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsNfsShareId"
      - in: "body"
        name: "body"
        description: "share info"
        required: true
        schema:
          $ref: "#/definitions/FSNFSShareUpdateACLsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSNFSShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-quota-trees/:
    get:
      tags:
      - "fs-quota-trees"
      description: "List file storage quota trees"
      operationId: "ListQuotaTrees"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_folder_id"
        in: "query"
        description: "file storage folder id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSQuotaTreesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-quota-trees/{fs_quota_tree_id}:
    get:
      tags:
      - "fs-quota-trees"
      description: "Get file storage quota tree"
      operationId: "GetQuotaTree"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_quota_tree_id"
        in: "path"
        description: "quota tree id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsQuotaTreeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSQuotaTreeResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-quota-trees"
      description: "Update file storage quota tree"
      operationId: "UpdateQuotaTree"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_quota_tree_id"
        in: "path"
        description: "quota tree id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsQuotaTreeId"
      - in: "body"
        name: "body"
        description: "quota tree info"
        required: true
        schema:
          $ref: "#/definitions/FSQuotaTreeUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSQuotaTreeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-smb-sessions/:
    get:
      tags:
      - "fs-smb-sessions"
      description: "List fs smb sessions"
      operationId: "ListFSSMBSessions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_smb_share_id"
        in: "query"
        description: "fs smb id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBSessionsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-smb-share-acls/:
    get:
      tags:
      - "fs-smb-share-acls"
      description: "List fs smb share acls"
      operationId: "ListFSSMBShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_smb_share_id"
        in: "query"
        description: "fs smb share id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBShareACLsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-smb-shares/:
    get:
      tags:
      - "fs-smb-shares"
      description: "List fs smb shares"
      operationId: "ListFSSMBShares"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "fs_folder_id"
        in: "query"
        description: "fs folder id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "fs gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBSharesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-smb-shares"
      description: "Create fs smb share"
      operationId: "CreateFSSMBShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "share info"
        required: true
        schema:
          $ref: "#/definitions/FSSMBShareCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-smb-shares/{fs_smb_share_id}:
    get:
      tags:
      - "fs-smb-shares"
      description: "Get fs smb share"
      operationId: "GetFSSMBShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-smb-shares"
      description: "delete fs smb share"
      operationId: "DeleteFSSMBShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-smb-shares"
      description: "Update fs smb share"
      operationId: "UpdateFSSMBShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - in: "body"
        name: "body"
        description: "share info"
        required: true
        schema:
          $ref: "#/definitions/FSSMBShareUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-smb-shares/{fs_smb_share_id}:add-acls:
    post:
      tags:
      - "fs-smb-shares"
      description: "Add fs smb share acls"
      operationId: "AddFSSMBShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "fs smb share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSSMBShareAddACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /fs-smb-shares/{fs_smb_share_id}:remove-acls:
    post:
      tags:
      - "fs-smb-shares"
      description: "remove fs smb share acls"
      operationId: "RemoveFSSMBShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "fs smb share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSSMBShareRemoveACLsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-smb-shares/{fs_smb_share_id}:update-acls:
    post:
      tags:
      - "fs-smb-shares"
      description: "Update fs smb share ACL"
      operationId: "UpdateFSSMBShareACLs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_smb_share_id"
        in: "path"
        description: "share id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSmbShareId"
      - in: "body"
        name: "body"
        description: "share acls info"
        required: true
        schema:
          $ref: "#/definitions/FSSMBShareUpdateACLsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSMBShareResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-snapshots/:
    get:
      tags:
      - "fs-snapshots"
      description: "List file storage snapshots"
      operationId: "ListFSSnapshots"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_folder_id"
        in: "query"
        description: "file storage folder id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsFolderId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSnapshotsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-snapshots"
      description: "Create file storage snapshot"
      operationId: "CreateFSSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "snapshot info"
        required: true
        schema:
          $ref: "#/definitions/FSSnapshotCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSnapshotResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-snapshots/{fs_snapshot_id}:
    get:
      tags:
      - "fs-snapshots"
      description: "Get file storage snapshot"
      operationId: "GetFSSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_snapshot_id"
        in: "path"
        description: "file storage snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSnapshotId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSnapshotResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-snapshots"
      description: "delete file storage snapshot"
      operationId: "DeleteFSSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_snapshot_id"
        in: "path"
        description: "snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSnapshotId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/FSSnapshotResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-snapshots"
      description: "Update file storage snapshot"
      operationId: "UpdateFSSnapshot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_snapshot_id"
        in: "path"
        description: "snapshot id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsSnapshotId"
      - in: "body"
        name: "body"
        description: "snapshot info"
        required: true
        schema:
          $ref: "#/definitions/FSSnapshotUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSSnapshotResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-user-groups/:
    get:
      tags:
      - "fs-user-groups"
      description: "List file storage user groups"
      operationId: "ListFSUserGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "type"
        in: "query"
        description: "security type of file storage user group"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "fs_user_id"
        in: "query"
        description: "file storage user id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserGroupsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-user-groups"
      description: "Create file storage user group"
      operationId: "CreateFSUserGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user group info"
        required: true
        schema:
          $ref: "#/definitions/FSUserGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FSUserGroupResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-user-groups/{fs_user_group_id}:
    get:
      tags:
      - "fs-user-groups"
      description: "Get file storage user group"
      operationId: "GetFSUserGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_group_id"
        in: "path"
        description: "user group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-user-groups"
      description: "delete file storage user group"
      operationId: "DeleteFSUserGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_group_id"
        in: "path"
        description: "user group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      responses:
        204:
          description: "Not Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-user-groups"
      description: "Update file storage user group"
      operationId: "UpdateFSUserGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_group_id"
        in: "path"
        description: "user group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      - in: "body"
        name: "body"
        description: "user group info"
        required: true
        schema:
          $ref: "#/definitions/FSUserGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-user-groups/{fs_user_group_id}/fs-users:
    put:
      tags:
      - "fs-user-groups"
      description: "add users to file storage user group"
      operationId: "AddFSUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_group_id"
        in: "path"
        description: "user group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      - in: "body"
        name: "body"
        description: "users info"
        required: true
        schema:
          $ref: "#/definitions/FSUserGroupAddUsersReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-user-groups"
      description: "remove users from file storage user group"
      operationId: "RemoveFSUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_group_id"
        in: "path"
        description: "user group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      - in: "body"
        name: "body"
        description: "users info"
        required: true
        schema:
          $ref: "#/definitions/FSUserGroupRemoveUsersReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-users/:
    get:
      tags:
      - "fs-users"
      description: "List file storage users"
      operationId: "ListFSUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "security"
        in: "query"
        description: "security of file storage users"
        required: false
        type: "string"
        x-exportParamName: "Security"
      - name: "fs_user_group_id"
        in: "query"
        description: "file storage user group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserGroupId"
      - name: "not_fs_user_group_id"
        in: "query"
        description: "file storage user group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "NotFsUserGroupId"
      - name: "available"
        in: "query"
        description: "available user or not"
        required: false
        type: "boolean"
        x-exportParamName: "Available"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUsersResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "fs-users"
      description: "create file storage user"
      operationId: "CreateFSUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/FSUserCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FSUserResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /fs-users/{fs_user_id}:
    get:
      tags:
      - "fs-users"
      description: "get file storage user"
      operationId: "GetFSUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "fs-users"
      description: "delete file storage user"
      operationId: "DeleteFSUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserId"
      responses:
        204:
          description: "Not Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "fs-users"
      description: "update file storage user"
      operationId: "UpdateFSUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fs_user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "FsUserId"
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/FSUserUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FSUserResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /host-enc-specs/:
    get:
      tags:
      - "host-enc-specs"
      description: "List host enclosure specs"
      operationId: "ListHostEncSpecs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "model"
        in: "query"
        description: "host model"
        required: false
        type: "string"
        x-exportParamName: "Model"
      - name: "vendor"
        in: "query"
        description: "host vendor"
        required: false
        type: "string"
        x-exportParamName: "Vendor"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostEncSpecsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "host-enc-specs"
      description: "Create a host enclosure spec"
      operationId: "CreateHostEncSpec"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "host enclosure spec info"
        required: true
        schema:
          $ref: "#/definitions/HostEncSpecCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/HostEncSpecResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /host-enc-specs/{spec_id}:
    get:
      tags:
      - "host-enc-specs"
      description: "Get host enclosure spec"
      operationId: "GetHostEncSpec"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "spec_id"
        in: "path"
        description: "host enclosure spec id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SpecId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostEncSpecResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "host-enc-specs"
      description: "Delete a host enclosure spec"
      operationId: "DeleteHostEncSpec"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "spec_id"
        in: "path"
        description: "host enclosure spec id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SpecId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /host-info/:
    get:
      tags:
      - "host-info"
      description: "scan host info from specified ip"
      operationId: "GetHostInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ip"
        in: "query"
        description: "host ip"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostInfoResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /host-initializations/:
    post:
      tags:
      - "host-initializations"
      description: "Create host initialization"
      operationId: "HostInitialization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "host initialization info"
        required: true
        schema:
          $ref: "#/definitions/HostInitializationReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/HostInitializationResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /host-validators/:
    post:
      tags:
      - "host-validators"
      description: "Create host validator"
      operationId: "CreateHostValidator"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "host validator info"
        required: true
        schema:
          $ref: "#/definitions/HostValidatorCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/HostValidatorResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /host-validators/{host_validator_id}:
    get:
      tags:
      - "host-validators"
      description: "Get host validator"
      operationId: "GetHostValidator"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_validator_id"
        in: "path"
        description: "host validator id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostValidatorId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostValidatorResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /hosts/:
    get:
      tags:
      - "hosts"
      description: "List hosts by fileter"
      operationId: "ListHosts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "protection_domain_id"
        in: "query"
        description: "protection domain id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ProtectionDomainId"
      - name: "hostname"
        in: "query"
        description: "host name"
        required: false
        type: "string"
        x-exportParamName: "Hostname"
      - name: "type"
        in: "query"
        description: "if it existed, value should be xdcactive"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "role"
        in: "query"
        description: "filter by host role"
        required: false
        type: "string"
        x-exportParamName: "Role"
      - name: "fc_available"
        in: "query"
        description: "available host with fc port"
        required: false
        type: "boolean"
        x-exportParamName: "FcAvailable"
      - name: "replication_gateway_available"
        in: "query"
        description: "available host for replication gateway"
        required: false
        type: "boolean"
        x-exportParamName: "ReplicationGatewayAvailable"
      - name: "fs_gateway_group_id"
        in: "query"
        description: "file storage gateway group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FsGatewayGroupId"
      - name: "fs_gateway_group_used"
        in: "query"
        description: "used in file storage gateway group"
        required: false
        type: "boolean"
        x-exportParamName: "FsGatewayGroupUsed"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "hosts"
      description: "check env and install packages"
      operationId: "CreateHost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "host info"
        required: true
        schema:
          $ref: "#/definitions/HostCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/HostResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /hosts/{host_id}:
    get:
      tags:
      - "hosts"
      description: "get a host info"
      operationId: "GetHost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_id"
        in: "path"
        description: "the host id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "hosts"
      description: "delete host"
      operationId: "DeleteHost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_id"
        in: "path"
        description: "host id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/HostResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "hosts"
      description: "update host info"
      operationId: "UpdateHost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_id"
        in: "path"
        description: "host id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - in: "body"
        name: "body"
        description: "host info"
        required: true
        schema:
          $ref: "#/definitions/HostUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /hosts/{host_id}/samples:
    get:
      tags:
      - "hosts"
      description: "get a host's samples"
      operationId: "GetHostSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "host_id"
        in: "path"
        description: "host id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HostSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /identity-platforms/:
    get:
      tags:
      - "identity-platforms"
      description: "List identity platforms"
      operationId: "ListIdentityPlatforms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IdentityPlatformsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "identity-platforms"
      description: "Create identity platform"
      operationId: "CreateIdentityPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "identity platform info"
        required: true
        schema:
          $ref: "#/definitions/IdentityPlatformCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/IdentityPlatformResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /identity-platforms/{identity_platform_id}:
    get:
      tags:
      - "identity-platforms"
      description: "Get a identity platform"
      operationId: "GetIdentityPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "identity_platform_id"
        in: "path"
        description: "identity platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "IdentityPlatformId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IdentityPlatformResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "identity-platforms"
      description: "Delete identity platform"
      operationId: "DeleteIdentityPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "identity_platform_id"
        in: "path"
        description: "identity platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "IdentityPlatformId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "identity-platforms"
      description: "Update a identity platform"
      operationId: "UpdateIdentityPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "identity_platform_id"
        in: "path"
        description: "identity platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "IdentityPlatformId"
      - in: "body"
        name: "body"
        description: "identity platform info"
        required: true
        schema:
          $ref: "#/definitions/IdentityPlatformUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IdentityPlatformResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /identity-platforms/{identity_platform_id}:regenerate:
    post:
      tags:
      - "identity-platforms"
      description: "regenereate a identity platform key"
      operationId: "RegenerateIdentityKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "identity_platform_id"
        in: "path"
        description: "identity platform id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "IdentityPlatformId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IdentityPlatformResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /licenses/:
    get:
      tags:
      - "licenses"
      description: "List licenses"
      operationId: "ListLicenses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "active"
        in: "query"
        description: "filter license by active status"
        required: false
        type: "boolean"
        x-exportParamName: "Active"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LicensesResp"
        500:
          description: "InternalServerError"
    post:
      tags:
      - "licenses"
      description: "Activate product license"
      operationId: "RegisterLicense"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "force"
        in: "query"
        description: "force activate"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - name: "license"
        in: "formData"
        description: "license info"
        required: true
        type: "file"
        x-exportParamName: "License"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LicenseResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /licenses/key:
    get:
      tags:
      - "licenses"
      description: "get license key file"
      operationId: "DownloadLicenseKey"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
  /licenses/license:
    get:
      tags:
      - "licenses"
      description: "get current active license"
      operationId: "GetActiveLicense"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LicenseResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /licenses/{license_id}:
    get:
      tags:
      - "licenses"
      description: "get license"
      operationId: "GetLicense"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "license_id"
        in: "path"
        description: "the license id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LicenseId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LicenseResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /luns/:
    get:
      tags:
      - "luns"
      description: "List luns"
      operationId: "ListLuns"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "mapping_group_id"
        in: "query"
        description: "mapping group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LunsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /luns/{lun_id}:
    get:
      tags:
      - "luns"
      description: "get a lun"
      operationId: "GetLun"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "lun_id"
        in: "path"
        description: "lun id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LunId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LunResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /mapping-groups/:
    get:
      tags:
      - "mapping-groups"
      description: "List mapping groups"
      operationId: "ListMappingGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "access_path_id"
        in: "query"
        description: "access path id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      - name: "client_group_id"
        in: "query"
        description: "client group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "mapping-groups"
      description: "create a mapping group in access path"
      operationId: "CreateMappingGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mapping_group"
        description: "mapping info"
        required: true
        schema:
          $ref: "#/definitions/MappingGroupCreateReq"
        x-exportParamName: "MappingGroup"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /mapping-groups/{mapping_group_id}:
    get:
      tags:
      - "mapping-groups"
      description: "Get mapping group by id"
      operationId: "GetMappingGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "mapping-groups"
      description: "Delete mapping group"
      operationId: "DeleteMappingGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "mapping-groups"
      description: "update mapping group"
      operationId: "UpdateMappingGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - in: "body"
        name: "mapping_group"
        description: "mapping info"
        required: true
        schema:
          $ref: "#/definitions/MappingGroupUpdateReq"
        x-exportParamName: "MappingGroup"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /mapping-groups/{mapping_group_id}/block-volumes:
    post:
      tags:
      - "mapping-groups"
      description: "add volumes to mapping group"
      operationId: "AddVolumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - in: "body"
        name: "block_volume_ids"
        description: "block volume ids"
        required: true
        schema:
          $ref: "#/definitions/MappingGroupAddVolumesReq"
        x-exportParamName: "BlockVolumeIds"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "mapping-groups"
      description: "remove volumes from mapping group"
      operationId: "RemoveVolumes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - in: "body"
        name: "block_volume_ids"
        description: "block volume ids"
        required: true
        schema:
          $ref: "#/definitions/MappingGroupRemoveVolumesReq"
        x-exportParamName: "BlockVolumeIds"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /mapping-groups/{mapping_group_id}/client-group:
    patch:
      tags:
      - "mapping-groups"
      description: "update client group in mapping group"
      operationId: "UpdateMappingGroupClientGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mapping_group_id"
        in: "path"
        description: "mapping group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MappingGroupId"
      - in: "body"
        name: "client_group_id"
        description: "client group id"
        required: true
        schema:
          $ref: "#/definitions/MappingGroupUpdateClientGroupReq"
        x-exportParamName: "ClientGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/MappingGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-addresses/:
    get:
      tags:
      - "network-addresses"
      description: "List network addresses"
      operationId: "ListNetworkAddresses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "network_interface_id"
        in: "query"
        description: "network interface id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkInterfaceId"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "role"
        in: "query"
        description: "network address role"
        required: false
        type: "string"
        x-exportParamName: "Role"
      - name: "vip_group_id"
        in: "query"
        description: "vip group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAddressesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-addresses/{network_address_id}:
    get:
      tags:
      - "network-addresses"
      description: "Get a network address"
      operationId: "GetNetworkAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_address_id"
        in: "path"
        description: "network address id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkAddressId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkAddressResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-diagnoses/:
    get:
      tags:
      - "network-diagnoses"
      description: "List network diagnoses"
      operationId: "ListNetworkDiagnoses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkDiagnosesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    post:
      tags:
      - "network-diagnoses"
      description: "Create network diagnosis"
      operationId: "CreateNetworkDiagnosis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "network diagnosis info"
        required: true
        schema:
          $ref: "#/definitions/NetworkDiagnosisCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkDiagnosisResp"
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/NetworkDiagnosisResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-diagnoses/{network_diagnosis_id}:
    get:
      tags:
      - "network-diagnoses"
      description: "Get network diagnosis"
      operationId: "GetNetworkDiagnosis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_diagnosis_id"
        in: "path"
        description: "network diagnosis id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkDiagnosisId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkDiagnosisResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "network-diagnoses"
      description: "delete network diagnosis"
      operationId: "DeleteNetworkDiagnosis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_diagnosis_id"
        in: "path"
        description: "network diagnosis id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkDiagnosisId"
      responses:
        204:
          description: "Not Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-diagnoses/{network_diagnosis_id}:stop:
    post:
      tags:
      - "network-diagnoses"
      description: "stop network diagnosis"
      operationId: "StopNetworkDiagnosis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_diagnosis_id"
        in: "path"
        description: "network diagnosis id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkDiagnosisId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkDiagnosisResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /network-diagnosis-items/:
    get:
      tags:
      - "network-diagnosis-items"
      description: "List network diagnosis items"
      operationId: "ListNetworkDiagnosisItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "networks"
        in: "query"
        description: "network type"
        required: false
        type: "string"
        x-exportParamName: "Networks"
      - name: "finished"
        in: "query"
        description: "diagnosis item finished or not"
        required: false
        type: "boolean"
        x-exportParamName: "Finished"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkDiagnosisItemsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-interfaces/:
    get:
      tags:
      - "network-interfaces"
      description: "List network interfaces"
      operationId: "ListNetworkInterfaces"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "master_network_interface_id"
        in: "query"
        description: "master network interface id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "MasterNetworkInterfaceId"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "role"
        in: "query"
        description: "network interface role"
        required: false
        type: "string"
        x-exportParamName: "Role"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkInterfacesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /network-interfaces/{network_interface_id}:
    get:
      tags:
      - "network-interfaces"
      description: "Get a network interface"
      operationId: "GetNetworkInterface"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_interface_id"
        in: "path"
        description: "network interface id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkInterfaceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkInterfaceResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /network-interfaces/{network_interface_id}/samples:
    get:
      tags:
      - "network-interfaces"
      description: "get a network interface's Samples"
      operationId: "GetNetworkInterfaceSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "network_interface_id"
        in: "path"
        description: "network interface id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetworkInterfaceId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkInterfaceSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateway-bucket-maps/:
    get:
      tags:
      - "nfs-gateway-bucket-maps"
      description: "List nfs gateway s3 bucket maps"
      operationId: "ListNFSGatewayS3BucketMaps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "nfs_gateway_id"
        in: "query"
        description: "nfs gateway id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "NfsGatewayId"
      - name: "os_bucket_id"
        in: "query"
        description: "s3 bucket id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsBucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateways/:
    get:
      tags:
      - "nfs-gateways"
      description: "List all nfs gateways"
      operationId: "ListNFSGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewaysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "nfs-gateways"
      description: "create nfs gateway"
      operationId: "CreateNFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "nfs gateway info"
        required: true
        schema:
          $ref: "#/definitions/NFSGatewayCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateways/{gateway_id}:
    get:
      tags:
      - "nfs-gateways"
      description: "show nfs gateway"
      operationId: "GetNFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "nfs-gateways"
      description: "start/stop nfs gateway"
      operationId: "DoNFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "force"
        in: "query"
        description: "force stop or no"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - in: "body"
        name: "body"
        description: "nfs gateway action info"
        required: true
        schema:
          $ref: "#/definitions/NFSGatewayActionReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    delete:
      tags:
      - "nfs-gateways"
      description: "delete nfs gateway"
      operationId: "DeleteNFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "nfs-gateways"
      description: "update nfs gateway"
      operationId: "UpdateNFSGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - in: "body"
        name: "body"
        description: "nfs gateway info"
        required: true
        schema:
          $ref: "#/definitions/NFSGatewayUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateways/{gateway_id}/buckets:
    get:
      tags:
      - "nfs-gateways"
      description: "List nfs gateway bucket maps"
      operationId: "ListNFSGatewayBucketMaps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateways/{gateway_id}/buckets/{bucket_id}:
    get:
      tags:
      - "nfs-gateways"
      description: "get nfs gateway bucket map"
      operationId: "GetNFSGatewayBucketMap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "nfs-gateways"
      description: "add bucket to nfs gateway"
      operationId: "CreateNFSGatewayBucketMap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    delete:
      tags:
      - "nfs-gateways"
      description: "remove bucket from nfs gateway"
      operationId: "DeleteNFSGatewayBucketMap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "force"
        in: "query"
        description: "force delete or no"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "nfs-gateways"
      description: "update nfs gateway bucket"
      operationId: "UpdateNFSGatewayBucketMap"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "nfs gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "nfs gateway bucket update info"
        required: true
        schema:
          $ref: "#/definitions/NFSGatewayBucketMapUpdateReq"
        x-exportParamName: "Body"
      - name: "force"
        in: "query"
        description: "force update bucket map"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/NFSGatewayBucketMapResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /nfs-gateways/{gateway_id}/samples:
    get:
      tags:
      - "nfs-gateways"
      description: "Get nfs gateway's samples"
      operationId: "GetNFSGatewaySamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NFSGatewaySamplesResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-bucket-loggings/:
    get:
      tags:
      - "os-bucket-loggings"
      description: "List os bucket loggings"
      operationId: "ListOSBucketLoggings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "source_bucket_name"
        in: "query"
        description: "source bucket name"
        required: false
        type: "string"
        x-exportParamName: "SourceBucketName"
      - name: "target_bucket_name"
        in: "query"
        description: "target bucket name"
        required: false
        type: "string"
        x-exportParamName: "TargetBucketName"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSBucketLoggingsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/:
    get:
      tags:
      - "os-buckets"
      description: "List object storage buckets"
      operationId: "ListBuckets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "name"
        in: "query"
        description: "name of object storage buckets"
        required: false
        type: "string"
        x-exportParamName: "Name"
      - name: "os_policy_id"
        in: "query"
        description: "The id of policy object storage buckets belong to"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsPolicyId"
      - name: "os_user_id"
        in: "query"
        description: "The id of user object storage buckets belong to"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsUserId"
      - name: "replication_uuid"
        in: "query"
        description: "The uuid of replication os buckets belong to"
        required: false
        type: "string"
        x-exportParamName: "ReplicationUuid"
      - name: "virtual"
        in: "query"
        description: "Virtual bucket or not"
        required: false
        type: "boolean"
        x-exportParamName: "Virtual"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-buckets"
      description: "Create os bucket"
      operationId: "CreateBucket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "bucket info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageBucketCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/samples:
    get:
      tags:
      - "os-buckets"
      description: "Get samples of multiple object storage buckets"
      operationId: "BatchGetObjectStorageSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ids"
        in: "query"
        description: "bucket ids"
        required: true
        type: "string"
        x-exportParamName: "Ids"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MultiObjectStorageBucketsSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:
    get:
      tags:
      - "os-buckets"
      description: "Get object storage bucket"
      operationId: "GetBucket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-buckets"
      description: "delete object storage bucket"
      operationId: "DeleteBucket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-buckets"
      description: "Update object storage bucket"
      operationId: "UpdateBucket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "bucket info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageBucketUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}/lifecycle:
    put:
      tags:
      - "os-buckets"
      description: "Set object storage lifecycle rules"
      operationId: "SetObjectStorageLifecycleRules"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "lifecyce rules info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageLifecycleSetReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-buckets"
      description: "delete object storage lifecycle"
      operationId: "DeleteObjectStorageLifecycle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}/nfs-clients:
    get:
      tags:
      - "os-buckets"
      description: "List nfs clients"
      operationId: "ListObjectStorageBucketNFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketNFSClientsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-buckets"
      description: "create nfs client"
      operationId: "CreateObjectStorageBucketNFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "nfs client info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageBucketNFSClientsCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RawObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/RawObjectStorageBucketResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-buckets"
      description: "delete nfs clients"
      operationId: "DeleteObjectStorageBucketNFSClients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "nfs client info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageBucketNFSClientsDeleteReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RawObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/RawObjectStorageBucketResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}/nfs-clients/{client_id}:
    get:
      tags:
      - "os-buckets"
      description: "show nfs client"
      operationId: "GetObjectStorageBucketNFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "client_id"
        in: "path"
        description: "nfs client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketNFSClientResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-buckets"
      description: "update nfs client"
      operationId: "UpdateObjectStorageBucketNFSClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "client_id"
        in: "path"
        description: "nfs client id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      - in: "body"
        name: "body"
        description: "nfs client info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageBucketNFSClientUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketNFSClientResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketNFSClientResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}/samples:
    get:
      tags:
      - "os-buckets"
      description: "get an object storage bucket's Samples"
      operationId: "GetObjectStorageBucketSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:add-custom-labels:
    post:
      tags:
      - "os-buckets"
      description: "add object storage bucket custom labels"
      operationId: "AddCustomLabels"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "bucket custom labels info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketCustomLabelsAddReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:add-os-replication-paths:
    post:
      tags:
      - "os-buckets"
      description: "add os replication paths for os bucket"
      operationId: "AddOSReplicationPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "replication paths info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketAddReplicationPathsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:add-os-replication-zones:
    post:
      tags:
      - "os-buckets"
      description: "add os replication zones for os bucket"
      operationId: "AddOSReplicationZones"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "replication zones info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketAddReplicationZonesReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:remove-custom-labels:
    post:
      tags:
      - "os-buckets"
      description: "remove object storage bucket custom labels"
      operationId: "RemoveCustomLabels"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "object storage bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "custom labels info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketCustomLabelsRemoveReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:remove-os-bucket-loggings:
    post:
      tags:
      - "os-buckets"
      description: "Remove os bucket loggings of os bucket"
      operationId: "RemoveOSBucketLoggings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "os bucket loggings info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketRemoveLoggingsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:remove-os-replication-paths:
    post:
      tags:
      - "os-buckets"
      description: "remove os replication paths for os bucket"
      operationId: "RemoveOSReplicationPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "replication paths info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketRemoveReplicationPathsReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:remove-os-replication-zones:
    post:
      tags:
      - "os-buckets"
      description: "remove os replication zones for os bucket"
      operationId: "RemoveOSReplicationZones"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "force"
        in: "query"
        description: "force delete os replication zone even if target zone is dead"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - in: "body"
        name: "body"
        description: "replication zones info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketRemoveReplicationZonesReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:set-access-logging:
    post:
      tags:
      - "os-buckets"
      description: "Set access logging of os bucket"
      operationId: "SetAccessLogging"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "access logging info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketSetAccessLoggingReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:set-bucket-policy:
    post:
      tags:
      - "os-buckets"
      description: "set object storage bucket policy"
      operationId: "SetOSBucketPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "bucket policy info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketPolicySetReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-buckets/{bucket_id}:set-metadata-search:
    post:
      tags:
      - "os-buckets"
      description: "set object storage bucket metadata search"
      operationId: "SetMetadataSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "object storage bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "bucket metadata search info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketMetadataSearchSetReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketsResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:suspend-access-logging:
    post:
      tags:
      - "os-buckets"
      description: "suspend access logging for os bucket"
      operationId: "SuspendAccessLoggings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:suspend-os-replication-paths:
    post:
      tags:
      - "os-buckets"
      description: "suspend os replication paths for os bucket"
      operationId: "SuspendOSReplicationPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "replication paths info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketUpdateReplicationPathsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:switch-owner-os-zone:
    post:
      tags:
      - "os-buckets"
      description: "Switch owner zone of os bucket"
      operationId: "SwitchOwnerOSZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "force"
        in: "query"
        description: "force to switch even if old owner zone is dead"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - in: "body"
        name: "body"
        description: "new owner os zone info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketSwitchOwnerOSZoneReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:unset-access-logging:
    post:
      tags:
      - "os-buckets"
      description: "Unset access logging of os bucket"
      operationId: "UnsetAccessLogging"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:unset-bucket-policy:
    post:
      tags:
      - "os-buckets"
      description: "unset object storage bucket policy"
      operationId: "UnsetOSBucketPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:unsuspend-access-logging:
    post:
      tags:
      - "os-buckets"
      description: "unsuspend access logging for os bucket"
      operationId: "UnsuspendAccessLogging"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:unsuspend-os-replication-paths:
    post:
      tags:
      - "os-buckets"
      description: "unsuspend os replication paths for os bucket"
      operationId: "UnsuspendOSReplicationPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "replication paths info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketUpdateReplicationPathsReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-buckets/{bucket_id}:update-custom-labels:
    post:
      tags:
      - "os-buckets"
      description: "update object storage bucket custom labels"
      operationId: "UpdateCustomLabels"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "path"
        description: "object storage bucket id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - in: "body"
        name: "body"
        description: "custom labels info"
        required: true
        schema:
          $ref: "#/definitions/OSBucketCustomLabelsUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageBucketResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-custom-labels/:
    get:
      tags:
      - "os-custom-labels"
      description: "List object storage custom labels"
      operationId: "ListOSCustomLabels"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucket_id"
        in: "query"
        description: "bucket id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BucketId"
      - name: "category"
        in: "query"
        description: "label category: meta, default, tagging"
        required: false
        type: "string"
        x-exportParamName: "Category"
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSCustomLabelsResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-custom-labels/{os_custom_label_id}:
    get:
      tags:
      - "os-custom-labels"
      description: "Get object storage custom label"
      operationId: "GetOSCustomLabel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_custom_label_id"
        in: "path"
        description: "os custom label id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsCustomLabelId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSCustomLabelResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-external-storage-classes/:
    get:
      tags:
      - "os-external-storage-classes"
      description: "List os external storage classes"
      operationId: "ListOSExternalStorageClasses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "os_policy_id"
        in: "query"
        description: "os policy id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsPolicyId"
      - name: "general_status"
        in: "query"
        description: "query records with active or error status"
        required: false
        type: "boolean"
        x-exportParamName: "GeneralStatus"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSExternalStorageClassesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-external-storage-classes"
      description: "Create os external storage class"
      operationId: "CreateExternalStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "external storage class info"
        required: true
        schema:
          $ref: "#/definitions/OSExternalStorageClassCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSExternalStorageClassResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-external-storage-classes/{external_storage_class_id}:
    get:
      tags:
      - "os-external-storage-classes"
      description: "Get a os external storage class"
      operationId: "GetOSExternalStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "external_storage_class_id"
        in: "path"
        description: "external storage class id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ExternalStorageClassId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSExternalStorageClassResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-external-storage-classes"
      description: "Delete an os external storage class"
      operationId: "DeleteOSExternalStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "external_storage_class_id"
        in: "path"
        description: "external storage class id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ExternalStorageClassId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSExternalStorageClassResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-external-storage-classes"
      description: "update os external storage class"
      operationId: "UpdateOSExternalStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "external_storage_class_id"
        in: "path"
        description: "external storage class id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ExternalStorageClassId"
      - in: "body"
        name: "body"
        description: "external storage class info"
        required: true
        schema:
          $ref: "#/definitions/OSExternalStorageClassUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSExternalStorageClassResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSExternalStorageClassResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-gateways/:
    get:
      tags:
      - "os-gateways"
      description: "List s3 gateways"
      operationId: "ListGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageGatewaysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-gateways"
      description: "Create s3 gateway"
      operationId: "CreateGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "gateway info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageGatewayCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageGatewayResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-gateways/{gateway_id}:
    get:
      tags:
      - "os-gateways"
      description: "Get s3 gateway"
      operationId: "GetGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageGatewayResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    put:
      tags:
      - "os-gateways"
      description: "Update s3 gateway"
      operationId: "UpdateGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - in: "body"
        name: "body"
        description: "gateway info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageGatewayUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageGatewayResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageGatewayResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-gateways"
      description: "Delete s3 gateway"
      operationId: "DeleteGateway"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageGatewayResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-gateways/{gateway_id}/samples:
    get:
      tags:
      - "os-gateways"
      description: "Get s3 gateway's samples"
      operationId: "GetGatewaySamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageGatewaySamplesResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-keys/:
    get:
      tags:
      - "os-keys"
      description: "List object storage keys"
      operationId: "ListKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "user_id"
        in: "query"
        description: "object storage user id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageKeysResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-keys"
      description: "Create new object storage key"
      operationId: "CreateKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "key info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageKeyCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageKeyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-keys/{key_id}:
    get:
      tags:
      - "os-keys"
      description: "get object storage key"
      operationId: "GetKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageKeyResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-keys"
      description: "Delete object storage key"
      operationId: "DeleteKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "key id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageKeyResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-keys"
      description: "Update object storage key"
      operationId: "UpdateKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "key id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "KeyId"
      - in: "body"
        name: "body"
        description: "key info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageKeyUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageKeyResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-lifecycles/:
    get:
      tags:
      - "os-lifecycles"
      description: "List object storage lifecycles"
      operationId: "ListLifecycles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageLifecyclesResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-lifecycles/{lifecycle_id}:
    get:
      tags:
      - "os-lifecycles"
      description: "Get object storage lifecycle"
      operationId: "GetLifecycle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "lifecycle_id"
        in: "path"
        description: "lifecycle id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LifecycleId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageLifecycleResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-objects/_search:
    get:
      tags:
      - "os-objects"
      description: "List object storage objects by search"
      operationId: "ListOSObjectsBySearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-objects"
      description: "List object storage objects by search"
      operationId: "ListOSObjectsBySearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-objects/_sql:
    get:
      tags:
      - "os-objects"
      description: "List object storage objects by sql"
      operationId: "ListOSObjectsBySQL"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-objects"
      description: "List object storage objects by sql"
      operationId: "ListOSObjectsBySQL"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-objects/report/_sql:
    get:
      tags:
      - "os-objects"
      description: "Download object storage objects report by sql"
      operationId: "ReportOSObjectsBySQL"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "sql"
        in: "query"
        description: "select statement"
        required: false
        type: "string"
        x-exportParamName: "Sql"
      - name: "os_buckets"
        in: "query"
        description: "name of buckets joined by colon"
        required: false
        type: "string"
        x-exportParamName: "OsBuckets"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-objects"
      description: "Download object storage objects report by sql"
      operationId: "ReportOSObjectsBySQL"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "sql"
        in: "query"
        description: "select statement"
        required: false
        type: "string"
        x-exportParamName: "Sql"
      - name: "os_buckets"
        in: "query"
        description: "name of buckets joined by colon"
        required: false
        type: "string"
        x-exportParamName: "OsBuckets"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-policies/:
    get:
      tags:
      - "os-policies"
      description: "List object storage policies"
      operationId: "ListPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStoragePoliciesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    post:
      tags:
      - "os-policies"
      description: "Create object storage policy"
      operationId: "CreatePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStoragePolicyCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStoragePolicyResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-policies/{policy_id}:
    get:
      tags:
      - "os-policies"
      description: "Get object storage policy"
      operationId: "GetPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "policy id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStoragePolicyResp"
        404:
          description: "NotFound"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-policies"
      description: "Delete object storage policy"
      operationId: "DeletePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "policy id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStoragePolicyResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-policies"
      description: "Update object storage policy"
      operationId: "UpdatePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_id"
        in: "path"
        description: "policy id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PolicyId"
      - in: "body"
        name: "body"
        description: "policy info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStoragePolicyUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStoragePolicyResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStoragePolicyResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /os-remote-policies/:
    get:
      tags:
      - "os-remote-policies"
      description: "List os remote policies"
      operationId: "ListOSRemotePolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "marker"
        in: "query"
        description: "paging param"
        required: false
        type: "string"
        x-exportParamName: "Marker"
      - name: "zone_uuid"
        in: "query"
        description: "zone uuid"
        required: false
        type: "string"
        x-exportParamName: "ZoneUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSRemotePoliciesResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-remote-policies/{policy_uuid}:
    get:
      tags:
      - "os-remote-policies"
      description: "Get a os remote policy"
      operationId: "GetOSRemotePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_uuid"
        in: "path"
        description: "policy uuid"
        required: true
        type: "string"
        x-exportParamName: "PolicyUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSRemotePolicyResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-replication-paths/:
    get:
      tags:
      - "os-replication-paths"
      description: "List os replication paths"
      operationId: "ListOSReplicationPaths"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "marker"
        in: "query"
        description: "paging param"
        required: false
        type: "string"
        x-exportParamName: "Marker"
      - name: "replication_uuid"
        in: "query"
        description: "os replication uuid"
        required: false
        type: "string"
        x-exportParamName: "ReplicationUuid"
      - name: "allow_unknown_zone"
        in: "query"
        description: "allow has nil zone result(default true)"
        required: false
        type: "boolean"
        x-exportParamName: "AllowUnknownZone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSReplicationPathsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-replication-paths/{path_uuid}:
    get:
      tags:
      - "os-replication-paths"
      description: "Get a os replication path"
      operationId: "GetOSReplicationPath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "path_uuid"
        in: "path"
        description: "replication path uuid"
        required: true
        type: "string"
        x-exportParamName: "PathUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSReplicationPathResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-replication-zones/:
    get:
      tags:
      - "os-replication-zones"
      description: "List os replication zones"
      operationId: "ListOSReplicationZones"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "marker"
        in: "query"
        description: "paging param"
        required: false
        type: "string"
        x-exportParamName: "Marker"
      - name: "replication_uuid"
        in: "query"
        description: "os replication uuid"
        required: false
        type: "string"
        x-exportParamName: "ReplicationUuid"
      - name: "os_zone_uuid"
        in: "query"
        description: "os zone uuid"
        required: false
        type: "string"
        x-exportParamName: "OsZoneUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSReplicationZoneRecordsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-replication-zones"
      description: "Create a os replication zone"
      operationId: "CreateOSReplicationZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "os replication zone info"
        required: true
        schema:
          $ref: "#/definitions/OSReplicationZoneCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSReplicationZoneResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-replication-zones/{zone_uuid}:
    get:
      tags:
      - "os-replication-zones"
      description: "Get a os replication zone"
      operationId: "GetOSReplicationZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "os replication zone uuid"
        required: true
        type: "string"
        x-exportParamName: "ZoneUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSReplicationZoneRecordResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    delete:
      tags:
      - "os-replication-zones"
      description: "Delete a os replication zone"
      operationId: "DeleteOSReplicationZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "os replication zone uuid"
        required: true
        type: "string"
        x-exportParamName: "ZoneUuid"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSReplicationZoneResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-replication-zones/{zone_uuid}/samples:
    get:
      tags:
      - "os-replication-zones"
      description: "get an os replication zone's samples"
      operationId: "GetOSReplicationZoneSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "os replication zone uuid"
        required: true
        type: "string"
        default: "true"
        x-exportParamName: "ZoneUuid"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSReplicationZoneSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-samples/:
    get:
      tags:
      - "os-samples"
      description: "Get os samples"
      operationId: "GetOSSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "time"
        in: "query"
        description: "query time(url encode RFC3339)"
        required: false
        type: "string"
        x-exportParamName: "Time"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSampleResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-samples/{user_name}:
    get:
      tags:
      - "os-samples"
      description: "Get os samples by user name"
      operationId: "GetOSSamplesByUserName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_name"
        in: "path"
        description: "os user name"
        required: true
        type: "string"
        x-exportParamName: "UserName"
      - name: "time"
        in: "query"
        description: "query time(url encode RFC3339)"
        required: false
        type: "string"
        x-exportParamName: "Time"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSampleResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-samples/{user_name}/{bucket_name}:
    get:
      tags:
      - "os-samples"
      description: "get os samples by os bucket name"
      operationId: "GetOSSamplesByBucketName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_name"
        in: "path"
        description: "os user name"
        required: true
        type: "string"
        default: "true"
        x-exportParamName: "UserName"
      - name: "bucket_name"
        in: "path"
        description: "os bucket name"
        required: true
        type: "string"
        default: "true"
        x-exportParamName: "BucketName"
      - name: "time"
        in: "query"
        description: "query time(url encode RFC3339)"
        required: false
        type: "string"
        x-exportParamName: "Time"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSampleResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/:
    get:
      tags:
      - "os-search-engines"
      description: "List OS search engine"
      operationId: "ListOSSearchEngines"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchEnginesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-search-engines"
      description: "Create OS search engine"
      operationId: "CreateOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "OS search engine info"
        required: true
        schema:
          $ref: "#/definitions/OSSearchEngineCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}:
    get:
      tags:
      - "os-search-engines"
      description: "Get a OS search engine"
      operationId: "GetOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-search-engines"
      description: "delete OS search engine"
      operationId: "DeleteOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-search-engines"
      description: "change OS search engine falvor or data size"
      operationId: "ChangeOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      - in: "body"
        name: "body"
        description: "os search gateways info"
        required: true
        schema:
          $ref: "#/definitions/OSSearchEngineUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}/samples:
    get:
      tags:
      - "os-search-engines"
      description: "get an object storage search engine's samples"
      operationId: "GetOSSearchEngineSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchEngineSamplesResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}:add-os-search-gateways:
    post:
      tags:
      - "os-search-engines"
      description: "Create new OS Search gateways on OS search engine"
      operationId: "AddOSSearchGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      - in: "body"
        name: "body"
        description: "os search gateways info"
        required: true
        schema:
          $ref: "#/definitions/OSSearchEngineAddGatewaysReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}:remove-os-search-gateways:
    post:
      tags:
      - "os-search-engines"
      description: "remove OS search gateways from OS search engine"
      operationId: "RemoveOSSearchGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      - in: "body"
        name: "body"
        description: "os search gateways info"
        required: true
        schema:
          $ref: "#/definitions/OSSearchEngineRemoveGatewaysReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}:start:
    post:
      tags:
      - "os-search-engines"
      description: "start OS search gateways from OS search engine"
      operationId: "StartOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-engines/{os_search_engine_id}:stop:
    post:
      tags:
      - "os-search-engines"
      description: "stop OS search gateways from OS search engine"
      operationId: "StopOSSearchEngine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "path"
        description: "OS search engine id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSSearchEngineResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-gateways/:
    get:
      tags:
      - "os-search-gateways"
      description: "List OS Search Gateways"
      operationId: "ListOSSearchGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "os_search_engine_id"
        in: "query"
        description: "os search engine id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsSearchEngineId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchGatewaysResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-gateways/{gateway_id}:
    get:
      tags:
      - "os-search-gateways"
      description: "Get OS Search Gateway"
      operationId: "GetOSSearchGateways"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "os search gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchGatewayResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-search-gateways/{gateway_id}/samples:
    get:
      tags:
      - "os-search-gateways"
      description: "get a os search gateway's samples"
      operationId: "GetOSSearchGatewaySamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gateway_id"
        in: "path"
        description: "os search gateway id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GatewayId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSSearchGatewaySamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-storage-classes/:
    get:
      tags:
      - "os-storage-classes"
      description: "List os storage classes"
      operationId: "ListOSStorageClasses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "os_policy_id"
        in: "query"
        description: "os policy id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSStorageClassesResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-storage-classes/{storage_class_id}:
    get:
      tags:
      - "os-storage-classes"
      description: "Get a os storage class"
      operationId: "GetOSStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "storage_class_id"
        in: "path"
        description: "storage class id"
        required: true
        type: "string"
        x-exportParamName: "StorageClassId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSStorageClassResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-storage-classes"
      description: "update storage class"
      operationId: "UpdateOSStorageClass"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "storage_class_id"
        in: "path"
        description: "storage class id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StorageClassId"
      - in: "body"
        name: "body"
        description: "storage class info"
        required: true
        schema:
          $ref: "#/definitions/OSStorageClassUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSStorageClassResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OSStorageClassResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-users/:
    get:
      tags:
      - "os-users"
      description: "List object storage users"
      operationId: "ListObjectStorageUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageUsersResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-users"
      description: "create object storage user"
      operationId: "CreateObjectStorageUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageUserCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageUserResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-users/{user_id}:
    get:
      tags:
      - "os-users"
      description: "get object storage user"
      operationId: "GetObjectStorageUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageUserResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-users"
      description: "delete object storage user"
      operationId: "DeleteObjectStorageUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageUserResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "os-users"
      description: "update object storage user"
      operationId: "UpdateObjectStorageUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageUserUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageUserResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageUserResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-users/{user_id}/samples:
    get:
      tags:
      - "os-users"
      description: "get an object storage user's Samples"
      operationId: "GetObjectStorageUserSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageUserSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-locks/:
    get:
      tags:
      - "os-zone-locks"
      description: "List os zone locks."
      operationId: "ListOSZoneLocks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "all"
        in: "query"
        description: "show all zone locks"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneLocksResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-zone-locks"
      description: "Create a os zone lock."
      operationId: "CreateOSZoneLock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "os zone lock info"
        required: true
        schema:
          $ref: "#/definitions/OSZoneLockCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneLockResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-locks/{lock_uuid}:
    get:
      tags:
      - "os-zone-locks"
      description: "Get a os zone lock."
      operationId: "GetOSZoneLock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "lock_uuid"
        in: "path"
        description: "os zone lock uuid"
        required: true
        type: "string"
        x-exportParamName: "LockUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneLockResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-zone-locks"
      description: "Delete a os zone lock."
      operationId: "DeleteOSZoneLock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "lock_uuid"
        in: "path"
        description: "os zone lock uuid"
        required: true
        type: "string"
        x-exportParamName: "LockUuid"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-locks/{lock_uuid}:refresh:
    post:
      tags:
      - "os-zone-locks"
      description: "Refresh a os zone lock."
      operationId: "RefreshOSZoneLock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "lock_uuid"
        in: "path"
        description: "os zone lock uuid"
        required: true
        type: "string"
        x-exportParamName: "LockUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneLockResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-pairs/:
    get:
      tags:
      - "os-zone-pairs"
      description: "list os zone pairs"
      operationId: "ListOSZonePairs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "min_clock_diff_abs"
        in: "query"
        description: "min clock diff absolute value for zone pairs"
        required: false
        type: "string"
        x-exportParamName: "MinClockDiffAbs"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZonePairsResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-periods/:
    get:
      tags:
      - "os-zone-periods"
      description: "List os zone periods."
      operationId: "ListOSZonePeriods"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZonePeriodsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-periods/{period_uuid}:
    get:
      tags:
      - "os-zone-periods"
      description: "Get a os zone period."
      operationId: "GetOSZonePeriod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "period_uuid"
        in: "path"
        description: "os zone period uuid"
        required: true
        type: "string"
        x-exportParamName: "PeriodUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZonePeriodResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-translogs/:
    get:
      tags:
      - "os-zone-translogs"
      description: "List os zone translogs"
      operationId: "ListOSZoneTranslogs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "epoch_uuid"
        in: "query"
        description: "paging param"
        required: false
        type: "string"
        x-exportParamName: "EpochUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneTranslogsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zone-translogs/{translog_uuid}:
    get:
      tags:
      - "os-zone-translogs"
      description: "Get a os zone translog"
      operationId: "GetOSZoneTranslog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "translog_uuid"
        in: "path"
        description: "translog uuid"
        required: true
        type: "string"
        x-exportParamName: "TranslogUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OSZoneTranslogResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zones/:
    get:
      tags:
      - "os-zones"
      description: "List object storage zones"
      operationId: "ListObjectStorageZones"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "local"
        in: "query"
        description: "local or non-local zones"
        required: false
        type: "boolean"
        x-exportParamName: "Local"
      - name: "master"
        in: "query"
        description: "master or non-master zones"
        required: false
        type: "boolean"
        x-exportParamName: "Master"
      - name: "name"
        in: "query"
        description: "name of zone"
        required: false
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageZonesRecordResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-zones"
      description: "Create a object storage zone"
      operationId: "CreateObjectStorageZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "zone info"
        required: true
        schema:
          $ref: "#/definitions/ObjectStorageZoneCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageZoneResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zones/{zone_uuid}:
    get:
      tags:
      - "os-zones"
      description: "Get object storage zone"
      operationId: "GetObjectStorageZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "object storage zone uuid"
        required: true
        type: "string"
        x-exportParamName: "ZoneUuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageZoneRecordResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "os-zones"
      description: "update os zone pairs"
      operationId: "UpdateOSZonesClockDiff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "os zone uuid"
        required: true
        type: "string"
        x-exportParamName: "ZoneUuid"
      - in: "body"
        name: "body"
        description: "zone pairs info"
        required: true
        schema:
          $ref: "#/definitions/OSZonePairsUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageZoneResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "os-zones"
      description: "Delete a object storage zone"
      operationId: "DeleteObjectStorageZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "os zone uuid"
        required: true
        type: "string"
        x-exportParamName: "ZoneUuid"
      - name: "force"
        in: "query"
        description: "delete os zone forcefully or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/ObjectStorageZoneResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /os-zones/{zone_uuid}/samples:
    get:
      tags:
      - "os-zones"
      description: "get an object storage zone's Samples"
      operationId: "GetObjectStorageZoneSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zone_uuid"
        in: "path"
        description: "object storage zone uuid"
        required: true
        type: "string"
        default: "true"
        x-exportParamName: "ZoneUuid"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObjectStorageZoneSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/:
    get:
      tags:
      - "osd-groups"
      description: "List osd groups"
      operationId: "ListOsdGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdGroupsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:
    get:
      tags:
      - "osd-groups"
      description: "Get osd group"
      operationId: "GetOsdGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /osd-groups/{group_id}/samples:
    get:
      tags:
      - "osd-groups"
      description: "get a osd group's samples"
      operationId: "GetOsdGroupSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdGroupSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:add-osds:
    post:
      tags:
      - "osd-groups"
      description: "Add osds to osd grouop"
      operationId: "AddOsdsToOsdGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "osd ids"
        required: true
        schema:
          $ref: "#/definitions/OsdGroupOsdsUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:disable-device-type-check:
    post:
      tags:
      - "osd-groups"
      description: "Disable device type check when add osd"
      operationId: "DisableDeviceTypeCheck"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:enable-device-type-check:
    post:
      tags:
      - "osd-groups"
      description: "Enable device type check when add osd"
      operationId: "EnableDeviceTypeCheck"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:remove-osds:
    post:
      tags:
      - "osd-groups"
      description: "Remove multiple osds from a osd group"
      operationId: "RemoveOsdsFromOsdGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "remove osd ids"
        required: true
        schema:
          $ref: "#/definitions/OsdGroupOsdsUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:reweight:
    post:
      tags:
      - "osd-groups"
      description: "Reweight pools of osd group"
      operationId: "ReweightOsdGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:set-osd-full-ratio:
    post:
      tags:
      - "osd-groups"
      description: "Set osd full ratio of osd group"
      operationId: "SetOsdFullRatio"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "osds full ratio"
        required: true
        schema:
          $ref: "#/definitions/SetOsdFullRatioReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osd-groups/{group_id}:set-qos:
    post:
      tags:
      - "osd-groups"
      description: "Set osd group's qos"
      operationId: "SetOsdGroupQos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "osd group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "qos info"
        required: true
        schema:
          $ref: "#/definitions/OsdGroupSetQosReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/:
    get:
      tags:
      - "osds"
      description: "List all osds in the cluster"
      operationId: "ListOsds"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "pool_id"
        in: "query"
        description: "pool id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - name: "osd_group_id"
        in: "query"
        description: "osd group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdGroupId"
      - name: "type"
        in: "query"
        description: "osd type: HDD, SSD, Hybrid"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "role"
        in: "query"
        description: "osd role: index or data"
        required: false
        type: "string"
        x-exportParamName: "Role"
      - name: "with_compound"
        in: "query"
        description: "with compound osd"
        required: false
        type: "boolean"
        x-exportParamName: "WithCompound"
      - name: "with_hybrid"
        in: "query"
        description: "with hybrid osd"
        required: false
        type: "boolean"
        x-exportParamName: "WithHybrid"
      - name: "cache_disk_id"
        in: "query"
        description: "cache disk id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CacheDiskId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "osds"
      description: "Create osd service on specific disk"
      operationId: "CreateOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "osd info"
        required: true
        schema:
          $ref: "#/definitions/OsdCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}:
    get:
      tags:
      - "osds"
      description: "get an osd"
      operationId: "GetOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "osds"
      description: "remove an osd from cluster"
      operationId: "DeleteOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "osds"
      description: "update osd info"
      operationId: "UpdateOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      - in: "body"
        name: "osd"
        description: "osd info"
        required: true
        schema:
          $ref: "#/definitions/OsdUpdateReq"
        x-exportParamName: "Osd"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}/chunks:
    get:
      tags:
      - "osds"
      description: "get chunks of and osd"
      operationId: "GetChunks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "The id of the osd"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ChunksResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}/predictions:
    get:
      tags:
      - "osds"
      description: "get a osd's prediction"
      operationId: "GetOsdPredictions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdPredictionsResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}/samples:
    get:
      tags:
      - "osds"
      description: "get a osd's samples"
      operationId: "GetOsdSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}:maintain:
    post:
      tags:
      - "osds"
      description: "Put osd in maintained status"
      operationId: "MaintainOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}:rebuild:
    post:
      tags:
      - "osds"
      description: "rebuild an osd from cluster pool"
      operationId: "RebuildOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      - in: "body"
        name: "body"
        description: "osd info"
        required: true
        schema:
          $ref: "#/definitions/OsdRebuildReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}:switch-role:
    post:
      tags:
      - "osds"
      description: "Switch osd role to compound"
      operationId: "SwitchOsdRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OsdResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /osds/{osd_id}:unmaintain:
    post:
      tags:
      - "osds"
      description: "Put osd out of maintained status"
      operationId: "UnmaintainOsd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "osd_id"
        in: "path"
        description: "osd id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/OsdResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /partitions/:
    get:
      tags:
      - "partitions"
      description: "List partitions"
      operationId: "ListPartitions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "disk_id"
        in: "query"
        description: "disk id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DiskId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PartitionsResp"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /partitions/{partition_id}:
    get:
      tags:
      - "partitions"
      description: "Get a partition info"
      operationId: "GetPartition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "partition_id"
        in: "path"
        description: "partition id"
        required: true
        type: "string"
        x-exportParamName: "PartitionId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PartitionResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /placement-nodes/:
    post:
      tags:
      - "placement-nodes"
      description: "Create placement node"
      operationId: "CreatePlacementNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "placement node info"
        required: true
        schema:
          $ref: "#/definitions/PlacementNodeCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/PlacementNodeResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /placement-nodes/{placement_node_id}:
    get:
      tags:
      - "placement-nodes"
      description: "Get placement node"
      operationId: "GetPlacementNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "placement_node_id"
        in: "path"
        description: "placement node id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PlacementNodeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PlacementNodeResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "placement-nodes"
      description: "delete placement node"
      operationId: "DeletePlacementNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "placement_node_id"
        in: "path"
        description: "placement node id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PlacementNodeId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "placement-nodes"
      description: "update placement node"
      operationId: "UpdatePlacementNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "placement_node_id"
        in: "path"
        description: "the placement node id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PlacementNodeId"
      - in: "body"
        name: "body"
        description: "the placement node info"
        required: true
        schema:
          $ref: "#/definitions/PlacementNodeUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PlacementNodeResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /placement-nodes/{placement_node_id}/topology:
    get:
      tags:
      - "placement-nodes"
      description: "Get subtree topology of placement node"
      operationId: "GetPlacementNodeTopology"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "placement_node_id"
        in: "path"
        description: "placement node id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PlacementNodeId"
      - name: "osd_type"
        in: "query"
        description: "osd type"
        required: false
        type: "string"
        x-exportParamName: "OsdType"
      - name: "osd_role"
        in: "query"
        description: "osd role"
        required: false
        type: "string"
        x-exportParamName: "OsdRole"
      - name: "with_compound"
        in: "query"
        description: "with compound osd"
        required: false
        type: "boolean"
        x-exportParamName: "WithCompound"
      - name: "with_hybrid"
        in: "query"
        description: "with hybrid osd"
        required: false
        type: "boolean"
        x-exportParamName: "WithHybrid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PlacementNodeTopologyResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/:
    get:
      tags:
      - "pools"
      description: "List pools"
      operationId: "ListPools"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "all"
        in: "query"
        description: "show all pools"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      - name: "protection_domain_id"
        in: "query"
        description: "protection domain id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ProtectionDomainId"
      - name: "compound_osd_only"
        in: "query"
        description: "filter pool with only compound osds"
        required: false
        type: "boolean"
        x-exportParamName: "CompoundOsdOnly"
      - name: "osd_group_id"
        in: "query"
        description: "osd group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsdGroupId"
      - name: "pool_type"
        in: "query"
        description: "filter pool by type"
        required: false
        type: "string"
        x-exportParamName: "PoolType"
      - name: "pool_role"
        in: "query"
        description: "filter pool by role"
        required: false
        type: "string"
        x-exportParamName: "PoolRole"
      - name: "pool_mode"
        in: "query"
        description: "filter pool by pool_mode"
        required: false
        type: "string"
        x-exportParamName: "PoolMode"
      - name: "stretched"
        in: "query"
        description: "filter stretched pool"
        required: false
        type: "boolean"
        x-exportParamName: "Stretched"
      - name: "with_compound"
        in: "query"
        description: "with compound pool"
        required: false
        type: "boolean"
        x-exportParamName: "WithCompound"
      - name: "os_policy_id"
        in: "query"
        description: "filter data pool by object storage policy id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OsPolicyId"
      - name: "storage_class_id"
        in: "query"
        description: "filter data pool by os storage class id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "StorageClassId"
      - name: "storage_class_pool_type"
        in: "query"
        description: "storage class pool type(active inactive) to query"
        required: false
        type: "string"
        x-exportParamName: "StorageClassPoolType"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "pools"
      description: "Create pool"
      operationId: "CreatePool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "the pool info"
        required: true
        schema:
          $ref: "#/definitions/PoolCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}:
    get:
      tags:
      - "pools"
      description: "get pool"
      operationId: "GetPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    delete:
      tags:
      - "pools"
      description: "Delete pool"
      operationId: "DeletePool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PoolResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "pools"
      description: "update pool info"
      operationId: "UpdatePool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "body"
        description: "pool info"
        required: true
        schema:
          $ref: "#/definitions/PoolUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}/osds:
    put:
      tags:
      - "pools"
      description: "Add osds to pool"
      operationId: "AddOsdsToPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "body"
        description: "osd infos"
        required: true
        schema:
          $ref: "#/definitions/OsdsAddReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "pools"
      description: "Remove multiple osds from a pool"
      operationId: "RemoveOsdsFromPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - in: "body"
        name: "body"
        description: "osd infos"
        required: true
        schema:
          $ref: "#/definitions/OsdsRemoveReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}/predictions:
    get:
      tags:
      - "pools"
      description: "get a pool's prediction"
      operationId: "GetPoolPredictions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolPredictionsResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}/samples:
    get:
      tags:
      - "pools"
      description: "get pool's samples"
      operationId: "GetPoolSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}/topology:
    get:
      tags:
      - "pools"
      description: "get pool topology"
      operationId: "GetPoolTopology"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolTopologyResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}:disable-device-type-check:
    post:
      tags:
      - "pools"
      description: "Disable device type check when add osd"
      operationId: "DisableDeviceTypeCheck"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}:enable-device-type-check:
    post:
      tags:
      - "pools"
      description: "Enable device type check when add osd"
      operationId: "EnableDeviceTypeCheck"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}:reweight:
    post:
      tags:
      - "pools"
      description: "Reweight a pool"
      operationId: "ReweightPool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /pools/{pool_id}:switch-role:
    post:
      tags:
      - "pools"
      description: "Switch pool role to compound"
      operationId: "SwitchPoolRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pool_id"
        in: "path"
        description: "pool id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PoolId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PoolResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/PoolResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /protection-domains/:
    get:
      tags:
      - "protection-domains"
      description: "List protection domains"
      operationId: "ListProtectionDomains"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ProtectionDomainRecordsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /protection-domains/{protection_domain_id}:
    get:
      tags:
      - "protection-domains"
      description: "get protection domain"
      operationId: "GetProtectionDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "protection_domain_id"
        in: "path"
        description: "protection domain id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProtectionDomainId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ProtectionDomainRecordResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /remote-clusters/:
    get:
      tags:
      - "remote-clusters"
      description: "List remote clusters"
      operationId: "ListRemoteClusters"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "fs_id"
        in: "query"
        description: "fsid of cluster"
        required: false
        type: "string"
        x-exportParamName: "FsId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RemoteClustersResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "remote-clusters"
      description: "Create a remote cluster"
      operationId: "CreateRemoteCluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "remote cluster info"
        required: true
        schema:
          $ref: "#/definitions/RemoteClusterCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RemoteClusterResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /remote-clusters/{cluster_id}:
    get:
      tags:
      - "remote-clusters"
      description: "Get remote cluster"
      operationId: "GetRemoteCluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "remote cluster id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClusterId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RemoteClusterResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "remote-clusters"
      description: "Delete a remote cluster"
      operationId: "DeleteRemoteCluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "remote cluster id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClusterId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/RemoteClusterResp"
        204:
          description: "NoContent"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "remote-clusters"
      description: "Update a remote cluster"
      operationId: "UpdateRemoteCluster"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "remote cluster id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClusterId"
      - in: "body"
        name: "body"
        description: "remote cluster info"
        required: true
        schema:
          $ref: "#/definitions/RemoteClusterUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RemoteClusterResp"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /role-mappings/:
    get:
      tags:
      - "role-mappings"
      description: "List role mappings"
      operationId: "ListRoleMappings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "identity_platform_id"
        in: "query"
        description: "identity platform id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "IdentityPlatformId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleMappingsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "role-mappings"
      description: "Create role mapping"
      operationId: "CreateRoleMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "role mapping info"
        required: true
        schema:
          $ref: "#/definitions/RoleMappingCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/RoleMappingResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /role-mappings/{role_mapping_id}:
    get:
      tags:
      - "role-mappings"
      description: "Get a role mapping"
      operationId: "GetRoleMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "role_mapping_id"
        in: "path"
        description: "role mapping id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RoleMappingId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleMappingResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "role-mappings"
      description: "Delete role mapping"
      operationId: "DeleteRoleMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "role_mapping_id"
        in: "path"
        description: "role mapping id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RoleMappingId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "role-mappings"
      description: "Update a role mapping"
      operationId: "UpdateRoleMapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "role_mapping_id"
        in: "path"
        description: "role mapping id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "RoleMappingId"
      - in: "body"
        name: "body"
        description: "role mapping info"
        required: true
        schema:
          $ref: "#/definitions/RoleMappingUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/RoleMappingResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancer-groups/:
    get:
      tags:
      - "s3-load-balancer-groups"
      description: "List s3 load balancer groups"
      operationId: "ListS3LoadBalancerGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "s3-load-balancer-groups"
      description: "Create a s3 load balancer group"
      operationId: "CreateS3LoadBalancerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "s3 load balancer group info"
        required: true
        schema:
          $ref: "#/definitions/S3LoadBalancerGroupCreateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /s3-load-balancer-groups/{group_id}:
    get:
      tags:
      - "s3-load-balancer-groups"
      description: "Get s3 load balancer group"
      operationId: "GetS3LoadBalancerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "s3 load balancer group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "s3-load-balancer-groups"
      description: "Delete s3 load balancer group"
      operationId: "DeleteS3LoadBalancerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "s3 load balancer group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - name: "force"
        in: "query"
        description: "forcedly delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
    patch:
      tags:
      - "s3-load-balancer-groups"
      description: "Update a s3 load balancer group"
      operationId: "UpdateS3LoadBalancerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "s3 load balancer group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "s3 load balancer group info"
        required: true
        schema:
          $ref: "#/definitions/S3LoadBalancerGroupUpdateReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancer-groups/{group_id}/s3-load-balancers:
    put:
      tags:
      - "s3-load-balancer-groups"
      description: "add load balancers to group"
      operationId: "AddS3LoadBalancersToGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - in: "body"
        name: "body"
        description: "load balancer ids to add"
        required: true
        schema:
          $ref: "#/definitions/S3LoadBalancersAddReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "s3-load-balancer-groups"
      description: "remove load balancers from group"
      operationId: "RemoveS3LoadBalancersFromGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      - name: "force"
        in: "query"
        description: "forcedly remove or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      - in: "body"
        name: "body"
        description: "load balancer ids to remove"
        required: true
        schema:
          $ref: "#/definitions/S3LoadBalancersRemoveReq"
        x-exportParamName: "Body"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancer-groups/{group_id}:redeploy:
    post:
      tags:
      - "s3-load-balancer-groups"
      description: "Redeploy a s3 load balancer group"
      operationId: "RedeployS3LoadBalancerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_id"
        in: "path"
        description: "s3 load balancer group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/S3LoadBalancerGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancers/:
    get:
      tags:
      - "s3-load-balancers"
      description: "List s3 load balancers"
      operationId: "ListS3LoadBalancers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      - name: "group_id"
        in: "query"
        description: "s3 load balancer group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "GroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/S3LoadBalancersResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancers/samples:
    get:
      tags:
      - "s3-load-balancers"
      description: "Get samples of multiple s3 load balancers"
      operationId: "BatchGetS3LoadBalancerSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MultiS3LoadBalancersSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /s3-load-balancers/{load_balancer_id}:
    get:
      tags:
      - "s3-load-balancers"
      description: "Get s3 load balancer"
      operationId: "GetS3LoadBalancer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "load_balancer_id"
        in: "path"
        description: "s3 load balancer id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LoadBalancerId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/S3LoadBalancerResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /s3-load-balancers/{s3_load_balancer_id}/samples:
    get:
      tags:
      - "s3-load-balancers"
      description: "get a s3 load balancer's samples"
      operationId: "GetS3LoadBalancerSamples"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "s3_load_balancer_id"
        in: "path"
        description: "s3 load balancer id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "S3LoadBalancerId"
      - name: "duration_begin"
        in: "query"
        description: "duration begin timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationBegin"
      - name: "duration_end"
        in: "query"
        description: "duration end timestamp"
        required: false
        type: "string"
        x-exportParamName: "DurationEnd"
      - name: "period"
        in: "query"
        description: "samples period"
        required: false
        type: "string"
        x-exportParamName: "Period"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/S3LoadBalancerSamplesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /search-capabilities/:
    get:
      tags:
      - "search-capabilities"
      description: "search capabilites"
      operationId: "SearchCapabilites"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK {object} controllers.SearchCapabilitiesResp OK"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /search/{type}:
    get:
      tags:
      - "search"
      description: "search objects"
      operationId: "Search"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "object type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SourcesResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /services/:
    get:
      tags:
      - "services"
      description: "List all services by host"
      operationId: "ListServices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "type"
        in: "query"
        description: "service type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServicesResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /services/{service_id}:
    get:
      tags:
      - "services"
      description: "get a service"
      operationId: "GetService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "service_id"
        in: "path"
        description: "service id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ServiceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ServiceResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /snmp/:
    get:
      tags:
      - "snmp"
      description: "get snmp info"
      operationId: "GetSnmp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnmpResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "snmp"
      description: "set snmp"
      operationId: "SetSnmp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "snmp info"
        required: true
        schema:
          $ref: "#/definitions/SnmpSetReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SnmpResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /snmp/mib:
    get:
      tags:
      - "snmp"
      description: "download snmp mib file"
      operationId: "DownloadMib"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /ssl-certificates/:
    get:
      tags:
      - "ssl-certificates"
      description: "List certificates"
      operationId: "ListSSLCertificates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SSLCertificatesResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "ssl-certificates"
      description: "Create ssl certificate"
      operationId: "CreateSSLCertificate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ssl certificate info"
        required: true
        schema:
          $ref: "#/definitions/SSLCertificateCreateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SSLCertificateResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /ssl-certificates/{certificate_id}:
    get:
      tags:
      - "ssl-certificates"
      description: "Get certificates"
      operationId: "GetSSLCertificate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "certificate_id"
        in: "path"
        description: "certificate id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CertificateId"
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SSLCertificateResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "ssl-certificates"
      description: "Delete ssl certificate"
      operationId: "DeleteSSLCertificate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "certificate_id"
        in: "path"
        description: "certificate id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CertificateId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SSLCertificateResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "ssl-certificates"
      description: "Update ssl certificate"
      operationId: "UpdateSSLCertificate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "certificate_id"
        in: "path"
        description: "certificate id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CertificateId"
      - in: "body"
        name: "body"
        description: "ssl certificate info"
        required: true
        schema:
          $ref: "#/definitions/SSLCertificateUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SSLCertificateResp"
        202:
          description: "Accept"
          schema:
            $ref: "#/definitions/SSLCertificateResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /system-logs/:
    get:
      tags:
      - "system-logs"
      description: "List system logs"
      operationId: "ListSystemLogs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "host_id"
        in: "query"
        description: "The id of host system logs belong to"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "catalog"
        in: "query"
        description: "The name of catalog system logs belong to"
        required: true
        type: "string"
        x-exportParamName: "Catalog"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SystemLogsResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /system-logs/archive:
    get:
      tags:
      - "system-logs"
      description: "download system logs"
      operationId: "DownloadSystemLogs"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "binary"
        204:
          description: "No Content"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /targets/:
    get:
      tags:
      - "targets"
      description: "List all targets in the cluster"
      operationId: "ListTargets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "host_id"
        in: "query"
        description: "host id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      - name: "access_path_id"
        in: "query"
        description: "access path id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AccessPathId"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TargetsResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "targets"
      description: "Create target"
      operationId: "CreateTarget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "target"
        description: "target info"
        required: true
        schema:
          $ref: "#/definitions/TargetCreateReq"
        x-exportParamName: "Target"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TargetResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /targets/{target_id}:
    delete:
      tags:
      - "targets"
      description: "delete target"
      operationId: "DeleteTarget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "target_id"
        in: "path"
        description: "target id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TargetId"
      - name: "force"
        in: "query"
        description: "force delete or not"
        required: false
        type: "boolean"
        x-exportParamName: "Force"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TargetResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /tasks/:
    get:
      tags:
      - "tasks"
      description: "List tasks by fileter"
      operationId: "ListTasks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "task status"
        required: false
        type: "string"
        x-exportParamName: "Status"
      - name: "type"
        in: "query"
        description: "task type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "host_id"
        in: "query"
        description: "host running the task"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "HostId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TasksResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /tasks/{task_id}:
    get:
      tags:
      - "tasks"
      description: "get a task info"
      operationId: "GetTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "task_id"
        in: "path"
        description: "the task id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TaskId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TaskResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trash-resources/:
    get:
      tags:
      - "trash-resources"
      description: "List trash resources"
      operationId: "ListTrashResources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "type"
        in: "query"
        description: "the type of trash resources"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashResourcesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trash-resources/{trash_resource_id}:
    get:
      tags:
      - "trash-resources"
      description: "get a trash resource"
      operationId: "GetTrashResource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_resource_id"
        in: "path"
        description: "trash resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashResourceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashResourceResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "trash-resources"
      description: "Delete trash resource"
      operationId: "DeleteTrashResource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_resource_id"
        in: "path"
        description: "trash resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashResourceId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TrashResourceResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trash-resources/{trash_resource_id}:restore:
    post:
      tags:
      - "trash-resources"
      description: "Restore trash resource"
      operationId: "RestoreTrashResource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_resource_id"
        in: "path"
        description: "trash resource id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashResourceId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TrashResourceResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trashes/:
    get:
      tags:
      - "trashes"
      description: "List trashes"
      operationId: "ListTrashes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "type"
        in: "query"
        description: "the type of trash"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      - name: "q"
        in: "query"
        description: "query param of search"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "sort"
        in: "query"
        description: "sort param of search"
        required: false
        type: "string"
        x-exportParamName: "Sort"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashesResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trashes/{trash_id}:
    get:
      tags:
      - "trashes"
      description: "get a trash"
      operationId: "GetTrash"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_id"
        in: "path"
        description: "trash id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "trashes"
      description: "Update trash info"
      operationId: "UpdateTrash"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_id"
        in: "path"
        description: "trash id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashId"
      - in: "body"
        name: "body"
        description: "trash info"
        required: true
        schema:
          $ref: "#/definitions/TrashUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TrashResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /trashes/{trash_id}:cleanup:
    post:
      tags:
      - "trashes"
      description: "Cleanup trash"
      operationId: "CleanupTrash"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "trash_id"
        in: "path"
        description: "trash id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TrashId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TrashResp"
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/TrashResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /users/:
    get:
      tags:
      - "users"
      description: "List users"
      operationId: "ListUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "name"
        in: "query"
        description: "user name"
        required: false
        type: "string"
        x-exportParamName: "Name"
      - name: "email"
        in: "query"
        description: "user email"
        required: false
        type: "string"
        x-exportParamName: "Email"
      - name: "all"
        in: "query"
        description: "show all users"
        required: false
        type: "boolean"
        x-exportParamName: "All"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UsersResp"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "users"
      description: "create user"
      operationId: "CreateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/UserCreateReq"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/UserResp"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /users/{user_id}:
    get:
      tags:
      - "users"
      description: "get a user"
      operationId: "GetUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "users"
      description: "delete user"
      operationId: "DeleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "users"
      description: "update user info"
      operationId: "UpdateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        description: "user info"
        required: true
        schema:
          $ref: "#/definitions/UserUpdateReq"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /users/{user_id}/password:
    put:
      tags:
      - "users"
      description: "change user password"
      operationId: "ChangePassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        description: "update info"
        required: true
        schema:
          $ref: "#/definitions/ChangePasswordReq"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /users/{user_id}/settings:
    get:
      tags:
      - "users"
      description: "update user info"
      operationId: "GetUserSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserSettings"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "users"
      description: "update user info"
      operationId: "UpdateUserSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "user id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - in: "body"
        name: "body"
        description: "user settings"
        required: true
        schema:
          $ref: "#/definitions/UserSettings"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserSettings"
        400:
          description: "BadRequest"
        403:
          description: "Forbidden"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /version/:
    get:
      tags:
      - "version"
      description: "show version"
      operationId: "GetVersion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VersionResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vip-groups/:
    get:
      tags:
      - "vip-groups"
      description: "List vip groups"
      operationId: "ListVIPGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "resource_type"
        in: "query"
        description: "resource type"
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "resource_id"
        in: "query"
        description: "resource id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ResourceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPGroupResps"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "vip-groups"
      description: "Create a vip group"
      operationId: "CreateVIPGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "vip_group"
        description: "vip group info"
        required: true
        schema:
          $ref: "#/definitions/VIPGroupCreateReq"
        x-exportParamName: "VipGroup"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPGroupResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vip-groups/{vip_group_id}:
    get:
      tags:
      - "vip-groups"
      description: "Get a vip group"
      operationId: "GetVIPGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_group_id"
        in: "path"
        description: "vip group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPGroupResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "vip-groups"
      description: "Delete a vip group"
      operationId: "DeleteVIPGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_group_id"
        in: "path"
        description: "vip group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPGroupResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "vip-groups"
      description: "Update a vip group"
      operationId: "UpdateVIPGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_group_id"
        in: "path"
        description: "vip group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      - in: "body"
        name: "vip_group"
        description: "vip group info"
        required: true
        schema:
          $ref: "#/definitions/VIPGroupUpdateReq"
        x-exportParamName: "VipGroup"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPGroupResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vip-groups/{vip_group_id}:redeploy:
    post:
      tags:
      - "vip-groups"
      description: "Redeploy a vip group"
      operationId: "RedeployVIPGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_group_id"
        in: "path"
        description: "vip group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPGroupResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vip-instances/:
    get:
      tags:
      - "vip-instances"
      description: "List vip instances"
      operationId: "ListVIPInstances"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "vip_id"
        in: "query"
        description: "vip id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "VipId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPInstancesResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vip-instances/{vip_instance_id}:
    get:
      tags:
      - "vip-instances"
      description: "Get a vip group"
      operationId: "GetVIPInstance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_instance_id"
        in: "path"
        description: "vip group id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipInstanceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPInstanceResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInHeader: []
      - tokenInQuery: []
  /vips/:
    get:
      tags:
      - "vips"
      description: "List vips"
      operationId: "ListVIPs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      - name: "vip_group_id"
        in: "query"
        description: "vip_group id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "VipGroupId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPsResp"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    post:
      tags:
      - "vips"
      description: "Create a vip"
      operationId: "CreateVIP"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "vip"
        description: "vip info"
        required: true
        schema:
          $ref: "#/definitions/VIPCreateReq"
        x-exportParamName: "Vip"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPResp"
        400:
          description: "BadRequest"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vips/{vip_id}:
    get:
      tags:
      - "vips"
      description: "Get a vip"
      operationId: "GetVIP"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_id"
        in: "path"
        description: "vip id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    delete:
      tags:
      - "vips"
      description: "Delete a vip"
      operationId: "DeleteVIP"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_id"
        in: "path"
        description: "vip id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipId"
      responses:
        202:
          description: "Accepted"
          schema:
            $ref: "#/definitions/VIPResp"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
    patch:
      tags:
      - "vips"
      description: "Update a vip"
      operationId: "UpdateVIP"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vip_id"
        in: "path"
        description: "vip id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VipId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VIPResp"
        400:
          description: "BadRequest"
        404:
          description: "NotFound"
        409:
          description: "Conflict"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vm-flavors/:
    get:
      tags:
      - "vm-flavors"
      description: "List vm flavors"
      operationId: "ListVMFlavors"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Limit"
      - name: "offset"
        in: "query"
        description: "paging param"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "Offset"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VMFlavorsResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /vm-flavors/{vm_flavor_id}:
    get:
      tags:
      - "vm-flavors"
      description: "Get vm flavor"
      operationId: "GetVMFlavor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "vm_flavor_id"
        in: "path"
        description: "vm flavor id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VmFlavorId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VMFlavorResp"
        404:
          description: "NotFound"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
  /volume-dp-block-backup-policy-mappings/:
    get:
      tags:
      - "volume-dp-block-backup-policy-mappings"
      description: "List volume dp block backup policy mapping"
      operationId: "ListVolumeDpBlockBackupPolicyMappings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "block_volume_id"
        in: "query"
        description: "show mappings of specific block volume"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BlockVolumeId"
      - name: "dp_block_backup_policy_id"
        in: "query"
        description: "show mappings of specific block volume"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "DpBlockBackupPolicyId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VolumeDpBlockBackupPolicyMappingsResp"
        403:
          description: "Forbidden"
        500:
          description: "InternalServerError"
      security:
      - tokenInQuery: []
      - tokenInHeader: []
securityDefinitions:
  tokenInHeader:
    description: "auth by token"
    type: "apiKey"
    name: "Xms-Auth-Token"
    in: "header"
  tokenInQuery:
    description: "auth by token"
    type: "apiKey"
    name: "token"
    in: "query"
definitions:
  AccessPath:
    type: "object"
    properties:
      action_status:
        type: "string"
      block_volume_num:
        type: "integer"
        format: "int64"
      chap:
        type: "boolean"
      client_group_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      hidden:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      iqn:
        type: "string"
      name:
        type: "string"
      protection_domain:
        $ref: "#/definitions/ProtectionDomain_Nestview"
      status:
        type: "string"
      tname:
        type: "string"
      tsecret:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      vip_group_num:
        type: "integer"
        format: "int64"
    title: "AccessPath"
    description: "AccessPath defines access path"
    example:
      hidden: true
      block_volume_num: 0
      iqn: "iqn"
      client_group_num: 6
      description: "description"
      tname: "tname"
      update: "2000-01-23T04:56:07.000+00:00"
      tsecret: "tsecret"
      type: "type"
      protection_domain:
        name: "name"
        id: 5
      vip_group_num: 5
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      chap: true
      id: 1
      action_status: "action_status"
      status: "status"
  AccessPathCreateReq:
    type: "object"
    properties:
      access_path:
        $ref: "#/definitions/AccessPathCreateReq_AccessPath"
    title: "AccessPathCreateReq"
    example:
      access_path:
        name: "name"
        description: "description"
        tname: "tname"
        chap: true
        tsecret: "tsecret"
        host_ids:
        - 0
        - 0
        type: "type"
        mapping_groups:
        - client_group_id: 5
          block_volume_ids:
          - 1
          - 1
          access_path_id: 6
        - client_group_id: 5
          block_volume_ids:
          - 1
          - 1
          access_path_id: 6
        protection_domain_id: 5
  AccessPathCreateReq_AccessPath:
    type: "object"
    properties:
      chap:
        type: "boolean"
      description:
        type: "string"
      host_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      mapping_groups:
        type: "array"
        items:
          $ref: "#/definitions/MappingGroupReq"
      name:
        type: "string"
      protection_domain_id:
        type: "integer"
        format: "int64"
      tname:
        type: "string"
      tsecret:
        type: "string"
      type:
        type: "string"
    title: "AccessPathCreateReq_AccessPath"
    example:
      name: "name"
      description: "description"
      tname: "tname"
      chap: true
      tsecret: "tsecret"
      host_ids:
      - 0
      - 0
      type: "type"
      mapping_groups:
      - client_group_id: 5
        block_volume_ids:
        - 1
        - 1
        access_path_id: 6
      - client_group_id: 5
        block_volume_ids:
        - 1
        - 1
        access_path_id: 6
      protection_domain_id: 5
  AccessPathResp:
    type: "object"
    required:
    - "access_path"
    properties:
      access_path:
        $ref: "#/definitions/AccessPath"
    title: "AccessPathResp"
    example:
      access_path:
        hidden: true
        block_volume_num: 0
        iqn: "iqn"
        client_group_num: 6
        description: "description"
        tname: "tname"
        update: "2000-01-23T04:56:07.000+00:00"
        tsecret: "tsecret"
        type: "type"
        protection_domain:
          name: "name"
          id: 5
        vip_group_num: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 1
        action_status: "action_status"
        status: "status"
  AccessPathUpdateReq:
    type: "object"
    required:
    - "access_path"
    properties:
      access_path:
        $ref: "#/definitions/AccessPathUpdateReq_AccessPath"
    title: "AccessPathUpdateReq"
    example:
      access_path:
        name: "name"
        description: "description"
        tname: "tname"
        chap: true
        tsecret: "tsecret"
  AccessPathUpdateReq_AccessPath:
    type: "object"
    properties:
      chap:
        type: "boolean"
      description:
        type: "string"
      name:
        type: "string"
      tname:
        type: "string"
      tsecret:
        type: "string"
    title: "AccessPathUpdateReq_AccessPath"
    example:
      name: "name"
      description: "description"
      tname: "tname"
      chap: true
      tsecret: "tsecret"
  AccessPath_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "AccessPath_Nestview"
    example:
      name: "name"
      id: 0
  AccessPathsResp:
    type: "object"
    required:
    - "access_paths"
    properties:
      access_paths:
        type: "array"
        items:
          $ref: "#/definitions/AccessPath"
    title: "AccessPathsResp"
    example:
      access_paths:
      - hidden: true
        block_volume_num: 0
        iqn: "iqn"
        client_group_num: 6
        description: "description"
        tname: "tname"
        update: "2000-01-23T04:56:07.000+00:00"
        tsecret: "tsecret"
        type: "type"
        protection_domain:
          name: "name"
          id: 5
        vip_group_num: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 1
        action_status: "action_status"
        status: "status"
      - hidden: true
        block_volume_num: 0
        iqn: "iqn"
        client_group_num: 6
        description: "description"
        tname: "tname"
        update: "2000-01-23T04:56:07.000+00:00"
        tsecret: "tsecret"
        type: "type"
        protection_domain:
          name: "name"
          id: 5
        vip_group_num: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 1
        action_status: "action_status"
        status: "status"
  AccessToken:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
      update:
        type: "string"
        format: "date-time"
      used:
        type: "boolean"
      user:
        $ref: "#/definitions/User_Nestview"
    title: "AccessToken"
    description: "AccessToken used for authentication and authorization"
    example:
      roles:
      - "roles"
      - "roles"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      used: true
      user:
        name: "name"
        id: 6
  AccessTokenCreateRecord:
    title: "AccessTokenCreateRecord"
    allOf:
    - $ref: "#/definitions/AccessToken"
    - properties:
        uuid:
          type: "string"
    description: "AccessTokenCreateRecord defines access token record for creating\
      \ api response"
  AccessTokenCreateReq:
    type: "object"
    properties:
      access_token:
        $ref: "#/definitions/AccessTokenCreateReq_AccessToken"
    title: "AccessTokenCreateReq"
    example:
      access_token:
        roles:
        - "roles"
        - "roles"
        name: "name"
        description: "description"
  AccessTokenCreateReq_AccessToken:
    type: "object"
    required:
    - "name"
    - "roles"
    properties:
      description:
        type: "string"
        description: "description of access token"
      name:
        type: "string"
        description: "name of access token"
      roles:
        type: "array"
        description: "roles of access token"
        items:
          type: "string"
    title: "AccessTokenCreateReq_AccessToken"
    example:
      roles:
      - "roles"
      - "roles"
      name: "name"
      description: "description"
  AccessTokenCreateResp:
    type: "object"
    required:
    - "access_token"
    properties:
      access_token:
        description: "access token"
        $ref: "#/definitions/AccessTokenCreateRecord"
    title: "AccessTokenCreateResp"
    example:
      access_token: ""
  AccessTokenResp:
    type: "object"
    properties:
      access_token:
        description: "access token"
        $ref: "#/definitions/AccessToken"
    title: "AccessTokenResp"
    example:
      access_token:
        roles:
        - "roles"
        - "roles"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        used: true
        user:
          name: "name"
          id: 6
  AccessTokenUpdateReq:
    type: "object"
    properties:
      access_token:
        $ref: "#/definitions/AccessTokenUpdateReq_AccessToken"
    title: "AccessTokenUpdateReq"
    example:
      access_token:
        name: "name"
  AccessTokenUpdateReq_AccessToken:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "name of access token"
    title: "AccessTokenUpdateReq_AccessToken"
    example:
      name: "name"
  AccessTokensResp:
    type: "object"
    required:
    - "access_tokens"
    properties:
      access_tokens:
        type: "array"
        description: "access tokens"
        items:
          $ref: "#/definitions/AccessToken"
    title: "AccessTokensResp"
    example:
      access_tokens:
      - roles:
        - "roles"
        - "roles"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        used: true
        user:
          name: "name"
          id: 6
      - roles:
        - "roles"
        - "roles"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        used: true
        user:
          name: "name"
          id: 6
  ActionLog:
    type: "object"
    properties:
      action:
        type: "string"
      client_ip:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      finish:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      new_data:
        type: "object"
        properties: {}
      old_data:
        type: "object"
        properties: {}
      parameter:
        type: "string"
      related_resources:
        type: "array"
        items:
          type: "object"
          properties: {}
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      user:
        $ref: "#/definitions/User_Nestview"
    title: "ActionLog"
    description: "ActionLog defines a user action"
  ActionLogRecord:
    title: "ActionLogRecord"
    allOf:
    - $ref: "#/definitions/ActionLog"
    - properties:
        error_records:
          type: "array"
          items:
            $ref: "#/definitions/ErrorRecord"
    description: "ActionLogRecord defines the response errors of action log"
  ActionLog_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "ActionLog_Nestview"
  ActionLogsResp:
    type: "object"
    required:
    - "action_logs"
    properties:
      action_logs:
        type: "array"
        items:
          $ref: "#/definitions/ActionLogRecord"
    title: "ActionLogsResp"
    example:
      action_logs:
      - ""
      - ""
  Alert:
    type: "object"
    properties:
      ack_time:
        type: "string"
        format: "date-time"
      acked:
        type: "boolean"
      alarm_id:
        type: "string"
      alert_value:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      data:
        type: "object"
        properties: {}
      extra_data:
        type: "string"
      group:
        type: "string"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      level:
        type: "string"
      related_resources:
        type: "array"
        items:
          type: "object"
          properties: {}
      resolve_time:
        type: "string"
        format: "date-time"
      resolve_type:
        type: "string"
      resolved:
        type: "boolean"
      resource_id:
        type: "integer"
        format: "int64"
      resource_name:
        type: "string"
      resource_type:
        type: "string"
      status:
        type: "string"
      trigger_mode:
        type: "string"
      trigger_period:
        type: "integer"
        format: "int64"
      trigger_value:
        type: "string"
      type:
        type: "string"
    title: "Alert"
    description: "Alert is a generic representation of an alert in the Prometheus\
      \ eco-system."
    example:
      ack_time: "2000-01-23T04:56:07.000+00:00"
      data: "{}"
      resolve_type: "resolve_type"
      level: "level"
      resolve_time: "2000-01-23T04:56:07.000+00:00"
      resource_type: "resource_type"
      trigger_mode: "trigger_mode"
      trigger_value: "trigger_value"
      alert_value: "alert_value"
      type: "type"
      acked: true
      extra_data: "extra_data"
      related_resources:
      - "{}"
      - "{}"
      trigger_period: 5
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      resource_id: 1
      alarm_id: "alarm_id"
      id: 6
      resource_name: "resource_name"
      group: "group"
      resolved: true
      status: "status"
  AlertActionReq:
    type: "object"
    required:
    - "alert"
    properties:
      alert:
        $ref: "#/definitions/AlertActionReq_Alert"
    title: "AlertActionReq"
    example:
      alert:
        action: "action"
  AlertActionReq_Alert:
    type: "object"
    required:
    - "action"
    properties:
      action:
        type: "string"
    title: "AlertActionReq_Alert"
    example:
      action: "action"
  AlertGroup:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "AlertGroup"
    description: "AlertGroup defines the alert group"
    example:
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
  AlertGroupCreateReq:
    type: "object"
    required:
    - "alert_group"
    properties:
      alert_group:
        $ref: "#/definitions/AlertGroupCreateReq_AlertGroup"
    title: "AlertGroupCreateReq"
    example:
      alert_group:
        alert_rule_ids:
        - 0
        - 0
        name: "name"
        email_group_ids:
        - 6
        - 6
  AlertGroupCreateReq_AlertGroup:
    type: "object"
    required:
    - "alert_rule_ids"
    - "email_group_ids"
    - "name"
    properties:
      alert_rule_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      email_group_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
    title: "AlertGroupCreateReq_AlertGroup"
    example:
      alert_rule_ids:
      - 0
      - 0
      name: "name"
      email_group_ids:
      - 6
      - 6
  AlertGroupResp:
    type: "object"
    required:
    - "alert_group"
    properties:
      alert_group:
        description: "alert group"
        $ref: "#/definitions/AlertGroup"
    title: "AlertGroupResp"
    example:
      alert_group:
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
  AlertGroupUpdateReq:
    type: "object"
    required:
    - "alert_group"
    properties:
      alert_group:
        $ref: "#/definitions/AlertGroupUpdateReq_AlertGroup"
    title: "AlertGroupUpdateReq"
    example:
      alert_group:
        alert_rule_ids:
        - 0
        - 0
        name: "name"
        email_group_ids:
        - 6
        - 6
  AlertGroupUpdateReq_AlertGroup:
    type: "object"
    properties:
      alert_rule_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      email_group_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
    title: "AlertGroupUpdateReq_AlertGroup"
    example:
      alert_rule_ids:
      - 0
      - 0
      name: "name"
      email_group_ids:
      - 6
      - 6
  AlertGroupsResp:
    type: "object"
    required:
    - "alert_groups"
    properties:
      alert_groups:
        type: "array"
        description: "alert groups"
        items:
          $ref: "#/definitions/AlertGroup"
    title: "AlertGroupsResp"
    example:
      alert_groups:
      - name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
      - name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
  AlertRecord:
    title: "AlertRecord"
    allOf:
    - $ref: "#/definitions/Alert"
    - properties:
        error_records:
          type: "array"
          items:
            $ref: "#/definitions/ErrorRecord"
    description: "AlertRecord defines the response errors of alert"
  AlertResp:
    type: "object"
    required:
    - "alert"
    properties:
      alert:
        description: "alert"
        $ref: "#/definitions/Alert"
    title: "AlertResp"
    example:
      alert:
        ack_time: "2000-01-23T04:56:07.000+00:00"
        data: "{}"
        resolve_type: "resolve_type"
        level: "level"
        resolve_time: "2000-01-23T04:56:07.000+00:00"
        resource_type: "resource_type"
        trigger_mode: "trigger_mode"
        trigger_value: "trigger_value"
        alert_value: "alert_value"
        type: "type"
        acked: true
        extra_data: "extra_data"
        related_resources:
        - "{}"
        - "{}"
        trigger_period: 5
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 1
        alarm_id: "alarm_id"
        id: 6
        resource_name: "resource_name"
        group: "group"
        resolved: true
        status: "status"
  AlertRule:
    type: "object"
    properties:
      alarm_id:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      enabled:
        type: "boolean"
      group:
        type: "string"
      has_resource_blacklist:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      level:
        type: "string"
      resource_type:
        type: "string"
      trigger_mode:
        type: "string"
      trigger_period:
        type: "integer"
        format: "int64"
      trigger_value:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "AlertRule"
    description: "AlertRule defines the alert rule"
    example:
      has_resource_blacklist: true
      level: "level"
      resource_type: "resource_type"
      trigger_mode: "trigger_mode"
      trigger_value: "trigger_value"
      update: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      enabled: true
      trigger_period: 6
      create: "2000-01-23T04:56:07.000+00:00"
      alarm_id: "alarm_id"
      id: 0
      group: "group"
  AlertRuleCreateReq:
    type: "object"
    required:
    - "alert_rule"
    properties:
      alert_rule:
        $ref: "#/definitions/AlertRuleCreateReq_Rule"
    title: "AlertRuleCreateReq"
    example:
      alert_rule:
        level: "level"
        trigger_period: 0
        resource_type: "resource_type"
        trigger_mode: "trigger_mode"
        trigger_value: "trigger_value"
        type: "type"
        enabled: true
  AlertRuleCreateReq_Rule:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      level:
        type: "string"
      resource_type:
        type: "string"
      trigger_mode:
        type: "string"
      trigger_period:
        type: "integer"
        format: "int64"
      trigger_value:
        type: "string"
      type:
        type: "string"
    title: "AlertRuleCreateReq_Rule"
    example:
      level: "level"
      trigger_period: 0
      resource_type: "resource_type"
      trigger_mode: "trigger_mode"
      trigger_value: "trigger_value"
      type: "type"
      enabled: true
  AlertRuleResourceBlacklistResp:
    type: "object"
    title: "AlertRuleResourceBlacklistResp"
  AlertRuleResp:
    type: "object"
    required:
    - "alert_rule"
    properties:
      alert_rule:
        description: "alert rule"
        $ref: "#/definitions/AlertRule"
    title: "AlertRuleResp"
    example:
      alert_rule:
        has_resource_blacklist: true
        level: "level"
        resource_type: "resource_type"
        trigger_mode: "trigger_mode"
        trigger_value: "trigger_value"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        trigger_period: 6
        create: "2000-01-23T04:56:07.000+00:00"
        alarm_id: "alarm_id"
        id: 0
        group: "group"
  AlertRuleSchema:
    type: "object"
    properties:
      events:
        type: "array"
        items:
          type: "string"
      types:
        type: "array"
        items:
          type: "string"
    title: "AlertRuleSchema"
    description: "AlertRuleSchema defines alert rule schema"
    example:
      types:
      - "types"
      - "types"
      events:
      - "events"
      - "events"
  AlertRuleSchemaResp:
    type: "object"
    required:
    - "rule_schema_map"
    - "trigger_modes"
    properties:
      rule_schema_map:
        type: "object"
        description: "rule schemas"
        additionalProperties:
          $ref: "#/definitions/AlertRuleSchema"
      trigger_modes:
        type: "array"
        description: "trigger modes"
        items:
          type: "string"
    title: "AlertRuleSchemaResp"
    example:
      trigger_modes:
      - "trigger_modes"
      - "trigger_modes"
      rule_schema_map:
        key:
          types:
          - "types"
          - "types"
          events:
          - "events"
          - "events"
  AlertRuleUpdateReq:
    type: "object"
    required:
    - "alert_rule"
    properties:
      alert_rule:
        $ref: "#/definitions/AlertRuleUpdateReq_Rule"
    title: "AlertRuleUpdateReq"
    example:
      alert_rule:
        trigger_period: 0
        trigger_value: "trigger_value"
        enabled: true
  AlertRuleUpdateReq_Rule:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "enable the alert rule or not"
      trigger_period:
        type: "integer"
        format: "int64"
        description: "trigger period of alert rule"
      trigger_value:
        type: "string"
        description: "trigger value of alert rule"
    title: "AlertRuleUpdateReq_Rule"
    example:
      trigger_period: 0
      trigger_value: "trigger_value"
      enabled: true
  AlertRulesResp:
    type: "object"
    required:
    - "alert_rules"
    properties:
      alert_rules:
        type: "array"
        description: "alert rules"
        items:
          $ref: "#/definitions/AlertRule"
    title: "AlertRulesResp"
    example:
      alert_rules:
      - has_resource_blacklist: true
        level: "level"
        resource_type: "resource_type"
        trigger_mode: "trigger_mode"
        trigger_value: "trigger_value"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        trigger_period: 6
        create: "2000-01-23T04:56:07.000+00:00"
        alarm_id: "alarm_id"
        id: 0
        group: "group"
      - has_resource_blacklist: true
        level: "level"
        resource_type: "resource_type"
        trigger_mode: "trigger_mode"
        trigger_value: "trigger_value"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        trigger_period: 6
        create: "2000-01-23T04:56:07.000+00:00"
        alarm_id: "alarm_id"
        id: 0
        group: "group"
  AlertStats:
    type: "object"
    properties:
      critical_num:
        type: "integer"
        format: "int64"
      error_num:
        type: "integer"
        format: "int64"
      info_num:
        type: "integer"
        format: "int64"
      warning_num:
        type: "integer"
        format: "int64"
    title: "AlertStats"
    example:
      critical_num: 0
      info_num: 1
      error_num: 6
      warning_num: 5
  AlertStatsResp:
    type: "object"
    required:
    - "alert_stats"
    properties:
      alert_stats:
        description: "alert stats"
        $ref: "#/definitions/AlertStats"
    title: "AlertStatsResp"
    example:
      alert_stats:
        critical_num: 0
        info_num: 1
        error_num: 6
        warning_num: 5
  Alert_Nestview:
    type: "object"
    properties:
      alarm_id:
        type: "string"
      id:
        type: "integer"
        format: "int64"
    title: "Alert_Nestview"
  AlertsActionReq:
    type: "object"
    required:
    - "alerts"
    properties:
      alerts:
        $ref: "#/definitions/AlertsActionReq_Alerts"
    title: "AlertsActionReq"
    example:
      alerts:
        action: "action"
  AlertsActionReq_Alerts:
    type: "object"
    required:
    - "action"
    properties:
      action:
        type: "string"
    title: "AlertsActionReq_Alerts"
    example:
      action: "action"
  AlertsResp:
    type: "object"
    required:
    - "alerts"
    properties:
      alerts:
        type: "array"
        description: "alerts"
        items:
          $ref: "#/definitions/AlertRecord"
    title: "AlertsResp"
    example:
      alerts:
      - ""
      - ""
  AuthLoginReq:
    type: "object"
    required:
    - "auth"
    properties:
      auth:
        $ref: "#/definitions/AuthLoginReq_Auth"
    title: "AuthLoginReq"
    example:
      auth:
        password: "password"
        name: "name"
        rsa_key_id: "rsa_key_id"
        sign: "sign"
        platform: "platform"
        encrypted_password: "encrypted_password"
        timestamp: "timestamp"
        token: "token"
  AuthLoginReq_Auth:
    type: "object"
    properties:
      encrypted_password:
        type: "string"
        description: "encrypted password for auth"
      name:
        type: "string"
        description: "user name or email for auth"
      password:
        type: "string"
        description: "password for auth"
      platform:
        type: "string"
        description: "uuid of the identity platform"
      rsa_key_id:
        type: "string"
        description: "rsa key id"
      sign:
        type: "string"
        description: "signature of login request"
      timestamp:
        type: "string"
        description: "timestamp of platform token"
      token:
        type: "string"
        description: "token of the identity platform"
    title: "AuthLoginReq_Auth"
    example:
      password: "password"
      name: "name"
      rsa_key_id: "rsa_key_id"
      sign: "sign"
      platform: "platform"
      encrypted_password: "encrypted_password"
      timestamp: "timestamp"
      token: "token"
  AuthPasswordReq:
    type: "object"
    required:
    - "user"
    properties:
      user:
        $ref: "#/definitions/AuthPasswordReq_User"
    title: "AuthPasswordReq"
    example:
      user:
        password: "password"
        name: "name"
        id: 0
        email: "email"
  AuthPasswordReq_User:
    type: "object"
    required:
    - "password"
    properties:
      email:
        type: "string"
        description: "user email for auth"
      id:
        type: "integer"
        format: "int64"
        description: "user id for auth"
      name:
        type: "string"
        description: "user name or email for auth"
      password:
        type: "string"
        description: "password for auth"
    title: "AuthPasswordReq_User"
    example:
      password: "password"
      name: "name"
      id: 0
      email: "email"
  AuthRSAKey:
    type: "object"
    properties:
      expiration:
        type: "string"
        format: "date-time"
      id:
        type: "string"
      public_key:
        type: "string"
    title: "AuthRSAKey"
    example:
      public_key: "public_key"
      expiration: "2000-01-23T04:56:07.000+00:00"
      id: "id"
  AuthRSAKeyResp:
    type: "object"
    properties:
      rsa_key:
        $ref: "#/definitions/AuthRSAKey"
    title: "AuthRSAKeyResp"
    example:
      rsa_key:
        public_key: "public_key"
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
  AuthSecurityPolicy:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      freeze_duration:
        type: "integer"
        format: "int64"
        description: "unit: second"
      max_attempts:
        type: "integer"
        format: "int64"
      password_expiration_warning:
        type: "boolean"
      password_lifetime:
        type: "integer"
        format: "int64"
        description: "unit: second"
    title: "AuthSecurityPolicy"
    description: "AuthSecurityPolicy defines auth security policy"
    example:
      freeze_duration: 0
      max_attempts: 6
      password_expiration_warning: true
      password_lifetime: 1
      enabled: true
  AuthSecurityPolicyResp:
    type: "object"
    properties:
      auth_security_policy:
        $ref: "#/definitions/AuthSecurityPolicy"
    title: "AuthSecurityPolicyResp"
    example:
      auth_security_policy:
        freeze_duration: 0
        max_attempts: 6
        password_expiration_warning: true
        password_lifetime: 1
        enabled: true
  AuthSecurityPolicyUpdateReq:
    type: "object"
    properties:
      auth_security_policy:
        $ref: "#/definitions/AuthSecurityPolicyUpdateReq_AuthSecurityPolicy"
    title: "AuthSecurityPolicyUpdateReq"
    example:
      auth_security_policy:
        freeze_duration: 0
        max_attempts: 6
        password_expiration_warning: true
        password_lifetime: 1
        enabled: true
  AuthSecurityPolicyUpdateReq_AuthSecurityPolicy:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      freeze_duration:
        type: "integer"
        format: "int64"
      max_attempts:
        type: "integer"
        format: "int64"
      password_expiration_warning:
        type: "boolean"
      password_lifetime:
        type: "integer"
        format: "int64"
    title: "AuthSecurityPolicyUpdateReq_AuthSecurityPolicy"
    example:
      freeze_duration: 0
      max_attempts: 6
      password_expiration_warning: true
      password_lifetime: 1
      enabled: true
  AuthTokenReq:
    type: "object"
    required:
    - "uuid"
    properties:
      uuid:
        type: "string"
        description: "uuid of authorized token"
    title: "AuthTokenReq"
    example:
      uuid: "uuid"
  BlockReplicationConfig:
    type: "object"
    properties:
      destination:
        type: "string"
      local_gateways:
        type: "array"
        items:
          type: "string"
      remote_gateways:
        type: "array"
        items:
          type: "string"
    title: "BlockReplicationConfig"
    description: "BlockReplicationConfig contains config for block replication"
    example:
      destination: "destination"
      local_gateways:
      - "local_gateways"
      - "local_gateways"
      remote_gateways:
      - "remote_gateways"
      - "remote_gateways"
  BlockVolumeMigrationJobResp:
    type: "object"
    required:
    - "block_volume_migration_job"
    properties:
      block_volume_migration_job:
        description: "volume migration job"
        $ref: "#/definitions/VolumeMigrationJob"
    title: "BlockVolumeMigrationJobResp"
    example:
      block_volume_migration_job:
        finished_at: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        stripes: 1
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        remaining_time: 6
        source_pool:
          name: "name"
          id: 5
        task:
          retried: true
          error_msg: "error_msg"
          data: "data"
          update: "2000-01-23T04:56:07.000+00:00"
          priority: 5
          type: "type"
          execute: "2000-01-23T04:56:07.000+00:00"
          host_role: "host_role"
          host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          finish: "2000-01-23T04:56:07.000+00:00"
          id: 5
          retry: 2
          retry_type: "retry_type"
          status: "status"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        dest_pool:
          name: "name"
          id: 5
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        status: "status"
  BlockVolumeMigrationJobsResp:
    type: "object"
    required:
    - "block_volume_migration_jobs"
    properties:
      block_volume_migration_jobs:
        type: "array"
        description: "volume migration jobs"
        items:
          $ref: "#/definitions/VolumeMigrationJob"
    title: "BlockVolumeMigrationJobsResp"
    example:
      block_volume_migration_jobs:
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        stripes: 1
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        remaining_time: 6
        source_pool:
          name: "name"
          id: 5
        task:
          retried: true
          error_msg: "error_msg"
          data: "data"
          update: "2000-01-23T04:56:07.000+00:00"
          priority: 5
          type: "type"
          execute: "2000-01-23T04:56:07.000+00:00"
          host_role: "host_role"
          host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          finish: "2000-01-23T04:56:07.000+00:00"
          id: 5
          retry: 2
          retry_type: "retry_type"
          status: "status"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        dest_pool:
          name: "name"
          id: 5
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        status: "status"
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        stripes: 1
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        remaining_time: 6
        source_pool:
          name: "name"
          id: 5
        task:
          retried: true
          error_msg: "error_msg"
          data: "data"
          update: "2000-01-23T04:56:07.000+00:00"
          priority: 5
          type: "type"
          execute: "2000-01-23T04:56:07.000+00:00"
          host_role: "host_role"
          host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          finish: "2000-01-23T04:56:07.000+00:00"
          id: 5
          retry: 2
          retry_type: "retry_type"
          status: "status"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        dest_pool:
          name: "name"
          id: 5
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        status: "status"
  BlockVolumeUpdateMigrationReq:
    type: "object"
    properties:
      volume_migration_job:
        $ref: "#/definitions/BlockVolumeUpdateMigrationReq_VolumeMigrationJob"
    title: "BlockVolumeUpdateMigrationReq"
    example:
      volume_migration_job:
        stripes: 0
  BlockVolumeUpdateMigrationReq_VolumeMigrationJob:
    type: "object"
    required:
    - "stripes"
    properties:
      stripes:
        type: "integer"
        format: "int64"
    title: "BlockVolumeUpdateMigrationReq_VolumeMigrationJob"
    example:
      stripes: 0
  BootNode:
    type: "object"
    required:
    - "admin_network"
    - "gateway_network"
    - "private_network"
    - "public_network"
    properties:
      admin_network:
        type: "string"
      gateway_network:
        type: "string"
      host:
        $ref: "#/definitions/Host_Nestview"
      private_network:
        type: "string"
      public_network:
        type: "string"
      status:
        type: "string"
    title: "BootNode"
    description: "BootNode defines the status of boot node"
    example:
      gateway_network: "gateway_network"
      private_network: "private_network"
      public_network: "public_network"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      admin_network: "admin_network"
      status: "status"
  BootNodeReq:
    type: "object"
    required:
    - "bootnode"
    properties:
      bootnode:
        $ref: "#/definitions/BootNodeReq_BootNode"
    title: "BootNodeReq"
    example:
      bootnode:
        gateway_network: "gateway_network"
        private_network: "private_network"
        public_network: "public_network"
        admin_network: "admin_network"
  BootNodeReq_BootNode:
    type: "object"
    required:
    - "private_network"
    - "public_network"
    properties:
      admin_network:
        type: "string"
        description: "admin network: 10.0.0.0/24"
      gateway_network:
        type: "string"
        description: "gateway networks, multiple networks splited by comma: 10.0.3.0/24,10.0.4.0/24"
      private_network:
        type: "string"
        description: "private network : 10.0.2.0/24"
      public_network:
        type: "string"
        description: "public network: 10.0.1.0/24"
    title: "BootNodeReq_BootNode"
    example:
      gateway_network: "gateway_network"
      private_network: "private_network"
      public_network: "public_network"
      admin_network: "admin_network"
  BootNodeResp:
    type: "object"
    required:
    - "bootnode"
    properties:
      bootnode:
        description: "boot node"
        $ref: "#/definitions/BootNode"
    title: "BootNodeResp"
    example:
      bootnode:
        gateway_network: "gateway_network"
        private_network: "private_network"
        public_network: "public_network"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        admin_network: "admin_network"
        status: "status"
  BucketFlag:
    type: "object"
    properties:
      versioned:
        type: "boolean"
      versions_suspended:
        type: "boolean"
      worm:
        type: "boolean"
    title: "BucketFlag"
    description: "BucketFlag is the struct of bucket flag"
    example:
      versions_suspended: true
      worm: true
      versioned: true
  BucketFlagReq:
    type: "object"
    properties:
      versioned:
        type: "boolean"
        description: "set versioned flag"
      versions_suspended:
        type: "boolean"
        description: "set versioned suspended flag"
      worm:
        type: "boolean"
        description: "set worm flag"
    title: "BucketFlagReq"
    example:
      versions_suspended: true
      worm: true
      versioned: true
  ChangePasswordReq:
    type: "object"
    required:
    - "user"
    properties:
      user:
        description: "user"
        $ref: "#/definitions/ChangePasswordReq_Req"
    title: "ChangePasswordReq"
    example:
      user:
        original_password: "original_password"
        password: "password"
        rsa_key_id: "rsa_key_id"
        encrypted_original_password: "encrypted_original_password"
        encrypted_password: "encrypted_password"
  ChangePasswordReq_Req:
    type: "object"
    required:
    - "original_password"
    - "password"
    properties:
      encrypted_original_password:
        type: "string"
        description: "encrypted original password for auth"
      encrypted_password:
        type: "string"
        description: "encrypted password for auth"
      original_password:
        type: "string"
        description: "original password of user"
      password:
        type: "string"
        description: "new password of user"
      rsa_key_id:
        type: "string"
        description: "rsa key id"
    title: "ChangePasswordReq_Req"
    example:
      original_password: "original_password"
      password: "password"
      rsa_key_id: "rsa_key_id"
      encrypted_original_password: "encrypted_original_password"
      encrypted_password: "encrypted_password"
  ChunkRecord:
    title: "ChunkRecord"
    allOf:
    - $ref: "#/definitions/PlacementGroup"
    - properties:
        scrubs:
          type: "array"
          items:
            $ref: "#/definitions/PlacementGroupScrub"
    description: "ChunkRecord defines chunks api response"
  ChunksResp:
    type: "object"
    required:
    - "chunks"
    properties:
      chunks:
        type: "array"
        description: "chunks"
        items:
          $ref: "#/definitions/ChunkRecord"
    title: "ChunksResp"
    example:
      chunks:
      - ""
      - ""
  Client:
    type: "object"
    properties:
      client_group:
        $ref: "#/definitions/ClientGroup_Nestview"
      code:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "Client"
    example:
      code: "code"
      client_group:
        name: "name"
        id: 5
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 5
      status: "status"
  ClientCode:
    type: "object"
    properties:
      code:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
    title: "ClientCode"
    example:
      code: "code"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      type: "type"
  ClientCodesResp:
    type: "object"
    required:
    - "client_codes"
    properties:
      client_codes:
        type: "array"
        description: "client codes"
        items:
          $ref: "#/definitions/ClientCode"
    title: "ClientCodesResp"
    example:
      client_codes:
      - code: "code"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
      - code: "code"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
  ClientGroup:
    type: "object"
    properties:
      access_path_num:
        type: "integer"
        format: "int64"
      block_volume_num:
        type: "integer"
        format: "int64"
      chap:
        type: "boolean"
      client_num:
        type: "integer"
        format: "int64"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/Client"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      iname:
        type: "string"
      isecret:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "ClientGroup"
    description: "ClientGroup defines the access client group"
    example:
      clients:
      - code: "code"
        client_group:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
      - code: "code"
        client_group:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
      block_volume_num: 6
      access_path_num: 0
      client_num: 1
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      iname: "iname"
      isecret: "isecret"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      chap: true
      id: 2
      status: "status"
  ClientGroupCreateReq:
    type: "object"
    properties:
      client_group:
        $ref: "#/definitions/ClientGroupCreateReq_ClientGroup"
    title: "ClientGroupCreateReq"
    example:
      client_group:
        isecret: "isecret"
        clients:
        - code: "code"
        - code: "code"
        name: "name"
        description: "description"
        chap: true
        type: "type"
        iname: "iname"
  ClientGroupCreateReq_ClientGroup:
    type: "object"
    properties:
      chap:
        type: "boolean"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/ClientGroupCreateReq_ClientGroup_Clients_Elt"
      description:
        type: "string"
      iname:
        type: "string"
      isecret:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
    title: "ClientGroupCreateReq_ClientGroup"
    example:
      isecret: "isecret"
      clients:
      - code: "code"
      - code: "code"
      name: "name"
      description: "description"
      chap: true
      type: "type"
      iname: "iname"
  ClientGroupCreateReq_ClientGroup_Clients_Elt:
    type: "object"
    properties:
      code:
        type: "string"
    title: "ClientGroupCreateReq_ClientGroup_Clients_Elt"
    example:
      code: "code"
  ClientGroupResp:
    type: "object"
    required:
    - "client_group"
    properties:
      client_group:
        description: "client group"
        $ref: "#/definitions/ClientGroup"
    title: "ClientGroupResp"
    example:
      client_group:
        clients:
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        block_volume_num: 6
        access_path_num: 0
        client_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        iname: "iname"
        isecret: "isecret"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 2
        status: "status"
  ClientGroupUpdateReq:
    type: "object"
    properties:
      client_group:
        $ref: "#/definitions/ClientGroupUpdateReq_ClientGroup"
    title: "ClientGroupUpdateReq"
    example:
      client_group:
        clients:
        - code: "code"
        - code: "code"
        name: "name"
        description: "description"
  ClientGroupUpdateReq_ClientGroup:
    type: "object"
    properties:
      clients:
        type: "array"
        items:
          $ref: "#/definitions/ClientGroupUpdateReq_ClientGroup_Clients_Elt"
      description:
        type: "string"
      name:
        type: "string"
    title: "ClientGroupUpdateReq_ClientGroup"
    example:
      clients:
      - code: "code"
      - code: "code"
      name: "name"
      description: "description"
  ClientGroupUpdateReq_ClientGroup_Clients_Elt:
    type: "object"
    properties:
      code:
        type: "string"
    title: "ClientGroupUpdateReq_ClientGroup_Clients_Elt"
    example:
      code: "code"
  ClientGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "ClientGroup_Nestview"
    example:
      name: "name"
      id: 5
  ClientGroupsResp:
    type: "object"
    required:
    - "client_groups"
    properties:
      client_groups:
        type: "array"
        description: "client groups"
        items:
          $ref: "#/definitions/ClientGroup"
    title: "ClientGroupsResp"
    example:
      client_groups:
      - clients:
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        block_volume_num: 6
        access_path_num: 0
        client_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        iname: "iname"
        isecret: "isecret"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 2
        status: "status"
      - clients:
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        - code: "code"
          client_group:
            name: "name"
            id: 5
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 5
          status: "status"
        block_volume_num: 6
        access_path_num: 0
        client_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        iname: "iname"
        isecret: "isecret"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 2
        status: "status"
  ClientLunMapping:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      client:
        $ref: "#/definitions/Client_Nestview"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      lun:
        $ref: "#/definitions/Lun_Nestview"
      status:
        type: "string"
      target:
        $ref: "#/definitions/Target_Nestview"
      update:
        type: "string"
        format: "date-time"
    title: "ClientLunMapping"
    description: "ClientLunMapping defines a mapping relation with lun and client\
      \ group"
  ClientLunMappingRecord:
    title: "ClientLunMappingRecord"
    allOf:
    - $ref: "#/definitions/ClientLunMapping"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/VolumeStat"
        session_status:
          type: "string"
  ClientLunMappingResp:
    type: "object"
    required:
    - "client_lun_mapping"
    properties:
      client_lun_mapping:
        $ref: "#/definitions/ClientLunMappingRecord"
    title: "ClientLunMappingResp"
    example:
      client_lun_mapping: ""
  ClientLunMappingsResp:
    type: "object"
    required:
    - "client_lun_mappings"
    properties:
      client_lun_mappings:
        type: "array"
        items:
          $ref: "#/definitions/ClientLunMappingRecord"
    title: "ClientLunMappingsResp"
    example:
      client_lun_mappings:
      - ""
      - ""
  ClientResp:
    type: "object"
    required:
    - "client"
    properties:
      client:
        $ref: "#/definitions/Client"
    title: "ClientResp"
    example:
      client:
        code: "code"
        client_group:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
  Client_Nestview:
    type: "object"
    properties:
      code:
        type: "string"
      id:
        type: "integer"
        format: "int64"
    title: "Client_Nestview"
  ClientsResp:
    type: "object"
    required:
    - "clients"
    properties:
      clients:
        type: "array"
        items:
          $ref: "#/definitions/Client"
    title: "ClientsResp"
    example:
      clients:
      - code: "code"
        client_group:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
      - code: "code"
        client_group:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
  CloudDatacenter_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "CloudDatacenter_Nestview"
    example:
      name: "name"
      id: 0
  CloudExtraProperties:
    type: "object"
    properties:
      domain_id:
        type: "string"
        description: "domain id for openstack"
      domain_name:
        type: "string"
        description: "domain name for openstack"
      regions:
        type: "array"
        description: "regions for openstack"
        items:
          type: "string"
      tenant_id:
        type: "string"
        description: "tenant id for openstack"
      tenant_name:
        type: "string"
        description: "tenant name for openstack"
    title: "CloudExtraProperties"
    description: "CloudExtraProperties contains extra properties"
    example:
      domain_id: "domain_id"
      tenant_id: "tenant_id"
      domain_name: "domain_name"
      tenant_name: "tenant_name"
      regions:
      - "regions"
      - "regions"
  CloudInstance:
    type: "object"
    properties:
      cloud_datacenter:
        $ref: "#/definitions/CloudDatacenter_Nestview"
      cloud_instance_id:
        type: "string"
      cloud_platform:
        $ref: "#/definitions/CloudPlatform_Nestview"
      cloud_volume_num:
        type: "integer"
        format: "int64"
      cores:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      hostname:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      memory_kbyte:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      root_device_type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "CloudInstance"
    description: "CloudInstance defines instances of the cloud platform"
  CloudInstanceRecord:
    title: "CloudInstanceRecord"
    allOf:
    - $ref: "#/definitions/CloudInstance"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/CloudInstanceStat"
    description: "CloudInstanceRecord combine CloudInstance and CloudInstanceStat\
      \ as API response"
  CloudInstanceResp:
    type: "object"
    properties:
      cloud_instance:
        description: "cloud instance record"
        $ref: "#/definitions/CloudInstanceRecord"
    title: "CloudInstanceResp"
    example:
      cloud_instance: ""
  CloudInstanceSamplesResp:
    type: "object"
    properties:
      cloud_instance_samples:
        type: "array"
        items:
          $ref: "#/definitions/CloudInstanceStat"
    title: "CloudInstanceSamplesResp"
    example:
      cloud_instance_samples:
      - read_bandwidth_kbyte: 0.8008281904610115
        write_bandwidth_kbyte: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        total_bandwidth_kbyte: 5.962133916683182
        write_iops: 7.061401241503109
        write_latency_us: 9.301444243932576
        total_iops: 5.637376656633329
        read_latency_us: 1.4658129805029452
        read_iops: 6.027456183070403
      - read_bandwidth_kbyte: 0.8008281904610115
        write_bandwidth_kbyte: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        total_bandwidth_kbyte: 5.962133916683182
        write_iops: 7.061401241503109
        write_latency_us: 9.301444243932576
        total_iops: 5.637376656633329
        read_latency_us: 1.4658129805029452
        read_iops: 6.027456183070403
  CloudInstanceStat:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "CloudInstanceStat"
    description: "CloudInstanceStat represents the monitoring metrics of a cloud instance"
    example:
      read_bandwidth_kbyte: 0.8008281904610115
      write_bandwidth_kbyte: 2.3021358869347655
      create: "2000-01-23T04:56:07.000+00:00"
      total_bandwidth_kbyte: 5.962133916683182
      write_iops: 7.061401241503109
      write_latency_us: 9.301444243932576
      total_iops: 5.637376656633329
      read_latency_us: 1.4658129805029452
      read_iops: 6.027456183070403
  CloudInstance_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "CloudInstance_Nestview"
    example:
      name: "name"
      id: 0
  CloudInstancesResp:
    type: "object"
    properties:
      cloud_instances:
        type: "array"
        description: "cloud instance records"
        items:
          $ref: "#/definitions/CloudInstanceRecord"
    title: "CloudInstancesResp"
    example:
      cloud_instances:
      - ""
      - ""
  CloudPlatform:
    type: "object"
    properties:
      action_status:
        type: "string"
      attached_cloud_volume_num:
        type: "integer"
        format: "int64"
      cloud_instance_num:
        type: "integer"
        format: "int64"
      cloud_volume_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      extra_properties:
        $ref: "#/definitions/CloudExtraProperties"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
      sync_time:
        type: "string"
        format: "date-time"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      url:
        type: "string"
      username:
        type: "string"
    title: "CloudPlatform"
    description: "CloudPlatform defines different cloud platforms"
    example:
      attached_cloud_volume_num: 0
      cloud_volume_num: 1
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      sync_time: "2000-01-23T04:56:07.000+00:00"
      cloud_instance_num: 6
      type: "type"
      url: "url"
      extra_properties:
        domain_id: "domain_id"
        tenant_id: "tenant_id"
        domain_name: "domain_name"
        tenant_name: "tenant_name"
        regions:
        - "regions"
        - "regions"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 5
      action_status: "action_status"
      status: "status"
      username: "username"
  CloudPlatformCreateReq:
    type: "object"
    properties:
      cloud_platform:
        $ref: "#/definitions/CloudPlatformCreateReq_Platform"
    title: "CloudPlatformCreateReq"
    example:
      cloud_platform:
        password: "password"
        extra_properties:
          domain_id: "domain_id"
          tenant_id: "tenant_id"
          domain_name: "domain_name"
          tenant_name: "tenant_name"
          regions:
          - "regions"
          - "regions"
        name: "name"
        description: "description"
        type: "type"
        url: "url"
        username: "username"
  CloudPlatformCreateReq_Platform:
    type: "object"
    properties:
      description:
        type: "string"
        description: "description of cloud platform"
      extra_properties:
        description: "extra properties of cloud platform"
        $ref: "#/definitions/CloudExtraProperties"
      name:
        type: "string"
        description: "name of cloud platform"
      password:
        type: "string"
        description: "password of cloud platform user"
      type:
        type: "string"
        description: "type of cloud platform"
      url:
        type: "string"
      username:
        type: "string"
    title: "CloudPlatformCreateReq_Platform"
    example:
      password: "password"
      extra_properties:
        domain_id: "domain_id"
        tenant_id: "tenant_id"
        domain_name: "domain_name"
        tenant_name: "tenant_name"
        regions:
        - "regions"
        - "regions"
      name: "name"
      description: "description"
      type: "type"
      url: "url"
      username: "username"
  CloudPlatformResp:
    type: "object"
    properties:
      cloud_platform:
        description: "cloud platform"
        $ref: "#/definitions/CloudPlatform"
    title: "CloudPlatformResp"
    example:
      cloud_platform:
        attached_cloud_volume_num: 0
        cloud_volume_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        sync_time: "2000-01-23T04:56:07.000+00:00"
        cloud_instance_num: 6
        type: "type"
        url: "url"
        extra_properties:
          domain_id: "domain_id"
          tenant_id: "tenant_id"
          domain_name: "domain_name"
          tenant_name: "tenant_name"
          regions:
          - "regions"
          - "regions"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        status: "status"
        username: "username"
  CloudPlatformUpdateReq:
    type: "object"
    properties:
      cloud_platform:
        $ref: "#/definitions/CloudPlatformUpdateReq_Platform"
    title: "CloudPlatformUpdateReq"
    example:
      cloud_platform:
        password: "password"
        name: "name"
        url: "url"
        username: "username"
  CloudPlatformUpdateReq_Platform:
    type: "object"
    properties:
      name:
        type: "string"
        description: "name of cloud platform"
      password:
        type: "string"
        description: "password of cloud platform user"
      url:
        type: "string"
      username:
        type: "string"
    title: "CloudPlatformUpdateReq_Platform"
    example:
      password: "password"
      name: "name"
      url: "url"
      username: "username"
  CloudPlatform_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type:
        type: "string"
    title: "CloudPlatform_Nestview"
    example:
      name: "name"
      id: 6
      type: "type"
  CloudPlatformsResp:
    type: "object"
    properties:
      cloud_platforms:
        type: "array"
        description: "cloud platforms"
        items:
          $ref: "#/definitions/CloudPlatform"
    title: "CloudPlatformsResp"
    example:
      cloud_platforms:
      - attached_cloud_volume_num: 0
        cloud_volume_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        sync_time: "2000-01-23T04:56:07.000+00:00"
        cloud_instance_num: 6
        type: "type"
        url: "url"
        extra_properties:
          domain_id: "domain_id"
          tenant_id: "tenant_id"
          domain_name: "domain_name"
          tenant_name: "tenant_name"
          regions:
          - "regions"
          - "regions"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        status: "status"
        username: "username"
      - attached_cloud_volume_num: 0
        cloud_volume_num: 1
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        sync_time: "2000-01-23T04:56:07.000+00:00"
        cloud_instance_num: 6
        type: "type"
        url: "url"
        extra_properties:
          domain_id: "domain_id"
          tenant_id: "tenant_id"
          domain_name: "domain_name"
          tenant_name: "tenant_name"
          regions:
          - "regions"
          - "regions"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        status: "status"
        username: "username"
  CloudVolume:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      cloud_datacenter:
        $ref: "#/definitions/CloudDatacenter_Nestview"
      cloud_platform:
        $ref: "#/definitions/CloudPlatform_Nestview"
      cloud_volume_id:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      multi_attach:
        type: "boolean"
      name:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "CloudVolume"
    description: "CloudVolume defines volumes of the cloud platform"
    example:
      cloud_volume_id: "cloud_volume_id"
      cloud_datacenter:
        name: "name"
        id: 0
      cloud_platform:
        name: "name"
        id: 6
        type: "type"
      block_volume:
        original_name: "original_name"
        name: "name"
        id: 9
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      multi_attach: true
      id: 1
      type: "type"
  CloudVolumeAttachment:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      cloud_instance:
        $ref: "#/definitions/CloudInstance_Nestview"
      cloud_volume:
        $ref: "#/definitions/CloudVolume_Nestview"
      create:
        type: "string"
        format: "date-time"
      device:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "CloudVolumeAttachment"
    description: "CloudVolumeAttachment defines volume attachment relationship with\
      \ cloud\ninstances"
    example:
      block_volume:
        original_name: "original_name"
        name: "name"
        id: 9
      cloud_volume:
        name: "name"
        id: 6
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      cloud_instance:
        name: "name"
        id: 0
      id: 1
      device: "device"
  CloudVolumeAttachmentsResp:
    type: "object"
    properties:
      cloud_volume_attachments:
        type: "array"
        description: "cloud volume attachments"
        items:
          $ref: "#/definitions/CloudVolumeAttachment"
    title: "CloudVolumeAttachmentsResp"
    example:
      cloud_volume_attachments:
      - block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        cloud_volume:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        cloud_instance:
          name: "name"
          id: 0
        id: 1
        device: "device"
      - block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        cloud_volume:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        cloud_instance:
          name: "name"
          id: 0
        id: 1
        device: "device"
  CloudVolumeResp:
    type: "object"
    properties:
      cloud_volume:
        description: "cloud volume"
        $ref: "#/definitions/CloudVolume"
    title: "CloudVolumeResp"
    example:
      cloud_volume:
        cloud_volume_id: "cloud_volume_id"
        cloud_datacenter:
          name: "name"
          id: 0
        cloud_platform:
          name: "name"
          id: 6
          type: "type"
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        multi_attach: true
        id: 1
        type: "type"
  CloudVolume_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "CloudVolume_Nestview"
    example:
      name: "name"
      id: 6
  CloudVolumesResp:
    type: "object"
    properties:
      cloud_volumes:
        type: "array"
        description: "cloud volumes"
        items:
          $ref: "#/definitions/CloudVolume"
    title: "CloudVolumesResp"
    example:
      cloud_volumes:
      - cloud_volume_id: "cloud_volume_id"
        cloud_datacenter:
          name: "name"
          id: 0
        cloud_platform:
          name: "name"
          id: 6
          type: "type"
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        multi_attach: true
        id: 1
        type: "type"
      - cloud_volume_id: "cloud_volume_id"
        cloud_datacenter:
          name: "name"
          id: 0
        cloud_platform:
          name: "name"
          id: 6
          type: "type"
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        multi_attach: true
        id: 1
        type: "type"
  Cluster:
    type: "object"
    properties:
      access_token:
        $ref: "#/definitions/AccessToken"
      access_url:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      disk_lighting_mode:
        type: "string"
      down_out_interval:
        type: "integer"
        format: "int64"
      elasticsearch_enabled:
        type: "boolean"
      fs_id:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      maintained:
        type: "boolean"
      name:
        type: "string"
      os_gateway_oplog_switch:
        type: "boolean"
      snmp_enabled:
        type: "boolean"
      stats_reserved_days:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      version:
        type: "string"
    title: "Cluster"
    description: "Cluster defines the ceph cluster @grpc-models-proto"
    example:
      access_url: "access_url"
      snmp_enabled: true
      update: "2000-01-23T04:56:07.000+00:00"
      stats_reserved_days: 1
      version: "version"
      down_out_interval: 0
      os_gateway_oplog_switch: true
      access_token:
        roles:
        - "roles"
        - "roles"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        used: true
        user:
          name: "name"
          id: 6
      elasticsearch_enabled: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 6
      maintained: true
      fs_id: "fs_id"
      disk_lighting_mode: "disk_lighting_mode"
      status: "status"
  ClusterInstallation:
    type: "object"
    properties:
      finished:
        type: "boolean"
      steps:
        $ref: "#/definitions/ClusterInstallation_Steps"
    title: "ClusterInstallation"
    description: "ClusterInstallation returns installation status of the cluster"
    example:
      finished: true
      steps:
        license: true
        bootnode: true
        user: true
  ClusterInstallationResp:
    type: "object"
    properties:
      installation:
        description: "installation status"
        $ref: "#/definitions/ClusterInstallation"
    title: "ClusterInstallationResp"
    example:
      installation:
        finished: true
        steps:
          license: true
          bootnode: true
          user: true
  ClusterInstallation_Steps:
    type: "object"
    properties:
      bootnode:
        type: "boolean"
        description: "step of setting boot node"
      license:
        type: "boolean"
        description: "step of registering license"
      user:
        type: "boolean"
        description: "step of creating user"
    title: "ClusterInstallation_Steps"
    example:
      license: true
      bootnode: true
      user: true
  ClusterMaintainReq:
    type: "object"
    required:
    - "cluster"
    properties:
      cluster:
        $ref: "#/definitions/ClusterMaintainReq_Cluster"
    title: "ClusterMaintainReq"
    example:
      cluster:
        maintained: true
  ClusterMaintainReq_Cluster:
    type: "object"
    required:
    - "maintained"
    properties:
      maintained:
        type: "boolean"
    title: "ClusterMaintainReq_Cluster"
    example:
      maintained: true
  ClusterOverview:
    type: "object"
    properties:
      access_path_active_num:
        type: "integer"
        format: "int64"
      access_path_error_num:
        type: "integer"
        format: "int64"
      access_path_num:
        type: "integer"
        format: "int64"
      access_path_warning_num:
        type: "integer"
        format: "int64"
      block_volume_active_num:
        type: "integer"
        format: "int64"
      block_volume_error_num:
        type: "integer"
        format: "int64"
      block_volume_num:
        type: "integer"
        format: "int64"
      client_group_active_num:
        type: "integer"
        format: "int64"
      client_group_error_num:
        type: "integer"
        format: "int64"
      client_group_num:
        type: "integer"
        format: "int64"
      cloud_instance_num:
        type: "integer"
        format: "int64"
      cloud_platform_num:
        type: "integer"
        format: "int64"
      cloud_volume_num:
        type: "integer"
        format: "int64"
      fs_client_group_num:
        type: "integer"
        format: "int64"
      fs_client_num:
        type: "integer"
        format: "int64"
      fs_folder_active_num:
        type: "integer"
        format: "int64"
      fs_folder_error_num:
        type: "integer"
        format: "int64"
      fs_folder_num:
        type: "integer"
        format: "int64"
      fs_gateway_group_active_num:
        type: "integer"
        format: "int64"
      fs_gateway_group_error_num:
        type: "integer"
        format: "int64"
      fs_gateway_group_num:
        type: "integer"
        format: "int64"
      fs_gateway_group_warning_num:
        type: "integer"
        format: "int64"
      fs_snapshot_active_num:
        type: "integer"
        format: "int64"
      fs_snapshot_error_num:
        type: "integer"
        format: "int64"
      fs_snapshot_num:
        type: "integer"
        format: "int64"
      fs_user_available_num:
        type: "integer"
        format: "int64"
      fs_user_num:
        type: "integer"
        format: "int64"
      host_active_num:
        type: "integer"
        format: "int64"
      host_error_num:
        type: "integer"
        format: "int64"
      host_num:
        type: "integer"
        format: "int64"
      host_offline_num:
        type: "integer"
        format: "int64"
      host_warning_num:
        type: "integer"
        format: "int64"
      nfs_gateway_active_num:
        type: "integer"
        format: "int64"
      nfs_gateway_error_num:
        type: "integer"
        format: "int64"
      nfs_gateway_num:
        type: "integer"
        format: "int64"
      nfs_gateway_stopped_num:
        type: "integer"
        format: "int64"
      os_bucket_active_num:
        type: "integer"
        format: "int64"
      os_bucket_error_num:
        type: "integer"
        format: "int64"
      os_bucket_num:
        type: "integer"
        format: "int64"
      os_gateway_active_num:
        type: "integer"
        format: "int64"
      os_gateway_error_num:
        type: "integer"
        format: "int64"
      os_gateway_num:
        type: "integer"
        format: "int64"
      os_gateway_stopped_num:
        type: "integer"
        format: "int64"
      os_policy_active_num:
        type: "integer"
        format: "int64"
      os_policy_error_num:
        type: "integer"
        format: "int64"
      os_policy_num:
        type: "integer"
        format: "int64"
      os_user_active_num:
        type: "integer"
        format: "int64"
      os_user_error_num:
        type: "integer"
        format: "int64"
      os_user_num:
        type: "integer"
        format: "int64"
      osd_active_num:
        type: "integer"
        format: "int64"
      osd_error_num:
        type: "integer"
        format: "int64"
      osd_num:
        type: "integer"
        format: "int64"
      osd_offline_num:
        type: "integer"
        format: "int64"
      osd_warning_num:
        type: "integer"
        format: "int64"
      partition_active_num:
        type: "integer"
        format: "int64"
      partition_error_num:
        type: "integer"
        format: "int64"
      partition_num:
        type: "integer"
        format: "int64"
      partition_used_num:
        type: "integer"
        format: "int64"
      pd_active_num:
        type: "integer"
        format: "int64"
      pd_error_num:
        type: "integer"
        format: "int64"
      pd_num:
        type: "integer"
        format: "int64"
      pd_warning_num:
        type: "integer"
        format: "int64"
      pool_active_num:
        type: "integer"
        format: "int64"
      pool_degraded_num:
        type: "integer"
        format: "int64"
      pool_error_num:
        type: "integer"
        format: "int64"
      pool_full_num:
        type: "integer"
        format: "int64"
      pool_num:
        type: "integer"
        format: "int64"
      pool_recovering_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_active_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_error_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_group_active_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_group_error_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_group_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_group_warning_num:
        type: "integer"
        format: "int64"
      s3_load_balancer_num:
        type: "integer"
        format: "int64"
      service_mon_active_num:
        type: "integer"
        format: "int64"
      service_mon_error_num:
        type: "integer"
        format: "int64"
      service_mon_num:
        type: "integer"
        format: "int64"
      service_mon_stopped_num:
        type: "integer"
        format: "int64"
      service_xdc_active_num:
        type: "integer"
        format: "int64"
      service_xdc_error_num:
        type: "integer"
        format: "int64"
      service_xdc_num:
        type: "integer"
        format: "int64"
      service_xdc_stopped_num:
        type: "integer"
        format: "int64"
      service_xms_active_num:
        type: "integer"
        format: "int64"
      service_xms_error_num:
        type: "integer"
        format: "int64"
      service_xms_num:
        type: "integer"
        format: "int64"
      service_xms_stopped_num:
        type: "integer"
        format: "int64"
      snapshot_active_num:
        type: "integer"
        format: "int64"
      snapshot_error_num:
        type: "integer"
        format: "int64"
      snapshot_num:
        type: "integer"
        format: "int64"
    title: "ClusterOverview"
    description: "ClusterOverview contains overview data of a cluster"
    example:
      fs_folder_active_num: 6
      pool_num: 3
      block_volume_num: 7
      fs_gateway_group_active_num: 4
      osd_offline_num: 4
      access_path_num: 1
      os_gateway_active_num: 6
      partition_used_num: 0
      nfs_gateway_num: 3
      s3_load_balancer_num: 9
      osd_error_num: 0
      os_bucket_error_num: 0
      fs_snapshot_num: 9
      fs_snapshot_active_num: 6
      os_policy_active_num: 7
      service_xms_active_num: 7
      os_policy_error_num: 3
      s3_load_balancer_error_num: 1
      pd_active_num: 9
      nfs_gateway_stopped_num: 3
      s3_load_balancer_group_warning_num: 8
      osd_warning_num: 1
      pool_recovering_num: 0
      service_mon_stopped_num: 8
      os_user_num: 3
      partition_active_num: 4
      cloud_platform_num: 7
      snapshot_error_num: 7
      host_active_num: 6
      pool_full_num: 4
      service_xms_num: 3
      client_group_num: 2
      pool_error_num: 8
      access_path_active_num: 0
      snapshot_active_num: 5
      service_xdc_error_num: 5
      fs_gateway_group_error_num: 5
      service_xms_error_num: 3
      os_gateway_num: 4
      nfs_gateway_error_num: 6
      block_volume_error_num: 2
      host_error_num: 1
      partition_error_num: 7
      s3_load_balancer_active_num: 2
      pd_error_num: 0
      os_user_error_num: 5
      client_group_error_num: 3
      fs_folder_error_num: 7
      os_policy_num: 3
      s3_load_balancer_group_error_num: 6
      service_xdc_active_num: 0
      cloud_instance_num: 4
      access_path_error_num: 6
      os_gateway_stopped_num: 8
      osd_active_num: 4
      fs_snapshot_error_num: 8
      service_xms_stopped_num: 9
      access_path_warning_num: 5
      nfs_gateway_active_num: 5
      os_bucket_active_num: 7
      block_volume_active_num: 5
      fs_user_available_num: 6
      fs_client_num: 1
      partition_num: 9
      fs_user_num: 3
      os_gateway_error_num: 0
      pd_warning_num: 5
      host_warning_num: 6
      cloud_volume_num: 1
      pool_degraded_num: 6
      client_group_active_num: 9
      fs_client_group_num: 1
      fs_folder_num: 1
      fs_gateway_group_warning_num: 9
      host_offline_num: 6
      pool_active_num: 4
      service_mon_error_num: 3
      service_xdc_num: 5
      snapshot_num: 0
      host_num: 2
      service_mon_num: 9
      pd_num: 7
      osd_num: 6
      os_user_active_num: 7
      fs_gateway_group_num: 9
      s3_load_balancer_group_num: 4
      os_bucket_num: 7
      service_mon_active_num: 1
      s3_load_balancer_group_active_num: 8
      service_xdc_stopped_num: 8
  ClusterOverviewResp:
    type: "object"
    required:
    - "cluster_stats"
    properties:
      cluster_stats:
        description: "cluster overview"
        $ref: "#/definitions/ClusterOverview"
    title: "ClusterOverviewResp"
    example:
      cluster_stats:
        fs_folder_active_num: 6
        pool_num: 3
        block_volume_num: 7
        fs_gateway_group_active_num: 4
        osd_offline_num: 4
        access_path_num: 1
        os_gateway_active_num: 6
        partition_used_num: 0
        nfs_gateway_num: 3
        s3_load_balancer_num: 9
        osd_error_num: 0
        os_bucket_error_num: 0
        fs_snapshot_num: 9
        fs_snapshot_active_num: 6
        os_policy_active_num: 7
        service_xms_active_num: 7
        os_policy_error_num: 3
        s3_load_balancer_error_num: 1
        pd_active_num: 9
        nfs_gateway_stopped_num: 3
        s3_load_balancer_group_warning_num: 8
        osd_warning_num: 1
        pool_recovering_num: 0
        service_mon_stopped_num: 8
        os_user_num: 3
        partition_active_num: 4
        cloud_platform_num: 7
        snapshot_error_num: 7
        host_active_num: 6
        pool_full_num: 4
        service_xms_num: 3
        client_group_num: 2
        pool_error_num: 8
        access_path_active_num: 0
        snapshot_active_num: 5
        service_xdc_error_num: 5
        fs_gateway_group_error_num: 5
        service_xms_error_num: 3
        os_gateway_num: 4
        nfs_gateway_error_num: 6
        block_volume_error_num: 2
        host_error_num: 1
        partition_error_num: 7
        s3_load_balancer_active_num: 2
        pd_error_num: 0
        os_user_error_num: 5
        client_group_error_num: 3
        fs_folder_error_num: 7
        os_policy_num: 3
        s3_load_balancer_group_error_num: 6
        service_xdc_active_num: 0
        cloud_instance_num: 4
        access_path_error_num: 6
        os_gateway_stopped_num: 8
        osd_active_num: 4
        fs_snapshot_error_num: 8
        service_xms_stopped_num: 9
        access_path_warning_num: 5
        nfs_gateway_active_num: 5
        os_bucket_active_num: 7
        block_volume_active_num: 5
        fs_user_available_num: 6
        fs_client_num: 1
        partition_num: 9
        fs_user_num: 3
        os_gateway_error_num: 0
        pd_warning_num: 5
        host_warning_num: 6
        cloud_volume_num: 1
        pool_degraded_num: 6
        client_group_active_num: 9
        fs_client_group_num: 1
        fs_folder_num: 1
        fs_gateway_group_warning_num: 9
        host_offline_num: 6
        pool_active_num: 4
        service_mon_error_num: 3
        service_xdc_num: 5
        snapshot_num: 0
        host_num: 2
        service_mon_num: 9
        pd_num: 7
        osd_num: 6
        os_user_active_num: 7
        fs_gateway_group_num: 9
        s3_load_balancer_group_num: 4
        os_bucket_num: 7
        service_mon_active_num: 1
        s3_load_balancer_group_active_num: 8
        service_xdc_stopped_num: 8
  ClusterRecord:
    title: "ClusterRecord"
    allOf:
    - $ref: "#/definitions/Cluster"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/ClusterStat"
    description: "ClusterRecord defines the response content of cluster related API"
  ClusterRecordResp:
    type: "object"
    required:
    - "cluster"
    properties:
      cluster:
        description: "cluster info"
        $ref: "#/definitions/ClusterRecord"
    title: "ClusterRecordResp"
    example:
      cluster: ""
  ClusterResp:
    type: "object"
    required:
    - "cluster"
    properties:
      cluster:
        description: "cluster"
        $ref: "#/definitions/Cluster"
    title: "ClusterResp"
    example:
      cluster:
        access_url: "access_url"
        snmp_enabled: true
        update: "2000-01-23T04:56:07.000+00:00"
        stats_reserved_days: 1
        version: "version"
        down_out_interval: 0
        os_gateway_oplog_switch: true
        access_token:
          roles:
          - "roles"
          - "roles"
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 0
          used: true
          user:
            name: "name"
            id: 6
        elasticsearch_enabled: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        maintained: true
        fs_id: "fs_id"
        disk_lighting_mode: "disk_lighting_mode"
        status: "status"
  ClusterSamplesResp:
    type: "object"
    required:
    - "cluster_samples"
    properties:
      cluster_samples:
        type: "array"
        description: "cluster samples"
        items:
          $ref: "#/definitions/ClusterStat"
    title: "ClusterSamplesResp"
    example:
      cluster_samples:
      - healthy_percent: 5.637376656633329
        error_kbyte: 5
        os_down_bandwidth_kbyte: 2.3021358869347655
        os_down_iops: 7.061401241503109
        total_kbyte: 7
        degraded_percent: 1.4658129805029452
        recovery_percent: 6.84685269835264
        write_latency_us: 9.369310271410669
        read_latency_us: 1.2315135367772556
        unavailable_percent: 1.1730742509559433
        data_kbyte: 6
        read_iops: 7.386281948385884
        actual_kbyte: 0
        used_kbyte: 4
        read_bandwidth_kbyte: 4.145608029883936
        recovery_iops: 1.4894159098541704
        write_bandwidth_kbyte: 5.025004791520295
        create: "2000-01-23T04:56:07.000+00:00"
        recovery_bandwidth_kbyte: 1.0246457001441578
        write_iops: 9.965781217890562
        os_up_iops: 2.027123023002322
        os_merge_speed: 9
        os_up_bandwidth_kbyte: 3.616076749251911
      - healthy_percent: 5.637376656633329
        error_kbyte: 5
        os_down_bandwidth_kbyte: 2.3021358869347655
        os_down_iops: 7.061401241503109
        total_kbyte: 7
        degraded_percent: 1.4658129805029452
        recovery_percent: 6.84685269835264
        write_latency_us: 9.369310271410669
        read_latency_us: 1.2315135367772556
        unavailable_percent: 1.1730742509559433
        data_kbyte: 6
        read_iops: 7.386281948385884
        actual_kbyte: 0
        used_kbyte: 4
        read_bandwidth_kbyte: 4.145608029883936
        recovery_iops: 1.4894159098541704
        write_bandwidth_kbyte: 5.025004791520295
        create: "2000-01-23T04:56:07.000+00:00"
        recovery_bandwidth_kbyte: 1.0246457001441578
        write_iops: 9.965781217890562
        os_up_iops: 2.027123023002322
        os_merge_speed: 9
        os_up_bandwidth_kbyte: 3.616076749251911
  ClusterServerTimeResp:
    type: "object"
    properties:
      server_time:
        type: "string"
        format: "date-time"
        description: "current server time"
    title: "ClusterServerTimeResp"
    example:
      server_time: "2000-01-23T04:56:07.000+00:00"
  ClusterSetAccessInfoReq:
    type: "object"
    required:
    - "cluster"
    properties:
      cluster:
        $ref: "#/definitions/ClusterSetAccessInfoReq_Cluster"
    title: "ClusterSetAccessInfoReq"
    example:
      cluster:
        access_token_id: 0
        access_url: "access_url"
  ClusterSetAccessInfoReq_Cluster:
    type: "object"
    required:
    - "access_token_id"
    - "access_url"
    properties:
      access_token_id:
        type: "integer"
        format: "int64"
        description: "access token"
      access_url:
        type: "string"
        description: "access url"
    title: "ClusterSetAccessInfoReq_Cluster"
    example:
      access_token_id: 0
      access_url: "access_url"
  ClusterStat:
    type: "object"
    properties:
      actual_kbyte:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      data_kbyte:
        type: "integer"
        format: "int64"
      degraded_percent:
        type: "number"
        format: "double"
      error_kbyte:
        type: "integer"
        format: "int64"
      healthy_percent:
        type: "number"
        format: "double"
      os_down_bandwidth_kbyte:
        type: "number"
        format: "double"
      os_down_iops:
        type: "number"
        format: "double"
      os_merge_speed:
        type: "integer"
        format: "int64"
      os_up_bandwidth_kbyte:
        type: "number"
        format: "double"
      os_up_iops:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      recovery_bandwidth_kbyte:
        type: "number"
        format: "double"
      recovery_iops:
        type: "number"
        format: "double"
      recovery_percent:
        type: "number"
        format: "double"
      total_kbyte:
        type: "integer"
        format: "int64"
      unavailable_percent:
        type: "number"
        format: "double"
      used_kbyte:
        type: "integer"
        format: "int64"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "ClusterStat"
    description: "ClusterStat defines the statistics metric of a ceph cluster"
    example:
      healthy_percent: 5.637376656633329
      error_kbyte: 5
      os_down_bandwidth_kbyte: 2.3021358869347655
      os_down_iops: 7.061401241503109
      total_kbyte: 7
      degraded_percent: 1.4658129805029452
      recovery_percent: 6.84685269835264
      write_latency_us: 9.369310271410669
      read_latency_us: 1.2315135367772556
      unavailable_percent: 1.1730742509559433
      data_kbyte: 6
      read_iops: 7.386281948385884
      actual_kbyte: 0
      used_kbyte: 4
      read_bandwidth_kbyte: 4.145608029883936
      recovery_iops: 1.4894159098541704
      write_bandwidth_kbyte: 5.025004791520295
      create: "2000-01-23T04:56:07.000+00:00"
      recovery_bandwidth_kbyte: 1.0246457001441578
      write_iops: 9.965781217890562
      os_up_iops: 2.027123023002322
      os_merge_speed: 9
      os_up_bandwidth_kbyte: 3.616076749251911
  ClusterStatsPredictionResp:
    type: "object"
    properties:
      stats_usage_bytes_per_day:
        type: "integer"
        format: "int64"
    title: "ClusterStatsPredictionResp"
    example:
      stats_usage_bytes_per_day: 0
  ClusterUpdateReq:
    type: "object"
    required:
    - "cluster"
    properties:
      cluster:
        description: "cluster"
        $ref: "#/definitions/ClusterUpdateReq_Cluster"
    title: "ClusterUpdateReq"
    example:
      cluster:
        elasticsearch_enabled: true
        name: "name"
        stats_reserved_days: 6
        down_out_interval: 0
        disk_lighting_mode: "disk_lighting_mode"
        os_gateway_oplog_switch: true
  ClusterUpdateReq_Cluster:
    type: "object"
    properties:
      disk_lighting_mode:
        type: "string"
        description: "disk lighting mode"
      down_out_interval:
        type: "integer"
        format: "int64"
        description: "down out interval"
      elasticsearch_enabled:
        type: "boolean"
        description: "enabled or disable elasticsearch"
      name:
        type: "string"
        description: "disk lighting mode"
      os_gateway_oplog_switch:
        type: "boolean"
        description: "os gateway oplog switch"
      stats_reserved_days:
        type: "integer"
        format: "int64"
        description: "stats reserve days"
    title: "ClusterUpdateReq_Cluster"
    example:
      elasticsearch_enabled: true
      name: "name"
      stats_reserved_days: 6
      down_out_interval: 0
      disk_lighting_mode: "disk_lighting_mode"
      os_gateway_oplog_switch: true
  ConfItem:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      key:
        type: "string"
      type:
        type: "string"
      value:
        type: "string"
    title: "ConfItem"
    description: "ConfItem is a ceph config pair"
    example:
      id: 0
      type: "type"
      value: "value"
      key: "key"
  ConfItemResp:
    type: "object"
    required:
    - "conf"
    properties:
      conf:
        description: "conf item"
        $ref: "#/definitions/ConfItem"
    title: "ConfItemResp"
    example:
      conf:
        id: 0
        type: "type"
        value: "value"
        key: "key"
  ConfItemSetReq:
    type: "object"
    required:
    - "conf"
    properties:
      conf:
        $ref: "#/definitions/ConfItemSetReq_ConfItem"
    title: "ConfItemSetReq"
    example:
      conf:
        type: "type"
        value: "value"
        key: "key"
  ConfItemSetReq_ConfItem:
    type: "object"
    required:
    - "key"
    - "type"
    - "value"
    properties:
      key:
        type: "string"
      type:
        type: "string"
      value:
        type: "string"
    title: "ConfItemSetReq_ConfItem"
    example:
      type: "type"
      value: "value"
      key: "key"
  ConfItemsResp:
    type: "object"
    required:
    - "confs"
    properties:
      confs:
        type: "array"
        description: "conf items"
        items:
          $ref: "#/definitions/ConfItem"
    title: "ConfItemsResp"
    example:
      confs:
      - id: 0
        type: "type"
        value: "value"
        key: "key"
      - id: 0
        type: "type"
        value: "value"
        key: "key"
  ConfItemsSetReq:
    type: "object"
    required:
    - "confs"
    properties:
      confs:
        type: "object"
        additionalProperties:
          type: "string"
    title: "ConfItemsSetReq"
    example:
      confs:
        key: "confs"
  CryptoKey:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      enabled:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "CryptoKey"
    description: "CryptoKey is a crypto key"
    example:
      size: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      enabled: true
  CryptoKeyResp:
    type: "object"
    required:
    - "crypto_key"
    properties:
      crypto_key:
        $ref: "#/definitions/CryptoKey"
    title: "CryptoKeyResp"
    example:
      crypto_key:
        size: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
  CryptoKeyUpdateReq:
    type: "object"
    properties:
      crypto_key:
        $ref: "#/definitions/CryptoKeyUpdateReq_Key"
    title: "CryptoKeyUpdateReq"
    example:
      crypto_key:
        enabled: true
  CryptoKeyUpdateReq_Key:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "enable or disable the key"
    title: "CryptoKeyUpdateReq_Key"
    example:
      enabled: true
  CryptoKey_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "CryptoKey_Nestview"
    example:
      name: "name"
      id: 6
  CryptoKeysResp:
    type: "object"
    required:
    - "crypto_keys"
    properties:
      crypto_keys:
        type: "array"
        items:
          $ref: "#/definitions/CryptoKey"
    title: "CryptoKeysResp"
    example:
      crypto_keys:
      - size: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
      - size: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
  Disk:
    type: "object"
    properties:
      action_status:
        type: "string"
      bytes:
        type: "integer"
        format: "int64"
        description: "size of disk"
      cache_create:
        type: "string"
        format: "date-time"
      channel_id:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      device:
        type: "string"
      disk_type:
        type: "string"
      driver_type:
        type: "string"
      enclosure_id:
        type: "string"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      is_cache:
        type: "boolean"
        description: "used as cache disk"
      is_root:
        type: "boolean"
        description: "used as root disk"
      lighting_status:
        type: "string"
      model:
        type: "string"
      partition_num:
        type: "integer"
        format: "int64"
      partitions:
        type: "array"
        items:
          $ref: "#/definitions/Partition"
      power_safe:
        type: "boolean"
      rotation_rate:
        type: "string"
      rotational:
        type: "boolean"
      serial:
        type: "string"
      slot_id:
        type: "string"
      smart_attrs:
        type: "array"
        items:
          $ref: "#/definitions/SmartAttr"
      ssd_life_left:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      used:
        type: "boolean"
      wwid:
        type: "string"
    title: "Disk"
    description: "Disk defines the available disk @grpc-models-proto"
  DiskPrediction:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      used_kbyte_1day:
        type: "integer"
        format: "int64"
      used_kbyte_30days:
        type: "integer"
        format: "int64"
      used_kbyte_7days:
        type: "integer"
        format: "int64"
      used_kbyte_points:
        type: "array"
        items:
          $ref: "#/definitions/PredictionPoint"
    title: "DiskPrediction"
    description: "DiskPrediction contains disk prediction data"
    example:
      used_kbyte_30days: 1
      used_kbyte_7days: 5
      used_kbyte_points:
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      used_kbyte_1day: 6
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
  DiskRecord:
    title: "DiskRecord"
    allOf:
    - $ref: "#/definitions/Disk"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/DiskStat"
    description: "DiskRecord contains information of a disk"
  DiskResp:
    type: "object"
    required:
    - "disk"
    properties:
      disk:
        description: "disk"
        $ref: "#/definitions/DiskRecord"
    title: "DiskResp"
    example:
      disk: ""
  DiskSamplesResp:
    type: "object"
    required:
    - "disk_samples"
    properties:
      disk_samples:
        type: "array"
        description: "disk samples"
        items:
          $ref: "#/definitions/DiskStat"
    title: "DiskSamplesResp"
    example:
      disk_samples:
      - healthy_percent: 1.4658129805029452
        read_wait_us: 7.386281948385884
        recovery_percent: 1.2315135367772556
        total_bandwidth_kbyte: 1.0246457001441578
        read_merged_ps: 4.145608029883936
        read_bandwidth_kbyte: 3.616076749251911
        omap_total_kbyte: 2.3021358869347655
        avg_queue_len: 0.8008281904610115
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 9.369310271410669
        total_kbyte: 7
        degraded_percent: 6.027456183070403
        total_iops: 6.84685269835264
        write_merged_ps: 6.683562403749608
        unavailable_percent: 1.1730742509559433
        read_iops: 2.027123023002322
        io_util: 5.962133916683182
        omap_used_kbyte: 7.061401241503109
        omap_used_percent: 9.301444243932576
        used_kbyte: 4
        write_bandwidth_kbyte: 9.965781217890562
        write_wait_us: 8.762042012749001
        used_percent: 5.025004791520295
        kbyte_per_io: 5.637376656633329
        total_io_wait_us: 1.4894159098541704
      - healthy_percent: 1.4658129805029452
        read_wait_us: 7.386281948385884
        recovery_percent: 1.2315135367772556
        total_bandwidth_kbyte: 1.0246457001441578
        read_merged_ps: 4.145608029883936
        read_bandwidth_kbyte: 3.616076749251911
        omap_total_kbyte: 2.3021358869347655
        avg_queue_len: 0.8008281904610115
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 9.369310271410669
        total_kbyte: 7
        degraded_percent: 6.027456183070403
        total_iops: 6.84685269835264
        write_merged_ps: 6.683562403749608
        unavailable_percent: 1.1730742509559433
        read_iops: 2.027123023002322
        io_util: 5.962133916683182
        omap_used_kbyte: 7.061401241503109
        omap_used_percent: 9.301444243932576
        used_kbyte: 4
        write_bandwidth_kbyte: 9.965781217890562
        write_wait_us: 8.762042012749001
        used_percent: 5.025004791520295
        kbyte_per_io: 5.637376656633329
        total_io_wait_us: 1.4894159098541704
  DiskStat:
    type: "object"
    properties:
      avg_queue_len:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      degraded_percent:
        type: "number"
        format: "double"
      healthy_percent:
        type: "number"
        format: "double"
      io_util:
        type: "number"
        format: "double"
      kbyte_per_io:
        type: "number"
        format: "double"
      omap_total_kbyte:
        type: "number"
        format: "double"
      omap_used_kbyte:
        type: "number"
        format: "double"
      omap_used_percent:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_merged_ps:
        type: "number"
        format: "double"
      read_wait_us:
        type: "number"
        format: "double"
      recovery_percent:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_io_wait_us:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      total_kbyte:
        type: "integer"
        format: "int64"
      unavailable_percent:
        type: "number"
        format: "double"
      used_kbyte:
        type: "integer"
        format: "int64"
      used_percent:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_merged_ps:
        type: "number"
        format: "double"
      write_wait_us:
        type: "number"
        format: "double"
    title: "DiskStat"
    description: "DiskStat defines the basic info of a DiskStat"
    example:
      healthy_percent: 1.4658129805029452
      read_wait_us: 7.386281948385884
      recovery_percent: 1.2315135367772556
      total_bandwidth_kbyte: 1.0246457001441578
      read_merged_ps: 4.145608029883936
      read_bandwidth_kbyte: 3.616076749251911
      omap_total_kbyte: 2.3021358869347655
      avg_queue_len: 0.8008281904610115
      create: "2000-01-23T04:56:07.000+00:00"
      write_iops: 9.369310271410669
      total_kbyte: 7
      degraded_percent: 6.027456183070403
      total_iops: 6.84685269835264
      write_merged_ps: 6.683562403749608
      unavailable_percent: 1.1730742509559433
      read_iops: 2.027123023002322
      io_util: 5.962133916683182
      omap_used_kbyte: 7.061401241503109
      omap_used_percent: 9.301444243932576
      used_kbyte: 4
      write_bandwidth_kbyte: 9.965781217890562
      write_wait_us: 8.762042012749001
      used_percent: 5.025004791520295
      kbyte_per_io: 5.637376656633329
      total_io_wait_us: 1.4894159098541704
  DiskUpdateReq:
    type: "object"
    required:
    - "disk"
    properties:
      disk:
        $ref: "#/definitions/DiskUpdateReq_Disk"
    title: "DiskUpdateReq"
    example:
      disk:
        power_safe: true
        disk_type: "disk_type"
        lighting_status: "lighting_status"
  DiskUpdateReq_Disk:
    type: "object"
    properties:
      disk_type:
        type: "string"
      lighting_status:
        type: "string"
      power_safe:
        type: "boolean"
    title: "DiskUpdateReq_Disk"
    example:
      power_safe: true
      disk_type: "disk_type"
      lighting_status: "lighting_status"
  Disk_Nestview:
    type: "object"
    properties:
      device:
        type: "string"
      disk_type:
        type: "string"
      id:
        type: "integer"
        format: "int64"
    title: "Disk_Nestview"
    example:
      disk_type: "disk_type"
      id: 0
      device: "device"
  DisksResp:
    type: "object"
    required:
    - "disks"
    properties:
      disks:
        type: "array"
        description: "disks"
        items:
          $ref: "#/definitions/DiskRecord"
    title: "DisksResp"
    example:
      disks:
      - ""
      - ""
  DomainUserValidator:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      members:
        type: "object"
        properties: {}
      report:
        type: "object"
        properties: {}
      status:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DomainUserValidator"
    description: "DomainUserValidator defines the validator for domain users"
    example:
      members: "{}"
      report: "{}"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      type: "type"
      status: "status"
  DomainUserValidatorCreateReq:
    type: "object"
    properties:
      domain_user_validator:
        $ref: "#/definitions/DomainUserValidatorCreateReq_Validator"
    title: "DomainUserValidatorCreateReq"
    example:
      domain_user_validator:
        groups:
        - "groups"
        - "groups"
        type: "type"
        users:
        - "users"
        - "users"
  DomainUserValidatorCreateReq_Validator:
    type: "object"
    required:
    - "type"
    properties:
      groups:
        type: "array"
        description: "Domain groups"
        items:
          type: "string"
      type:
        type: "string"
        description: "Domain type"
      users:
        type: "array"
        description: "Domain users"
        items:
          type: "string"
    title: "DomainUserValidatorCreateReq_Validator"
    example:
      groups:
      - "groups"
      - "groups"
      type: "type"
      users:
      - "users"
      - "users"
  DomainUserValidatorResp:
    type: "object"
    properties:
      domain_user_validator:
        $ref: "#/definitions/DomainUserValidator"
    title: "DomainUserValidatorResp"
    example:
      domain_user_validator:
        members: "{}"
        report: "{}"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        status: "status"
  DpBackupBlockSnapshot:
    type: "object"
    properties:
      backup_type:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      size:
        type: "integer"
        format: "int64"
      volume_size:
        type: "integer"
        format: "int64"
    title: "DpBackupBlockSnapshot"
    description: "DpBackupBlockSnapshot is a block snapshot stored on a site"
    example:
      size: 0
      backup_type: "backup_type"
      create: "2000-01-23T04:56:07.000+00:00"
      volume_size: 6
  DpBackupBlockSnapshotsResp:
    type: "object"
    required:
    - "backup_block_snapshots"
    properties:
      backup_block_snapshots:
        type: "array"
        description: "block snapshots"
        items:
          $ref: "#/definitions/DpBackupBlockSnapshot"
    title: "DpBackupBlockSnapshotsResp"
    example:
      backup_block_snapshots:
      - size: 0
        backup_type: "backup_type"
        create: "2000-01-23T04:56:07.000+00:00"
        volume_size: 6
      - size: 0
        backup_type: "backup_type"
        create: "2000-01-23T04:56:07.000+00:00"
        volume_size: 6
  DpBackupBlockVolume:
    type: "object"
    properties:
      format:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      volume_name:
        type: "string"
    title: "DpBackupBlockVolume"
    description: "DpBackupBlockVolume is a block volume stored on a site"
    example:
      size: 5
      format: 1
      name: "name"
      volume_name: "volume_name"
  DpBackupBlockVolumesResp:
    type: "object"
    required:
    - "backup_block_volumes"
    properties:
      backup_block_volumes:
        type: "array"
        description: "block volumes"
        items:
          $ref: "#/definitions/DpBackupBlockVolume"
    title: "DpBackupBlockVolumesResp"
    example:
      backup_block_volumes:
      - size: 5
        format: 1
        name: "name"
        volume_name: "volume_name"
      - size: 5
        format: 1
        name: "name"
        volume_name: "volume_name"
  DpBackupCluster:
    type: "object"
    properties:
      fs_id:
        type: "string"
      name:
        type: "string"
    title: "DpBackupCluster"
    description: "DpBackupCluster is a cluster stored on a site"
    example:
      name: "name"
      fs_id: "fs_id"
  DpBackupClustersResp:
    type: "object"
    required:
    - "backup_clusters"
    properties:
      backup_clusters:
        type: "array"
        description: "clusters"
        items:
          $ref: "#/definitions/DpBackupCluster"
    title: "DpBackupClustersResp"
    example:
      backup_clusters:
      - name: "name"
        fs_id: "fs_id"
      - name: "name"
        fs_id: "fs_id"
  DpBlockBackupJob:
    type: "object"
    properties:
      block_snapshot:
        $ref: "#/definitions/Snapshot_Nestview"
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      block_volume_size:
        type: "integer"
        format: "int64"
      diff_type:
        type: "string"
      dp_block_backup_policy:
        $ref: "#/definitions/DpBlockBackupPolicy_Nestview"
      finished_at:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      max_retry_times:
        type: "integer"
        format: "int64"
      progress:
        type: "number"
        format: "double"
      size:
        type: "integer"
        format: "int64"
      started_at:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      updated_at:
        type: "string"
        format: "date-time"
    title: "DpBlockBackupJob"
    description: "DpBlockBackupJob is one execution of a dp block backup protection"
    example:
      finished_at: "2000-01-23T04:56:07.000+00:00"
      diff_type: "diff_type"
      block_volume:
        original_name: "original_name"
        name: "name"
        id: 9
      block_snapshot:
        name: "name"
        id: 0
      block_volume_size: 6
      size: 7
      updated_at: "2000-01-23T04:56:07.000+00:00"
      dp_block_backup_policy:
        name: "name"
        id: 1
      progress: 2.3021358869347655
      started_at: "2000-01-23T04:56:07.000+00:00"
      id: 5
      max_retry_times: 5
      status: "status"
  DpBlockBackupJobsResp:
    type: "object"
    required:
    - "dp_block_backup_jobs"
    properties:
      dp_block_backup_jobs:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockBackupJob"
    title: "DpBlockBackupJobsResp"
    example:
      dp_block_backup_jobs:
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        diff_type: "diff_type"
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        block_snapshot:
          name: "name"
          id: 0
        block_volume_size: 6
        size: 7
        updated_at: "2000-01-23T04:56:07.000+00:00"
        dp_block_backup_policy:
          name: "name"
          id: 1
        progress: 2.3021358869347655
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 5
        max_retry_times: 5
        status: "status"
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        diff_type: "diff_type"
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        block_snapshot:
          name: "name"
          id: 0
        block_volume_size: 6
        size: 7
        updated_at: "2000-01-23T04:56:07.000+00:00"
        dp_block_backup_policy:
          name: "name"
          id: 1
        progress: 2.3021358869347655
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 5
        max_retry_times: 5
        status: "status"
  DpBlockBackupPoliciesResp:
    type: "object"
    properties:
      dp_block_backup_policies:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockBackupPolicy"
    title: "DpBlockBackupPoliciesResp"
    example:
      dp_block_backup_policies:
      - inc_cron_expr: "inc_cron_expr"
        retained_max: 5
        dp_site:
          name: "name"
          id: 1
        encrypted: true
        block_volume_num: 0
        full_cron_expr: "full_cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        status: "status"
      - inc_cron_expr: "inc_cron_expr"
        retained_max: 5
        dp_site:
          name: "name"
          id: 1
        encrypted: true
        block_volume_num: 0
        full_cron_expr: "full_cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        status: "status"
  DpBlockBackupPolicy:
    type: "object"
    properties:
      block_volume_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      dp_gateway:
        $ref: "#/definitions/DpGateway_Nestview"
      dp_site:
        $ref: "#/definitions/DpSite_Nestview"
      encrypted:
        type: "boolean"
      full_cron_expr:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      inc_cron_expr:
        type: "string"
      name:
        type: "string"
      retained_max:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DpBlockBackupPolicy"
    description: "DpBlockBackupPolicy protects a block volume by backup snapshot to\
      \ remote site"
    example:
      inc_cron_expr: "inc_cron_expr"
      retained_max: 5
      dp_site:
        name: "name"
        id: 1
      encrypted: true
      block_volume_num: 0
      full_cron_expr: "full_cron_expr"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      dp_gateway:
        name: "name"
        id: 6
      id: 5
      status: "status"
  DpBlockBackupPolicyCreateReq:
    type: "object"
    required:
    - "dp_block_backup_policy"
    properties:
      dp_block_backup_policy:
        $ref: "#/definitions/DpBlockBackupPolicyCreateReq_Policy"
    title: "DpBlockBackupPolicyCreateReq"
    example:
      dp_block_backup_policy:
        inc_cron_expr: "inc_cron_expr"
        retained_max: 1
        dp_gateway_id: 0
        encrypted: true
        full_cron_expr: "full_cron_expr"
        name: "name"
        dp_site_id: 6
  DpBlockBackupPolicyCreateReq_Policy:
    type: "object"
    required:
    - "dp_gateway_id"
    - "dp_site_id"
    - "full_cron_expr"
    - "name"
    - "retained_max"
    properties:
      dp_gateway_id:
        type: "integer"
        format: "int64"
        description: "dp gateway"
      dp_site_id:
        type: "integer"
        format: "int64"
        description: "dp site"
      encrypted:
        type: "boolean"
        description: "encrypted or not"
      full_cron_expr:
        type: "string"
        description: "cron expression for full backup"
      inc_cron_expr:
        type: "string"
        description: "cron expression for increment backup"
      name:
        type: "string"
        description: "name"
      retained_max:
        type: "integer"
        format: "int64"
        description: "retained max number of backups"
    title: "DpBlockBackupPolicyCreateReq_Policy"
    example:
      inc_cron_expr: "inc_cron_expr"
      retained_max: 1
      dp_gateway_id: 0
      encrypted: true
      full_cron_expr: "full_cron_expr"
      name: "name"
      dp_site_id: 6
  DpBlockBackupPolicyResp:
    type: "object"
    properties:
      dp_block_backup_policy:
        $ref: "#/definitions/DpBlockBackupPolicy"
    title: "DpBlockBackupPolicyResp"
    example:
      dp_block_backup_policy:
        inc_cron_expr: "inc_cron_expr"
        retained_max: 5
        dp_site:
          name: "name"
          id: 1
        encrypted: true
        block_volume_num: 0
        full_cron_expr: "full_cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        status: "status"
  DpBlockBackupPolicyUpdateReq:
    type: "object"
    required:
    - "dp_block_backup_policy"
    properties:
      dp_block_backup_policy:
        $ref: "#/definitions/DpBlockBackupPolicyUpdateReq_Policy"
    title: "DpBlockBackupPolicyUpdateReq"
    example:
      dp_block_backup_policy:
        inc_cron_expr: "inc_cron_expr"
        retained_max: 0
        encrypted: true
        full_cron_expr: "full_cron_expr"
        name: "name"
  DpBlockBackupPolicyUpdateReq_Policy:
    type: "object"
    properties:
      encrypted:
        type: "boolean"
        description: "encrypted or not"
      full_cron_expr:
        type: "string"
        description: "cron expression for full backup"
      inc_cron_expr:
        type: "string"
        description: "cron expression for increment backup"
      name:
        type: "string"
        description: "name"
      retained_max:
        type: "integer"
        format: "int64"
        description: "retained max number of backups"
    title: "DpBlockBackupPolicyUpdateReq_Policy"
    example:
      inc_cron_expr: "inc_cron_expr"
      retained_max: 0
      encrypted: true
      full_cron_expr: "full_cron_expr"
      name: "name"
  DpBlockBackupPolicy_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpBlockBackupPolicy_Nestview"
    example:
      name: "name"
      id: 1
  DpBlockReplicationPoliciesResp:
    type: "object"
    properties:
      dp_block_replication_policies:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockReplicationPolicy"
    title: "DpBlockReplicationPoliciesResp"
    example:
      dp_block_replication_policies:
      - dp_site:
          name: "name"
          id: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        timeout_seconds: 6
        status: "status"
      - dp_site:
          name: "name"
          id: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        timeout_seconds: 6
        status: "status"
  DpBlockReplicationPolicy:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      dp_site:
        $ref: "#/definitions/DpSite_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
      timeout_seconds:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "DpBlockReplicationPolicy"
    description: "DpBlockReplicationPolicy protects a block volume by sync replication"
    example:
      dp_site:
        name: "name"
        id: 1
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      timeout_seconds: 6
      status: "status"
  DpBlockReplicationPolicyCreateReq:
    type: "object"
    required:
    - "dp_block_replication_policy"
    properties:
      dp_block_replication_policy:
        $ref: "#/definitions/DpBlockReplicationPolicyCreateReq_Policy"
    title: "DpBlockReplicationPolicyCreateReq"
    example:
      dp_block_replication_policy:
        name: "name"
        dp_site_id: 0
        timeout_seconds: 6
  DpBlockReplicationPolicyCreateReq_Policy:
    type: "object"
    required:
    - "dp_site_id"
    - "name"
    - "timeout_seconds"
    properties:
      dp_site_id:
        type: "integer"
        format: "int64"
        description: "protection site id"
      name:
        type: "string"
        description: "name"
      timeout_seconds:
        type: "integer"
        format: "int64"
        description: "replication timeout seconds"
    title: "DpBlockReplicationPolicyCreateReq_Policy"
    example:
      name: "name"
      dp_site_id: 0
      timeout_seconds: 6
  DpBlockReplicationPolicyResp:
    type: "object"
    properties:
      dp_block_replication_policy:
        $ref: "#/definitions/DpBlockReplicationPolicy"
    title: "DpBlockReplicationPolicyResp"
    example:
      dp_block_replication_policy:
        dp_site:
          name: "name"
          id: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        timeout_seconds: 6
        status: "status"
  DpBlockReplicationPolicyUpdateReq:
    type: "object"
    required:
    - "dp_block_replication_policy"
    properties:
      dp_block_replication_policy:
        $ref: "#/definitions/DpBlockReplicationPolicyUpdateReq_Policy"
    title: "DpBlockReplicationPolicyUpdateReq"
    example:
      dp_block_replication_policy:
        name: "name"
        timeout_seconds: 0
  DpBlockReplicationPolicyUpdateReq_Policy:
    type: "object"
    properties:
      name:
        type: "string"
        description: "name"
      timeout_seconds:
        type: "integer"
        format: "int64"
        description: "replication timeout seconds"
    title: "DpBlockReplicationPolicyUpdateReq_Policy"
    example:
      name: "name"
      timeout_seconds: 0
  DpBlockReplicationPolicy_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpBlockReplicationPolicy_Nestview"
  DpBlockSnapshotJob:
    type: "object"
    properties:
      block_snapshot:
        $ref: "#/definitions/Snapshot_Nestview"
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      block_volume_size:
        type: "integer"
        format: "int64"
      diff_type:
        type: "string"
      dp_block_snapshot_policy:
        $ref: "#/definitions/DpBlockSnapshotPolicy_Nestview"
      finished_at:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      progress:
        type: "number"
        format: "double"
      size:
        type: "integer"
        format: "int64"
      started_at:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      updated_at:
        type: "string"
        format: "date-time"
    title: "DpBlockSnapshotJob"
    description: "DpBlockSnapshotJob is one execution of a dp block snapshot plan"
    example:
      block_volume_size: 0
      finished_at: "2000-01-23T04:56:07.000+00:00"
      size: 5
      updated_at: "2000-01-23T04:56:07.000+00:00"
      diff_type: "diff_type"
      dp_block_snapshot_policy:
        name: "name"
        id: 6
      block_volume:
        original_name: "original_name"
        name: "name"
        id: 9
      progress: 5.962133916683182
      started_at: "2000-01-23T04:56:07.000+00:00"
      id: 1
      block_snapshot:
        name: "name"
        id: 0
      status: "status"
  DpBlockSnapshotJobsResp:
    type: "object"
    required:
    - "dp_block_snapshot_jobs"
    properties:
      dp_block_snapshot_jobs:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockSnapshotJob"
    title: "DpBlockSnapshotJobsResp"
    example:
      dp_block_snapshot_jobs:
      - block_volume_size: 0
        finished_at: "2000-01-23T04:56:07.000+00:00"
        size: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        diff_type: "diff_type"
        dp_block_snapshot_policy:
          name: "name"
          id: 6
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        progress: 5.962133916683182
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        block_snapshot:
          name: "name"
          id: 0
        status: "status"
      - block_volume_size: 0
        finished_at: "2000-01-23T04:56:07.000+00:00"
        size: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        diff_type: "diff_type"
        dp_block_snapshot_policy:
          name: "name"
          id: 6
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        progress: 5.962133916683182
        started_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        block_snapshot:
          name: "name"
          id: 0
        status: "status"
  DpBlockSnapshotPoliciesResp:
    type: "object"
    properties:
      dp_block_snapshot_policies:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockSnapshotPolicy"
    title: "DpBlockSnapshotPoliciesResp"
    example:
      dp_block_snapshot_policies:
      - retained_max: 1
        block_volume_num: 0
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        status: "status"
      - retained_max: 1
        block_volume_num: 0
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        status: "status"
  DpBlockSnapshotPolicy:
    type: "object"
    properties:
      block_volume_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      cron_expr:
        type: "string"
      dp_gateway:
        $ref: "#/definitions/DpGateway_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      retained_max:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DpBlockSnapshotPolicy"
    description: "DpBlockSnapshotPolicy protects a block volume by snapshot"
    example:
      retained_max: 1
      block_volume_num: 0
      cron_expr: "cron_expr"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      dp_gateway:
        name: "name"
        id: 6
      id: 6
      status: "status"
  DpBlockSnapshotPolicyCreateReq:
    type: "object"
    required:
    - "dp_block_snapshot_policy"
    properties:
      dp_block_snapshot_policy:
        $ref: "#/definitions/DpBlockSnapshotPolicyCreateReq_Policy"
    title: "DpBlockSnapshotPolicyCreateReq"
    example:
      dp_block_snapshot_policy:
        retained_max: 6
        dp_gateway_id: 0
        cron_expr: "cron_expr"
        name: "name"
  DpBlockSnapshotPolicyCreateReq_Policy:
    type: "object"
    required:
    - "cron_expr"
    - "dp_gateway_id"
    - "name"
    - "retained_max"
    properties:
      cron_expr:
        type: "string"
        description: "cron expression"
      dp_gateway_id:
        type: "integer"
        format: "int64"
        description: "dp gateway"
      name:
        type: "string"
        description: "name"
      retained_max:
        type: "integer"
        format: "int64"
        description: "retained max number of snapshots"
    title: "DpBlockSnapshotPolicyCreateReq_Policy"
    example:
      retained_max: 6
      dp_gateway_id: 0
      cron_expr: "cron_expr"
      name: "name"
  DpBlockSnapshotPolicyResp:
    type: "object"
    properties:
      dp_block_snapshot_policy:
        $ref: "#/definitions/DpBlockSnapshotPolicy"
    title: "DpBlockSnapshotPolicyResp"
    example:
      dp_block_snapshot_policy:
        retained_max: 1
        block_volume_num: 0
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        status: "status"
  DpBlockSnapshotPolicyUpdateReq:
    type: "object"
    required:
    - "dp_block_snapshot_policy"
    properties:
      dp_block_snapshot_policy:
        $ref: "#/definitions/DpBlockSnapshotPolicyUpdateReq_Policy"
    title: "DpBlockSnapshotPolicyUpdateReq"
    example:
      dp_block_snapshot_policy:
        retained_max: 0
        cron_expr: "cron_expr"
        name: "name"
  DpBlockSnapshotPolicyUpdateReq_Policy:
    type: "object"
    properties:
      cron_expr:
        type: "string"
        description: "cron expression"
      name:
        type: "string"
        description: "name"
      retained_max:
        type: "integer"
        format: "int64"
        description: "retained max number of snapshots"
    title: "DpBlockSnapshotPolicyUpdateReq_Policy"
    example:
      retained_max: 0
      cron_expr: "cron_expr"
      name: "name"
  DpBlockSnapshotPolicy_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpBlockSnapshotPolicy_Nestview"
    example:
      name: "name"
      id: 6
  DpBlockSnapshotRecoveryJob:
    type: "object"
    properties:
      backup_block_snapshot:
        $ref: "#/definitions/DpBackupBlockSnapshot"
      backup_block_volume:
        $ref: "#/definitions/DpBackupBlockVolume"
      backup_cluster:
        $ref: "#/definitions/DpBackupCluster"
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      create:
        type: "string"
        format: "date-time"
      dp_gateway:
        $ref: "#/definitions/DpGateway_Nestview"
      dp_site:
        $ref: "#/definitions/DpSite_Nestview"
      finished_at:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      max_retry_times:
        type: "integer"
        format: "int64"
      progress:
        type: "number"
        format: "double"
      resource_type:
        type: "string"
      started_at:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
    title: "DpBlockSnapshotRecoveryJob"
    description: "DpBlockSnapshotRecoveryJob recovery a block resource"
    example:
      dp_site:
        name: "name"
        id: 1
      finished_at: "2000-01-23T04:56:07.000+00:00"
      backup_block_snapshot:
        size: 0
        backup_type: "backup_type"
        create: "2000-01-23T04:56:07.000+00:00"
        volume_size: 6
      block_volume:
        original_name: "original_name"
        name: "name"
        id: 9
      resource_type: "resource_type"
      update: "2000-01-23T04:56:07.000+00:00"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      backup_block_volume:
        size: 5
        format: 1
        name: "name"
        volume_name: "volume_name"
      create: "2000-01-23T04:56:07.000+00:00"
      progress: 7.061401241503109
      started_at: "2000-01-23T04:56:07.000+00:00"
      dp_gateway:
        name: "name"
        id: 6
      id: 5
      max_retry_times: 2
      backup_cluster:
        name: "name"
        fs_id: "fs_id"
      status: "status"
  DpBlockSnapshotRecoveryJobCreateReq:
    type: "object"
    required:
    - "dp_block_snapshot_recovery_job"
    properties:
      dp_block_snapshot_recovery_job:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job"
    title: "DpBlockSnapshotRecoveryJobCreateReq"
    example:
      dp_block_snapshot_recovery_job:
        dp_gateway_id: 5
        backup_block_volume:
          name: "name"
          volume_name: "volume_name"
        backup_block_snapshot:
          create: "2000-01-23T04:56:07.000+00:00"
          volume_size: 0
        block_volume:
          format: 6
          name: "name"
          pool_id: 1
        resource_type: "resource_type"
        dp_site_id: 5
        backup_cluster:
          name: "name"
          fs_id: "fs_id"
  DpBlockSnapshotRecoveryJobCreateReq_Job:
    type: "object"
    required:
    - "backup_block_snapshot"
    - "backup_block_volume"
    - "backup_cluster"
    - "block_volume"
    - "dp_gateway_id"
    - "dp_site_id"
    - "resource_type"
    properties:
      backup_block_snapshot:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot"
      backup_block_volume:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume"
      backup_cluster:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster"
      block_volume:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_Volume"
      dp_gateway_id:
        type: "integer"
        format: "int64"
      dp_site_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
    title: "DpBlockSnapshotRecoveryJobCreateReq_Job"
    example:
      dp_gateway_id: 5
      backup_block_volume:
        name: "name"
        volume_name: "volume_name"
      backup_block_snapshot:
        create: "2000-01-23T04:56:07.000+00:00"
        volume_size: 0
      block_volume:
        format: 6
        name: "name"
        pool_id: 1
      resource_type: "resource_type"
      dp_site_id: 5
      backup_cluster:
        name: "name"
        fs_id: "fs_id"
  DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster:
    type: "object"
    required:
    - "fs_id"
    - "name"
    properties:
      fs_id:
        type: "string"
      name:
        type: "string"
    title: "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster"
    example:
      name: "name"
      fs_id: "fs_id"
  DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot:
    type: "object"
    required:
    - "create"
    - "volume_size"
    properties:
      create:
        type: "string"
        format: "date-time"
      volume_size:
        type: "integer"
        format: "int64"
    title: "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot"
    example:
      create: "2000-01-23T04:56:07.000+00:00"
      volume_size: 0
  DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume:
    type: "object"
    required:
    - "name"
    - "volume_name"
    properties:
      name:
        type: "string"
      volume_name:
        type: "string"
    title: "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume"
    example:
      name: "name"
      volume_name: "volume_name"
  DpBlockSnapshotRecoveryJobCreateReq_Job_Volume:
    type: "object"
    required:
    - "name"
    - "pool_id"
    properties:
      format:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      pool_id:
        type: "integer"
        format: "int64"
    title: "DpBlockSnapshotRecoveryJobCreateReq_Job_Volume"
    example:
      format: 6
      name: "name"
      pool_id: 1
  DpBlockSnapshotRecoveryJobResp:
    type: "object"
    properties:
      dp_block_snapshot_recovery_job:
        $ref: "#/definitions/DpBlockSnapshotRecoveryJob"
    title: "DpBlockSnapshotRecoveryJobResp"
    example:
      dp_block_snapshot_recovery_job:
        dp_site:
          name: "name"
          id: 1
        finished_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_snapshot:
          size: 0
          backup_type: "backup_type"
          create: "2000-01-23T04:56:07.000+00:00"
          volume_size: 6
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        resource_type: "resource_type"
        update: "2000-01-23T04:56:07.000+00:00"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_volume:
          size: 5
          format: 1
          name: "name"
          volume_name: "volume_name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 7.061401241503109
        started_at: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        max_retry_times: 2
        backup_cluster:
          name: "name"
          fs_id: "fs_id"
        status: "status"
  DpBlockSnapshotRecoveryJobsResp:
    type: "object"
    properties:
      dp_block_snapshot_recovery_jobs:
        type: "array"
        items:
          $ref: "#/definitions/DpBlockSnapshotRecoveryJob"
    title: "DpBlockSnapshotRecoveryJobsResp"
    example:
      dp_block_snapshot_recovery_jobs:
      - dp_site:
          name: "name"
          id: 1
        finished_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_snapshot:
          size: 0
          backup_type: "backup_type"
          create: "2000-01-23T04:56:07.000+00:00"
          volume_size: 6
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        resource_type: "resource_type"
        update: "2000-01-23T04:56:07.000+00:00"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_volume:
          size: 5
          format: 1
          name: "name"
          volume_name: "volume_name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 7.061401241503109
        started_at: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        max_retry_times: 2
        backup_cluster:
          name: "name"
          fs_id: "fs_id"
        status: "status"
      - dp_site:
          name: "name"
          id: 1
        finished_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_snapshot:
          size: 0
          backup_type: "backup_type"
          create: "2000-01-23T04:56:07.000+00:00"
          volume_size: 6
        block_volume:
          original_name: "original_name"
          name: "name"
          id: 9
        resource_type: "resource_type"
        update: "2000-01-23T04:56:07.000+00:00"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        backup_block_volume:
          size: 5
          format: 1
          name: "name"
          volume_name: "volume_name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 7.061401241503109
        started_at: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 5
        max_retry_times: 2
        backup_cluster:
          name: "name"
          fs_id: "fs_id"
        status: "status"
  DpFSSnapshotJob:
    type: "object"
    properties:
      dp_fs_snapshot_policy:
        $ref: "#/definitions/DpFSSnapshotPolicy_Nestview"
      finished_at:
        type: "string"
        format: "date-time"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      fs_snapshot:
        $ref: "#/definitions/FSSnapshot_Nestview"
      id:
        type: "integer"
        format: "int64"
      progress:
        type: "number"
        format: "double"
      size:
        type: "integer"
        format: "int64"
      started_at:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      updated_at:
        type: "string"
        format: "date-time"
    title: "DpFSSnapshotJob"
    description: "DpFSSnapshotJob is one execution of a running dp fs snapshot policy"
    example:
      finished_at: "2000-01-23T04:56:07.000+00:00"
      size: 2
      updated_at: "2000-01-23T04:56:07.000+00:00"
      fs_folder:
        name: "name"
        id: 6
      dp_fs_snapshot_policy:
        name: "name"
        id: 0
      progress: 5.637376656633329
      started_at: "2000-01-23T04:56:07.000+00:00"
      fs_snapshot:
        name: "name"
        id: 1
      id: 5
      status: "status"
  DpFSSnapshotJobResp:
    type: "object"
    properties:
      dp_fs_snapshot_job:
        $ref: "#/definitions/DpFSSnapshotJob"
    title: "DpFSSnapshotJobResp"
    example:
      dp_fs_snapshot_job:
        finished_at: "2000-01-23T04:56:07.000+00:00"
        size: 2
        updated_at: "2000-01-23T04:56:07.000+00:00"
        fs_folder:
          name: "name"
          id: 6
        dp_fs_snapshot_policy:
          name: "name"
          id: 0
        progress: 5.637376656633329
        started_at: "2000-01-23T04:56:07.000+00:00"
        fs_snapshot:
          name: "name"
          id: 1
        id: 5
        status: "status"
  DpFSSnapshotJobsResp:
    type: "object"
    properties:
      dp_fs_snapshot_jobs:
        type: "array"
        items:
          $ref: "#/definitions/DpFSSnapshotJob"
    title: "DpFSSnapshotJobsResp"
    example:
      dp_fs_snapshot_jobs:
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        size: 2
        updated_at: "2000-01-23T04:56:07.000+00:00"
        fs_folder:
          name: "name"
          id: 6
        dp_fs_snapshot_policy:
          name: "name"
          id: 0
        progress: 5.637376656633329
        started_at: "2000-01-23T04:56:07.000+00:00"
        fs_snapshot:
          name: "name"
          id: 1
        id: 5
        status: "status"
      - finished_at: "2000-01-23T04:56:07.000+00:00"
        size: 2
        updated_at: "2000-01-23T04:56:07.000+00:00"
        fs_folder:
          name: "name"
          id: 6
        dp_fs_snapshot_policy:
          name: "name"
          id: 0
        progress: 5.637376656633329
        started_at: "2000-01-23T04:56:07.000+00:00"
        fs_snapshot:
          name: "name"
          id: 1
        id: 5
        status: "status"
  DpFSSnapshotPoliciesResp:
    type: "object"
    properties:
      dp_fs_snapshot_policies:
        type: "array"
        items:
          $ref: "#/definitions/DpFSSnapshotPolicy"
    title: "DpFSSnapshotPoliciesResp"
    example:
      dp_fs_snapshot_policies:
      - retained_max: 1
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        fs_folder_num: 0
        status: "status"
      - retained_max: 1
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        fs_folder_num: 0
        status: "status"
  DpFSSnapshotPolicy:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      cron_expr:
        type: "string"
      dp_gateway:
        $ref: "#/definitions/DpGateway_Nestview"
      fs_folder_num:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      retained_max:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DpFSSnapshotPolicy"
    description: "DpFSSnapshotPolicy protects a fs folder by snapshot"
    example:
      retained_max: 1
      cron_expr: "cron_expr"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      dp_gateway:
        name: "name"
        id: 6
      id: 6
      fs_folder_num: 0
      status: "status"
  DpFSSnapshotPolicyCreateReq:
    type: "object"
    required:
    - "dp_fs_snapshot_policy"
    properties:
      dp_fs_snapshot_policy:
        $ref: "#/definitions/DpFSSnapshotPolicyCreateReq_Policy"
    title: "DpFSSnapshotPolicyCreateReq"
  DpFSSnapshotPolicyCreateReq_Policy:
    type: "object"
    required:
    - "cron_expr"
    - "dp_gateway_id"
    - "name"
    - "retained_max"
    properties:
      cron_expr:
        type: "string"
      dp_gateway_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      retained_max:
        type: "integer"
        format: "int64"
    title: "DpFSSnapshotPolicyCreateReq_Policy"
  DpFSSnapshotPolicyResp:
    type: "object"
    properties:
      dp_fs_snapshot_policy:
        $ref: "#/definitions/DpFSSnapshotPolicy"
    title: "DpFSSnapshotPolicyResp"
    example:
      dp_fs_snapshot_policy:
        retained_max: 1
        cron_expr: "cron_expr"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        dp_gateway:
          name: "name"
          id: 6
        id: 6
        fs_folder_num: 0
        status: "status"
  DpFSSnapshotPolicyUpdateReq:
    type: "object"
    required:
    - "dp_fs_snapshot_policy"
    properties:
      dp_fs_snapshot_policy:
        $ref: "#/definitions/DpFSSnapshotPolicyUpdateReq_Policy"
    title: "DpFSSnapshotPolicyUpdateReq"
  DpFSSnapshotPolicyUpdateReq_Policy:
    type: "object"
    properties:
      cron_expr:
        type: "string"
      name:
        type: "string"
      retained_max:
        type: "integer"
        format: "int64"
    title: "DpFSSnapshotPolicyUpdateReq_Policy"
  DpFSSnapshotPolicy_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpFSSnapshotPolicy_Nestview"
    example:
      name: "name"
      id: 0
  DpGateway:
    type: "object"
    properties:
      admin_port:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      gateway_port:
        type: "integer"
        format: "int64"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DpGateway"
    description: "DpGateway is a process to execute data protection jobs"
    example:
      admin_port: 0
      gateway_port: 6
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 1
      status: "status"
  DpGatewayCreateReq:
    type: "object"
    properties:
      dp_gateway:
        $ref: "#/definitions/DpGatewayCreateReq_Gateway"
    title: "DpGatewayCreateReq"
    example:
      dp_gateway:
        name: "name"
        host_id: 0
  DpGatewayCreateReq_Gateway:
    type: "object"
    required:
    - "host_id"
    - "name"
    properties:
      host_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpGatewayCreateReq_Gateway"
    example:
      name: "name"
      host_id: 0
  DpGatewayResp:
    type: "object"
    required:
    - "dp_gateway"
    properties:
      dp_gateway:
        description: "dp gateway"
        $ref: "#/definitions/DpGateway"
    title: "DpGatewayResp"
    example:
      dp_gateway:
        admin_port: 0
        gateway_port: 6
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
  DpGatewayUpdateReq:
    type: "object"
    properties:
      dp_gateway:
        $ref: "#/definitions/DpGatewayUpdateReq_Gateway"
    title: "DpGatewayUpdateReq"
    example:
      dp_gateway:
        name: "name"
  DpGatewayUpdateReq_Gateway:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "dp gateway name"
    title: "DpGatewayUpdateReq_Gateway"
    example:
      name: "name"
  DpGateway_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpGateway_Nestview"
    example:
      name: "name"
      id: 6
  DpGatewaysResp:
    type: "object"
    required:
    - "dp_gateways"
    properties:
      dp_gateways:
        type: "array"
        description: "dp gateways"
        items:
          $ref: "#/definitions/DpGateway"
    title: "DpGatewaysResp"
    example:
      dp_gateways:
      - admin_port: 0
        gateway_port: 6
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
      - admin_port: 0
        gateway_port: 6
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
  DpSite:
    type: "object"
    properties:
      address:
        type: "string"
      config:
        $ref: "#/definitions/DpSiteConfig"
      create:
        type: "string"
        format: "date-time"
      crypto_key:
        $ref: "#/definitions/CryptoKey_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      platform:
        type: "string"
      protection_type:
        type: "string"
      remote_cluster:
        $ref: "#/definitions/RemoteCluster_Nestview"
      service:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "DpSite"
    description: "DpSite is a site to storage data protection data"
    example:
      crypto_key:
        name: "name"
        id: 6
      address: "address"
      remote_cluster:
        name: "name"
        id: 2
        fs_id: "fs_id"
        url: "url"
      service: "service"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      protection_type: "protection_type"
      id: 1
      config:
        block_snapshot_replication:
          remote_gateway: "remote_gateway"
        block_snapshot_backup:
          bucket: "bucket"
          secret_key: "secret_key"
          mount_path: "mount_path"
          password: "password"
          port: 0
          access_key: "access_key"
          region: "region"
          app_id: "app_id"
          username: "username"
        block_volume_replication:
          destination: "destination"
          local_gateways:
          - "local_gateways"
          - "local_gateways"
          remote_gateways:
          - "remote_gateways"
          - "remote_gateways"
      platform: "platform"
      status: "status"
  DpSiteConfig:
    type: "object"
    properties:
      block_snapshot_backup:
        $ref: "#/definitions/SnapshotBackupConfig"
      block_snapshot_replication:
        $ref: "#/definitions/SnapshotReplicationConfig"
      block_volume_replication:
        $ref: "#/definitions/BlockReplicationConfig"
    title: "DpSiteConfig"
    description: "DpSiteConfig contains config of different sites in dpg"
    example:
      block_snapshot_replication:
        remote_gateway: "remote_gateway"
      block_snapshot_backup:
        bucket: "bucket"
        secret_key: "secret_key"
        mount_path: "mount_path"
        password: "password"
        port: 0
        access_key: "access_key"
        region: "region"
        app_id: "app_id"
        username: "username"
      block_volume_replication:
        destination: "destination"
        local_gateways:
        - "local_gateways"
        - "local_gateways"
        remote_gateways:
        - "remote_gateways"
        - "remote_gateways"
  DpSiteCreateReq:
    type: "object"
    properties:
      dp_site:
        $ref: "#/definitions/DpSiteCreateReq_Site"
    title: "DpSiteCreateReq"
    example:
      dp_site:
        address: "address"
        remote_cluster_id: 6
        service: "service"
        name: "name"
        protection_type: "protection_type"
        config:
          block_snapshot_replication:
            remote_gateway: "remote_gateway"
          block_snapshot_backup:
            bucket: "bucket"
            secret_key: "secret_key"
            mount_path: "mount_path"
            password: "password"
            port: 0
            access_key: "access_key"
            region: "region"
            app_id: "app_id"
            username: "username"
          block_volume_replication:
            destination: "destination"
            local_gateways:
            - "local_gateways"
            - "local_gateways"
            remote_gateways:
            - "remote_gateways"
            - "remote_gateways"
        crypto_key_id: 0
        platform: "platform"
  DpSiteCreateReq_Site:
    type: "object"
    required:
    - "config"
    - "name"
    - "platform"
    - "protection_type"
    - "service"
    properties:
      address:
        type: "string"
        description: "site address"
      config:
        description: "extra config"
        $ref: "#/definitions/DpSiteConfig"
      crypto_key_id:
        type: "integer"
        format: "int64"
        description: "crypto key"
      name:
        type: "string"
        description: "site name"
      platform:
        type: "string"
        description: "platform of site"
      protection_type:
        type: "string"
        description: "protection type"
      remote_cluster_id:
        type: "integer"
        format: "int64"
        description: "remote cluster"
      service:
        type: "string"
        description: "service of site"
    title: "DpSiteCreateReq_Site"
    example:
      address: "address"
      remote_cluster_id: 6
      service: "service"
      name: "name"
      protection_type: "protection_type"
      config:
        block_snapshot_replication:
          remote_gateway: "remote_gateway"
        block_snapshot_backup:
          bucket: "bucket"
          secret_key: "secret_key"
          mount_path: "mount_path"
          password: "password"
          port: 0
          access_key: "access_key"
          region: "region"
          app_id: "app_id"
          username: "username"
        block_volume_replication:
          destination: "destination"
          local_gateways:
          - "local_gateways"
          - "local_gateways"
          remote_gateways:
          - "remote_gateways"
          - "remote_gateways"
      crypto_key_id: 0
      platform: "platform"
  DpSiteResp:
    type: "object"
    required:
    - "dp_site"
    properties:
      dp_site:
        description: "data protection site"
        $ref: "#/definitions/DpSite"
    title: "DpSiteResp"
    example:
      dp_site:
        crypto_key:
          name: "name"
          id: 6
        address: "address"
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        service: "service"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        protection_type: "protection_type"
        id: 1
        config:
          block_snapshot_replication:
            remote_gateway: "remote_gateway"
          block_snapshot_backup:
            bucket: "bucket"
            secret_key: "secret_key"
            mount_path: "mount_path"
            password: "password"
            port: 0
            access_key: "access_key"
            region: "region"
            app_id: "app_id"
            username: "username"
          block_volume_replication:
            destination: "destination"
            local_gateways:
            - "local_gateways"
            - "local_gateways"
            remote_gateways:
            - "remote_gateways"
            - "remote_gateways"
        platform: "platform"
        status: "status"
  DpSiteUpdateReq:
    type: "object"
    properties:
      dp_site:
        $ref: "#/definitions/DpSiteUpdateReq_Site"
    title: "DpSiteUpdateReq"
    example:
      dp_site:
        name: "name"
        config:
          block_snapshot_replication:
            remote_gateway: "remote_gateway"
          block_snapshot_backup:
            bucket: "bucket"
            secret_key: "secret_key"
            mount_path: "mount_path"
            password: "password"
            port: 0
            access_key: "access_key"
            region: "region"
            app_id: "app_id"
            username: "username"
          block_volume_replication:
            destination: "destination"
            local_gateways:
            - "local_gateways"
            - "local_gateways"
            remote_gateways:
            - "remote_gateways"
            - "remote_gateways"
  DpSiteUpdateReq_Site:
    type: "object"
    properties:
      config:
        description: "dp site config"
        $ref: "#/definitions/DpSiteConfig"
      name:
        type: "string"
        description: "dp site name"
    title: "DpSiteUpdateReq_Site"
    example:
      name: "name"
      config:
        block_snapshot_replication:
          remote_gateway: "remote_gateway"
        block_snapshot_backup:
          bucket: "bucket"
          secret_key: "secret_key"
          mount_path: "mount_path"
          password: "password"
          port: 0
          access_key: "access_key"
          region: "region"
          app_id: "app_id"
          username: "username"
        block_volume_replication:
          destination: "destination"
          local_gateways:
          - "local_gateways"
          - "local_gateways"
          remote_gateways:
          - "remote_gateways"
          - "remote_gateways"
  DpSite_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "DpSite_Nestview"
    example:
      name: "name"
      id: 1
  DpSitesResp:
    type: "object"
    required:
    - "dp_sites"
    properties:
      dp_sites:
        type: "array"
        description: "data protection sites"
        items:
          $ref: "#/definitions/DpSite"
    title: "DpSitesResp"
    example:
      dp_sites:
      - crypto_key:
          name: "name"
          id: 6
        address: "address"
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        service: "service"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        protection_type: "protection_type"
        id: 1
        config:
          block_snapshot_replication:
            remote_gateway: "remote_gateway"
          block_snapshot_backup:
            bucket: "bucket"
            secret_key: "secret_key"
            mount_path: "mount_path"
            password: "password"
            port: 0
            access_key: "access_key"
            region: "region"
            app_id: "app_id"
            username: "username"
          block_volume_replication:
            destination: "destination"
            local_gateways:
            - "local_gateways"
            - "local_gateways"
            remote_gateways:
            - "remote_gateways"
            - "remote_gateways"
        platform: "platform"
        status: "status"
      - crypto_key:
          name: "name"
          id: 6
        address: "address"
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        service: "service"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        protection_type: "protection_type"
        id: 1
        config:
          block_snapshot_replication:
            remote_gateway: "remote_gateway"
          block_snapshot_backup:
            bucket: "bucket"
            secret_key: "secret_key"
            mount_path: "mount_path"
            password: "password"
            port: 0
            access_key: "access_key"
            region: "region"
            app_id: "app_id"
            username: "username"
          block_volume_replication:
            destination: "destination"
            local_gateways:
            - "local_gateways"
            - "local_gateways"
            remote_gateways:
            - "remote_gateways"
            - "remote_gateways"
        platform: "platform"
        status: "status"
  Email:
    type: "object"
    properties:
      body:
        type: "string"
      content_type:
        type: "string"
      from:
        type: "string"
      subject:
        type: "string"
      to:
        type: "array"
        items:
          type: "string"
    title: "Email"
    description: "Email defines email model"
    example:
      content_type: "content_type"
      subject: "subject"
      from: "from"
      to:
      - "to"
      - "to"
      body: "body"
  EmailConfig:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      smtp_enable_ssl:
        type: "boolean"
      smtp_host:
        type: "string"
      smtp_password:
        type: "string"
      smtp_port:
        type: "integer"
        format: "int64"
      smtp_skip_tls_cert_verify:
        type: "boolean"
      smtp_user:
        type: "string"
      subject:
        type: "string"
    title: "EmailConfig"
    description: "EmailConfig define email config"
    example:
      smtp_password: "smtp_password"
      smtp_port: 0
      smtp_user: "smtp_user"
      smtp_skip_tls_cert_verify: true
      subject: "subject"
      smtp_host: "smtp_host"
      smtp_enable_ssl: true
      enabled: true
  EmailConfigResp:
    type: "object"
    properties:
      email_config:
        $ref: "#/definitions/EmailConfig"
    title: "EmailConfigResp"
    example:
      email_config:
        smtp_password: "smtp_password"
        smtp_port: 0
        smtp_user: "smtp_user"
        smtp_skip_tls_cert_verify: true
        subject: "subject"
        smtp_host: "smtp_host"
        smtp_enable_ssl: true
        enabled: true
  EmailConfigUpdateReq:
    type: "object"
    properties:
      email_config:
        $ref: "#/definitions/EmailConfigUpdateReq_EmailConfig"
    title: "EmailConfigUpdateReq"
    example:
      email_config:
        smtp_password: "smtp_password"
        smtp_port: 0
        smtp_user: "smtp_user"
        smtp_skip_tls_cert_verify: true
        subject: "subject"
        smtp_host: "smtp_host"
        smtp_enable_ssl: true
        enabled: true
  EmailConfigUpdateReq_EmailConfig:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      smtp_enable_ssl:
        type: "boolean"
      smtp_host:
        type: "string"
      smtp_password:
        type: "string"
      smtp_port:
        type: "integer"
        format: "int64"
      smtp_skip_tls_cert_verify:
        type: "boolean"
      smtp_user:
        type: "string"
      subject:
        type: "string"
    title: "EmailConfigUpdateReq_EmailConfig"
    example:
      smtp_password: "smtp_password"
      smtp_port: 0
      smtp_user: "smtp_user"
      smtp_skip_tls_cert_verify: true
      subject: "subject"
      smtp_host: "smtp_host"
      smtp_enable_ssl: true
      enabled: true
  EmailGroup:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      emails:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "EmailGroup"
    description: "EmailGroup defines the email group"
  EmailGroupRecord:
    title: "EmailGroupRecord"
    allOf:
    - $ref: "#/definitions/EmailGroup"
    description: "EmailGroupRecord defines email group record"
  EmailGroupResp:
    type: "object"
    required:
    - "email_group"
    properties:
      email_group:
        description: "email group"
        $ref: "#/definitions/EmailGroupRecord"
    title: "EmailGroupResp"
    example:
      email_group: ""
  EmailGroupUpdateReq:
    type: "object"
    required:
    - "email_group"
    properties:
      email_group:
        $ref: "#/definitions/EmailGroupUpdateReq_EmailGroup"
    title: "EmailGroupUpdateReq"
    example:
      email_group:
        emails:
        - "emails"
        - "emails"
        name: "name"
  EmailGroupUpdateReq_EmailGroup:
    type: "object"
    required:
    - "emails"
    - "name"
    properties:
      emails:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
    title: "EmailGroupUpdateReq_EmailGroup"
    example:
      emails:
      - "emails"
      - "emails"
      name: "name"
  EmailGroupsResp:
    type: "object"
    required:
    - "email_groups"
    properties:
      email_groups:
        type: "array"
        description: "email groups"
        items:
          $ref: "#/definitions/EmailGroupRecord"
    title: "EmailGroupsResp"
    example:
      email_groups:
      - ""
      - ""
  EmailResp:
    type: "object"
    properties:
      email:
        $ref: "#/definitions/Email"
    title: "EmailResp"
    example:
      email:
        content_type: "content_type"
        subject: "subject"
        from: "from"
        to:
        - "to"
        - "to"
        body: "body"
  EmailSendReq:
    type: "object"
    properties:
      email:
        $ref: "#/definitions/EmailSendReq_Email"
      email_config:
        $ref: "#/definitions/EmailConfig"
    title: "EmailSendReq"
    description: "EmailSendReq defines the data of email sending"
    example:
      email:
        content_type: "content_type"
        to:
        - "to"
        - "to"
        body: "body"
      email_config:
        smtp_password: "smtp_password"
        smtp_port: 0
        smtp_user: "smtp_user"
        smtp_skip_tls_cert_verify: true
        subject: "subject"
        smtp_host: "smtp_host"
        smtp_enable_ssl: true
        enabled: true
  EmailSendReq_Email:
    type: "object"
    required:
    - "body"
    - "to"
    properties:
      body:
        type: "string"
      content_type:
        type: "string"
        description: "content type, 'text/plain' or 'text/html'"
      to:
        type: "array"
        items:
          type: "string"
    title: "EmailSendReq_Email"
    example:
      content_type: "content_type"
      to:
      - "to"
      - "to"
      body: "body"
  Enclosure:
    type: "object"
    properties:
      ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      order:
        type: "string"
      position:
        type: "string"
      slot_num:
        type: "integer"
        format: "int64"
      start_slot:
        type: "integer"
        format: "int64"
    title: "Enclosure"
    description: "Enclosure defines enclosure specification"
    example:
      start_slot: 1
      slot_num: 6
      ids:
      - 0
      - 0
      position: "position"
      order: "order"
  ErrorRecord:
    type: "object"
    properties:
      action_log:
        $ref: "#/definitions/ActionLog_Nestview"
      alert:
        $ref: "#/definitions/Alert_Nestview"
      code:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      details:
        type: "string"
      extra_data:
        type: "object"
        properties: {}
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
    title: "ErrorRecord"
    description: "ErrorRecord defines the error record attributes."
  EventLog:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "create time"
      data:
        type: "object"
        description: "dumped resource data"
        properties: {}
      event:
        type: "string"
        description: "evnet type"
      host:
        description: "host eventlog generated on"
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
        description: "debug message"
      resource_id:
        type: "integer"
        format: "int64"
        description: "resource id"
      resource_type:
        type: "string"
        description: "resource type"
      user:
        description: "eventlog created by"
        $ref: "#/definitions/User_Nestview"
    title: "EventLog"
    description: "EventLog defines a system event"
    example:
      data: "{}"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      resource_type: "resource_type"
      create: "2000-01-23T04:56:07.000+00:00"
      resource_id: 6
      id: 0
      event: "event"
      message: "message"
      user:
        name: "name"
        id: 6
  EventLogsResp:
    type: "object"
    required:
    - "event_logs"
    properties:
      event_logs:
        type: "array"
        items:
          $ref: "#/definitions/EventLog"
    title: "EventLogsResp"
    example:
      event_logs:
      - data: "{}"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        id: 0
        event: "event"
        message: "message"
        user:
          name: "name"
          id: 6
      - data: "{}"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        id: 0
        event: "event"
        message: "message"
        user:
          name: "name"
          id: 6
  FSActiveDirectoriesResp:
    type: "object"
    required:
    - "fs_active_directories"
    properties:
      fs_active_directories:
        type: "array"
        description: "file storage active directories"
        items:
          $ref: "#/definitions/FSActiveDirectory"
    title: "FSActiveDirectoriesResp"
    example:
      fs_active_directories:
      - workgroup: "workgroup"
        ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 0
        realm: "realm"
        id: 6
        verify_time: "2000-01-23T04:56:07.000+00:00"
        action_status: "action_status"
        status: "status"
        username: "username"
      - workgroup: "workgroup"
        ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 0
        realm: "realm"
        id: 6
        verify_time: "2000-01-23T04:56:07.000+00:00"
        action_status: "action_status"
        status: "status"
        username: "username"
  FSActiveDirectory:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_gateway_group_num:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      name:
        type: "string"
      realm:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      username:
        type: "string"
      verify_time:
        type: "string"
        format: "date-time"
      workgroup:
        type: "string"
    title: "FSActiveDirectory"
    description: "FSActiveDirectory defines file storage active directory"
    example:
      workgroup: "workgroup"
      ip: "ip"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      fs_gateway_group_num: 0
      realm: "realm"
      id: 6
      verify_time: "2000-01-23T04:56:07.000+00:00"
      action_status: "action_status"
      status: "status"
      username: "username"
  FSActiveDirectoryCreateReq:
    type: "object"
    required:
    - "fs_active_directory"
    properties:
      fs_active_directory:
        $ref: "#/definitions/FSActiveDirectoryCreateReq_Info"
    title: "FSActiveDirectoryCreateReq"
  FSActiveDirectoryCreateReq_Info:
    type: "object"
    required:
    - "name"
    - "password"
    - "realm"
    - "username"
    - "workgroup"
    properties:
      ip:
        type: "string"
        description: "ip of dns server"
      name:
        type: "string"
        description: "name of active directory"
      password:
        type: "string"
        description: "password of active directory"
      realm:
        type: "string"
        description: "realm of active directory"
      username:
        type: "string"
        description: "username of active directory"
      workgroup:
        type: "string"
        description: "workgroup of active directory"
    title: "FSActiveDirectoryCreateReq_Info"
  FSActiveDirectoryResp:
    type: "object"
    required:
    - "fs_active_directory"
    properties:
      fs_active_directory:
        description: "file storage active directory"
        $ref: "#/definitions/FSActiveDirectory"
    title: "FSActiveDirectoryResp"
    example:
      fs_active_directory:
        workgroup: "workgroup"
        ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 0
        realm: "realm"
        id: 6
        verify_time: "2000-01-23T04:56:07.000+00:00"
        action_status: "action_status"
        status: "status"
        username: "username"
  FSActiveDirectoryUpdateReq:
    type: "object"
    required:
    - "fs_active_directory"
    properties:
      fs_active_directory:
        $ref: "#/definitions/FSActiveDirectoryUpdateReq_Info"
    title: "FSActiveDirectoryUpdateReq"
  FSActiveDirectoryUpdateReq_Info:
    type: "object"
    properties:
      ip:
        type: "string"
        description: "ip of dns server"
      name:
        type: "string"
        description: "name of active directory"
      password:
        type: "string"
        description: "password of active directory"
      realm:
        type: "string"
        description: "realm of active directory"
      username:
        type: "string"
        description: "username of active directory"
      workgroup:
        type: "string"
        description: "workgroup of active directory"
    title: "FSActiveDirectoryUpdateReq_Info"
  FSArbitrationPool:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      update:
        type: "string"
        format: "date-time"
    title: "FSArbitrationPool"
    description: "FSArbitrationPool defines file system arbitration pool"
    example:
      pool:
        name: "name"
        id: 5
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
  FSArbitrationPoolCreateReq:
    type: "object"
    required:
    - "fs_arbitration_pool"
    properties:
      fs_arbitration_pool:
        $ref: "#/definitions/FSArbitrationPoolCreateReq_Info"
    title: "FSArbitrationPoolCreateReq"
  FSArbitrationPoolCreateReq_Info:
    type: "object"
    required:
    - "pool_id"
    properties:
      pool_id:
        type: "integer"
        format: "int64"
        description: "pool used for file system arbitration"
    title: "FSArbitrationPoolCreateReq_Info"
  FSArbitrationPoolResp:
    type: "object"
    required:
    - "fs_arbitration_pool"
    properties:
      fs_arbitration_pool:
        description: "file storage arbitration pool"
        $ref: "#/definitions/FSArbitrationPool"
    title: "FSArbitrationPoolResp"
    example:
      fs_arbitration_pool:
        pool:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
  FSArbitrationPoolUpdateReq:
    type: "object"
    required:
    - "fs_arbitration_pool"
    properties:
      fs_arbitration_pool:
        $ref: "#/definitions/FSArbitrationPoolUpdateReq_Info"
    title: "FSArbitrationPoolUpdateReq"
  FSArbitrationPoolUpdateReq_Info:
    type: "object"
    required:
    - "pool_id"
    properties:
      pool_id:
        type: "integer"
        format: "int64"
        description: "pool used for file system arbitration"
    title: "FSArbitrationPoolUpdateReq_Info"
  FSArbitrationPoolsResp:
    type: "object"
    required:
    - "fs_arbitration_pools"
    properties:
      fs_arbitration_pools:
        type: "array"
        description: "file storage arbitration pools"
        items:
          $ref: "#/definitions/FSArbitrationPool"
    title: "FSArbitrationPoolsResp"
    example:
      fs_arbitration_pools:
      - pool:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
      - pool:
          name: "name"
          id: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
  FSClient:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      fs_client_group_num:
        type: "integer"
        format: "int64"
      fs_client_groups:
        type: "array"
        items:
          $ref: "#/definitions/FSClientGroup_Nestview"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSClient"
    description: "FSClient defines model of file storage client"
    example:
      ip: "ip"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      fs_client_groups:
      - name: "name"
        id: 6
      - name: "name"
        id: 6
      update: "2000-01-23T04:56:07.000+00:00"
      fs_client_group_num: 0
      id: 1
  FSClientCreateReq:
    type: "object"
    required:
    - "fs_client"
    properties:
      fs_client:
        $ref: "#/definitions/FSClientCreateReq_Client"
    title: "FSClientCreateReq"
  FSClientCreateReq_Client:
    type: "object"
    required:
    - "ip"
    - "name"
    properties:
      ip:
        type: "string"
        description: "ip of client"
      name:
        type: "string"
        description: "name of client"
    title: "FSClientCreateReq_Client"
  FSClientGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      client_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      fs_clients:
        type: "array"
        items:
          $ref: "#/definitions/FSClient_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSClientGroup"
    description: "FSClientGroup defines model of file storage client group"
    example:
      client_num: 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      fs_clients:
      - name: "name"
        id: 6
      - name: "name"
        id: 6
      id: 1
      action_status: "action_status"
  FSClientGroupAddClientsReq:
    type: "object"
    required:
    - "fs_client_group"
    properties:
      fs_client_group:
        $ref: "#/definitions/FSClientGroupAddClientsReq_ClientGroup"
    title: "FSClientGroupAddClientsReq"
  FSClientGroupAddClientsReq_ClientGroup:
    type: "object"
    required:
    - "fs_client_ids"
    properties:
      fs_client_ids:
        type: "array"
        description: "ids of clients"
        items:
          type: "integer"
          format: "int64"
    title: "FSClientGroupAddClientsReq_ClientGroup"
  FSClientGroupCreateReq:
    type: "object"
    required:
    - "fs_client_group"
    properties:
      fs_client_group:
        $ref: "#/definitions/FSClientGroupCreateReq_ClientGroup"
    title: "FSClientGroupCreateReq"
  FSClientGroupCreateReq_ClientGroup:
    type: "object"
    required:
    - "fs_client_ids"
    - "name"
    properties:
      fs_client_ids:
        type: "array"
        description: "ids of clients"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
        description: "name of client group"
    title: "FSClientGroupCreateReq_ClientGroup"
  FSClientGroupRemoveClientsReq:
    type: "object"
    required:
    - "fs_client_group"
    properties:
      fs_client_group:
        $ref: "#/definitions/FSClientGroupRemoveClientsReq_ClientGroup"
    title: "FSClientGroupRemoveClientsReq"
  FSClientGroupRemoveClientsReq_ClientGroup:
    type: "object"
    required:
    - "fs_client_ids"
    properties:
      fs_client_ids:
        type: "array"
        description: "ids of clients"
        items:
          type: "integer"
          format: "int64"
    title: "FSClientGroupRemoveClientsReq_ClientGroup"
  FSClientGroupResp:
    type: "object"
    required:
    - "fs_client_group"
    properties:
      fs_client_group:
        description: "file storage client group"
        $ref: "#/definitions/FSClientGroup"
    title: "FSClientGroupResp"
    example:
      fs_client_group:
        client_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_clients:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        id: 1
        action_status: "action_status"
  FSClientGroupUpdateReq:
    type: "object"
    required:
    - "fs_client_group"
    properties:
      fs_client_group:
        $ref: "#/definitions/FSClientGroupUpdateReq_ClientGroup"
    title: "FSClientGroupUpdateReq"
  FSClientGroupUpdateReq_ClientGroup:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "name of client group"
    title: "FSClientGroupUpdateReq_ClientGroup"
  FSClientGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSClientGroup_Nestview"
    example:
      name: "name"
      id: 6
  FSClientGroupsResp:
    type: "object"
    required:
    - "fs_client_groups"
    properties:
      fs_client_groups:
        type: "array"
        description: "file storage client groups"
        items:
          $ref: "#/definitions/FSClientGroup"
    title: "FSClientGroupsResp"
    example:
      fs_client_groups:
      - client_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_clients:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        id: 1
        action_status: "action_status"
      - client_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_clients:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        id: 1
        action_status: "action_status"
  FSClientResp:
    type: "object"
    required:
    - "fs_client"
    properties:
      fs_client:
        description: "file storage client"
        $ref: "#/definitions/FSClient"
    title: "FSClientResp"
    example:
      fs_client:
        ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_client_groups:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        fs_client_group_num: 0
        id: 1
  FSClientUpdateReq:
    type: "object"
    required:
    - "fs_client"
    properties:
      fs_client:
        $ref: "#/definitions/FSClientUpdateReq_Client"
    title: "FSClientUpdateReq"
  FSClientUpdateReq_Client:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "name of client"
    title: "FSClientUpdateReq_Client"
  FSClient_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSClient_Nestview"
    example:
      name: "name"
      id: 6
  FSClientsResp:
    type: "object"
    required:
    - "fs_clients"
    properties:
      fs_clients:
        type: "array"
        description: "file storage clients"
        items:
          $ref: "#/definitions/FSClient"
    title: "FSClientsResp"
    example:
      fs_clients:
      - ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_client_groups:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        fs_client_group_num: 0
        id: 1
      - ip: "ip"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_client_groups:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        fs_client_group_num: 0
        id: 1
  FSFTPSession:
    type: "object"
    properties:
      client_ip:
        type: "string"
      client_port:
        type: "integer"
        format: "int64"
      connected_at:
        type: "string"
        format: "date-time"
      create:
        type: "string"
        format: "date-time"
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShare_Nestview"
      id:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
      username:
        type: "string"
    title: "FSFTPSession"
    description: "FSFTPSession defines model of FS FTP session"
    example:
      client_port: 0
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      client_ip: "client_ip"
      connected_at: "2000-01-23T04:56:07.000+00:00"
      id: 1
      fs_ftp_share:
        id: 6
      username: "username"
  FSFTPSessionsResp:
    type: "object"
    required:
    - "fs_ftp_sessions"
    properties:
      fs_ftp_sessions:
        type: "array"
        description: "fs ftp sessions"
        items:
          $ref: "#/definitions/FSFTPSession"
    title: "FSFTPSessionsResp"
    example:
      fs_ftp_sessions:
      - client_port: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        connected_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        fs_ftp_share:
          id: 6
        username: "username"
      - client_port: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        connected_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        fs_ftp_share:
          id: 6
        username: "username"
  FSFTPShare:
    type: "object"
    properties:
      acl_num:
        type: "integer"
        format: "int64"
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroup_Nestview"
      fs_quota_tree:
        $ref: "#/definitions/FSQuotaTree_Nestview"
      id:
        type: "integer"
        format: "int64"
      mapping_num:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSFTPShare"
    description: "FSFTPShare defines model of fs ftp share"
    example:
      mapping_num: 2
      fs_folder:
        name: "name"
        id: 6
      create: "2000-01-23T04:56:07.000+00:00"
      fs_quota_tree:
        name: "name"
        id: 5
      update: "2000-01-23T04:56:07.000+00:00"
      acl_num: 0
      id: 5
      fs_gateway_group:
        name: "name"
        id: 6
        vip_mask: 1
        vip: "vip"
      action_status: "action_status"
      status: "status"
  FSFTPShareACL:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      create_enabled:
        type: "boolean"
      delete_enabled:
        type: "boolean"
      download_bandwidth:
        type: "integer"
        format: "int64"
      download_enabled:
        type: "boolean"
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShare_Nestview"
      fs_user:
        $ref: "#/definitions/FSUser_Nestview"
      fs_user_group:
        $ref: "#/definitions/FSUserGroup_Nestview"
      id:
        type: "integer"
        format: "int64"
      list_enabled:
        type: "boolean"
      rename_enabled:
        type: "boolean"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      upload_bandwidth:
        type: "integer"
        format: "int64"
      upload_enabled:
        type: "boolean"
    title: "FSFTPShareACL"
    description: "FSFTPShareACL defines model of fs ftp share ACL"
    example:
      download_enabled: true
      update: "2000-01-23T04:56:07.000+00:00"
      delete_enabled: true
      type: "type"
      download_bandwidth: 0
      fs_user_group:
        name: "name"
        id: 1
      rename_enabled: true
      fs_user:
        name: "name"
        id: 6
      upload_bandwidth: 5
      create: "2000-01-23T04:56:07.000+00:00"
      upload_enabled: true
      id: 5
      create_enabled: true
      fs_ftp_share:
        id: 6
      list_enabled: true
  FSFTPShareACLReq:
    type: "object"
    properties:
      create_enabled:
        type: "boolean"
        description: "enable creating files"
      delete_enabled:
        type: "boolean"
        description: "enable deleting files"
      download_bandwidth:
        type: "integer"
        format: "int64"
        description: "max bandwidth of downloading"
      download_enabled:
        type: "boolean"
        description: "enable downloading files"
      fs_user_group_id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      fs_user_id:
        type: "integer"
        format: "int64"
        description: "id of user"
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      list_enabled:
        type: "boolean"
        description: "enable listing files"
      rename_enabled:
        type: "boolean"
        description: "enable renaming files"
      type:
        type: "string"
        description: "type of share acl"
      upload_bandwidth:
        type: "integer"
        format: "int64"
        description: "max bandwidth of uploading"
      upload_enabled:
        type: "boolean"
        description: "enable uploading files"
    title: "FSFTPShareACLReq"
  FSFTPShareACLsResp:
    type: "object"
    required:
    - "fs_ftp_share_acls"
    properties:
      fs_ftp_share_acls:
        type: "array"
        description: "fs ftp share acls"
        items:
          $ref: "#/definitions/FSFTPShareACL"
    title: "FSFTPShareACLsResp"
    example:
      fs_ftp_share_acls:
      - download_enabled: true
        update: "2000-01-23T04:56:07.000+00:00"
        delete_enabled: true
        type: "type"
        download_bandwidth: 0
        fs_user_group:
          name: "name"
          id: 1
        rename_enabled: true
        fs_user:
          name: "name"
          id: 6
        upload_bandwidth: 5
        create: "2000-01-23T04:56:07.000+00:00"
        upload_enabled: true
        id: 5
        create_enabled: true
        fs_ftp_share:
          id: 6
        list_enabled: true
      - download_enabled: true
        update: "2000-01-23T04:56:07.000+00:00"
        delete_enabled: true
        type: "type"
        download_bandwidth: 0
        fs_user_group:
          name: "name"
          id: 1
        rename_enabled: true
        fs_user:
          name: "name"
          id: 6
        upload_bandwidth: 5
        create: "2000-01-23T04:56:07.000+00:00"
        upload_enabled: true
        id: 5
        create_enabled: true
        fs_ftp_share:
          id: 6
        list_enabled: true
  FSFTPShareAddACLsReq:
    type: "object"
    required:
    - "fs_ftp_share"
    properties:
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShareAddACLsReq_Share"
    title: "FSFTPShareAddACLsReq"
  FSFTPShareAddACLsReq_Share:
    type: "object"
    required:
    - "fs_ftp_share_acls"
    properties:
      fs_ftp_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSFTPShareACLReq"
    title: "FSFTPShareAddACLsReq_Share"
  FSFTPShareCreateReq:
    type: "object"
    required:
    - "fs_ftp_share"
    properties:
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShareCreateReq_Share"
    title: "FSFTPShareCreateReq"
  FSFTPShareCreateReq_Share:
    type: "object"
    required:
    - "fs_folder_id"
    - "fs_gateway_group_id"
    properties:
      fs_folder_id:
        type: "integer"
        format: "int64"
        description: "folder id"
      fs_ftp_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSFTPShareACLReq"
      fs_gateway_group_id:
        type: "integer"
        format: "int64"
        description: "gateway group id"
      fs_quota_tree_id:
        type: "integer"
        format: "int64"
        description: "quota tree id"
      name:
        type: "string"
        description: "name of share"
    title: "FSFTPShareCreateReq_Share"
  FSFTPShareRemoveACLsReq:
    type: "object"
    required:
    - "fs_ftp_share"
    properties:
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShareRemoveACLsReq_Share"
    title: "FSFTPShareRemoveACLsReq"
  FSFTPShareRemoveACLsReq_Share:
    type: "object"
    required:
    - "fs_ftp_share_acl_ids"
    properties:
      fs_ftp_share_acl_ids:
        type: "array"
        description: "access control array"
        items:
          type: "integer"
          format: "int64"
    title: "FSFTPShareRemoveACLsReq_Share"
  FSFTPShareResp:
    type: "object"
    required:
    - "fs_ftp_share"
    properties:
      fs_ftp_share:
        description: "fs ftp share"
        $ref: "#/definitions/FSFTPShare"
    title: "FSFTPShareResp"
    example:
      fs_ftp_share:
        mapping_num: 2
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 5
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSFTPShareUpdateACLReq:
    type: "object"
    properties:
      create_enabled:
        type: "boolean"
        description: "enable creating files"
      delete_enabled:
        type: "boolean"
        description: "enable deleting files"
      download_bandwidth:
        type: "integer"
        format: "int64"
        description: "max bandwidth of downloading"
      download_enabled:
        type: "boolean"
        description: "enable downloading files"
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      list_enabled:
        type: "boolean"
        description: "enable listing files"
      rename_enabled:
        type: "boolean"
        description: "enable renaming files"
      upload_bandwidth:
        type: "integer"
        format: "int64"
        description: "max bandwidth of uploading"
      upload_enabled:
        type: "boolean"
        description: "enable uploading files"
    title: "FSFTPShareUpdateACLReq"
  FSFTPShareUpdateACLsReq:
    type: "object"
    required:
    - "fs_ftp_share"
    properties:
      fs_ftp_share:
        $ref: "#/definitions/FSFTPShareUpdateACLsReq_Share"
    title: "FSFTPShareUpdateACLsReq"
  FSFTPShareUpdateACLsReq_Share:
    type: "object"
    properties:
      fs_ftp_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSFTPShareUpdateACLReq"
    title: "FSFTPShareUpdateACLsReq_Share"
  FSFTPShare_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "FSFTPShare_Nestview"
    example:
      id: 6
  FSFTPSharesResp:
    type: "object"
    required:
    - "fs_ftp_shares"
    properties:
      fs_ftp_shares:
        type: "array"
        description: "fs ftp share"
        items:
          $ref: "#/definitions/FSFTPShare"
    title: "FSFTPSharesResp"
    example:
      fs_ftp_shares:
      - mapping_num: 2
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 5
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
      - mapping_num: 2
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 5
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSFolder:
    type: "object"
    properties:
      access_path:
        $ref: "#/definitions/AccessPath_Nestview"
      action_status:
        type: "string"
      block_volume:
        $ref: "#/definitions/Volume_Nestview"
      block_volume_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      dp_fs_snapshot_policy:
        $ref: "#/definitions/DpFSSnapshotPolicy_Nestview"
      flattened:
        type: "boolean"
      formatted:
        type: "boolean"
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroup"
      fs_quota_tree_num:
        type: "integer"
        format: "int64"
      fs_snapshot:
        $ref: "#/definitions/FSSnapshot_Nestview"
      fs_snapshot_num:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      latest_snapshot_time:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      progress:
        type: "number"
        format: "double"
      qos:
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
      quota_tree_share_types:
        type: "array"
        items:
          type: "string"
      quota_tree_shared:
        type: "boolean"
      share_types:
        type: "array"
        items:
          type: "string"
      shared:
        type: "boolean"
        description: "before version 3.2.14, these fields was calculated by wizard,\
          \ but there is quota\ntrees in new verion, calculations is too complicated,\
          \ so add the fields to\nfolder struct"
      size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSFolder"
    description: "FSFolder defines model of file storage folder"
  FSFolderAddQuotaTreesReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderAddQuotaTreesReq_Folder"
    title: "FSFolderAddQuotaTreesReq"
  FSFolderAddQuotaTreesReq_Folder:
    type: "object"
    required:
    - "fs_quota_trees"
    properties:
      fs_quota_trees:
        type: "array"
        items:
          $ref: "#/definitions/FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt"
    title: "FSFolderAddQuotaTreesReq_Folder"
  FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "name of quota tree"
      size:
        type: "integer"
        format: "int64"
        description: "size of quota tree"
      soft_quota_size:
        type: "integer"
        format: "int64"
        description: "soft quota size of quota tree"
    title: "FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt"
  FSFolderCreateReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderCreateReq_Folder"
    title: "FSFolderCreateReq"
  FSFolderCreateReq_Folder:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "description of folder"
      flattened:
        type: "boolean"
        description: "flatten or not flatten"
      fs_snapshot_id:
        type: "integer"
        format: "int64"
        description: "file storage snapshot id"
      name:
        type: "string"
        description: "name of folder"
      pool_id:
        type: "integer"
        format: "int64"
        description: "id of pool"
      qos:
        description: "qos of volume"
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
        description: "enable or disable the qos"
      size:
        type: "integer"
        format: "int64"
        description: "size of folder"
    title: "FSFolderCreateReq_Folder"
  FSFolderRecord:
    title: "FSFolderRecord"
    allOf:
    - $ref: "#/definitions/FSFolder"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/FSFolderStat"
    description: "FSFolderRecord combine FSFolder and FSFolderStat as API response"
  FSFolderRemoveQuotaTreesReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderRemoveQuotaTreesReq_Folder"
    title: "FSFolderRemoveQuotaTreesReq"
  FSFolderRemoveQuotaTreesReq_Folder:
    type: "object"
    properties:
      fs_quota_tree_ids:
        type: "array"
        description: "id array of quota trees"
        items:
          type: "integer"
          format: "int64"
    title: "FSFolderRemoveQuotaTreesReq_Folder"
  FSFolderResp:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        description: "file storage folder records"
        $ref: "#/definitions/FSFolderRecord"
    title: "FSFolderResp"
    example:
      fs_folder: ""
  FSFolderRollBackReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderRollBackReq_Folder"
    title: "FSFolderRollBackReq"
  FSFolderRollBackReq_Folder:
    type: "object"
    properties:
      fs_snapshot_id:
        type: "integer"
        format: "int64"
        description: "file storage snapshot id"
    title: "FSFolderRollBackReq_Folder"
  FSFolderSamplesResp:
    type: "object"
    properties:
      fs_folder_samples:
        type: "array"
        items:
          $ref: "#/definitions/FSFolderStat"
    title: "FSFolderSamplesResp"
    example:
      fs_folder_samples:
      - used_kbyte: 2.3021358869347655
        read_bandwidth_kbyte: 0.8008281904610115
        write_bandwidth_kbyte: 7.061401241503109
        create: "2000-01-23T04:56:07.000+00:00"
        total_bandwidth_kbyte: 5.962133916683182
        write_iops: 9.301444243932576
        write_latency_us: 3.616076749251911
        total_iops: 5.637376656633329
        read_latency_us: 1.4658129805029452
        read_iops: 6.027456183070403
      - used_kbyte: 2.3021358869347655
        read_bandwidth_kbyte: 0.8008281904610115
        write_bandwidth_kbyte: 7.061401241503109
        create: "2000-01-23T04:56:07.000+00:00"
        total_bandwidth_kbyte: 5.962133916683182
        write_iops: 9.301444243932576
        write_latency_us: 3.616076749251911
        total_iops: 5.637376656633329
        read_latency_us: 1.4658129805029452
        read_iops: 6.027456183070403
  FSFolderSnapshotProtectionReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderSnapshotProtectionReq_Folder"
    title: "FSFolderSnapshotProtectionReq"
  FSFolderSnapshotProtectionReq_Folder:
    type: "object"
    required:
    - "dp_fs_snapshot_policy_id"
    properties:
      dp_fs_snapshot_policy_id:
        type: "integer"
        format: "int64"
        description: "id of dp fs snapshot policy"
    title: "FSFolderSnapshotProtectionReq_Folder"
  FSFolderStat:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      used_kbyte:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "FSFolderStat"
    description: "FSFolderStat records file storage folder stat info"
    example:
      used_kbyte: 2.3021358869347655
      read_bandwidth_kbyte: 0.8008281904610115
      write_bandwidth_kbyte: 7.061401241503109
      create: "2000-01-23T04:56:07.000+00:00"
      total_bandwidth_kbyte: 5.962133916683182
      write_iops: 9.301444243932576
      write_latency_us: 3.616076749251911
      total_iops: 5.637376656633329
      read_latency_us: 1.4658129805029452
      read_iops: 6.027456183070403
  FSFolderUpdateReq:
    type: "object"
    required:
    - "fs_folder"
    properties:
      fs_folder:
        $ref: "#/definitions/FSFolderUpdateReq_Folder"
    title: "FSFolderUpdateReq"
  FSFolderUpdateReq_Folder:
    type: "object"
    properties:
      description:
        type: "string"
        description: "description of folder"
      name:
        type: "string"
        description: "name of folder"
      qos:
        description: "qos of volume"
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
        description: "enable or disable the qos"
      size:
        type: "integer"
        format: "int64"
        description: "size of folder"
    title: "FSFolderUpdateReq_Folder"
  FSFolder_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSFolder_Nestview"
    example:
      name: "name"
      id: 6
  FSFoldersResp:
    type: "object"
    required:
    - "fs_folders"
    properties:
      fs_folders:
        type: "array"
        description: "file storage folder records"
        items:
          $ref: "#/definitions/FSFolderRecord"
    title: "FSFoldersResp"
    example:
      fs_folders:
      - ""
      - ""
  FSGateway:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroup_Nestview"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      network_address:
        $ref: "#/definitions/NetworkAddress_Nestview"
      nic_name:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      vip:
        type: "string"
    title: "FSGateway"
    description: "FSGateway defines model of file storage gateway @grpc-models-proto"
    example:
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      network_address:
        ip: "ip"
        id: 6
        mask: 1
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      vip: "vip"
      fs_gateway_group:
        name: "name"
        id: 6
        vip_mask: 1
        vip: "vip"
      nic_name: "nic_name"
      status: "status"
  FSGatewayGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      encoding:
        type: "string"
      folder_num:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      nfs_versions:
        type: "array"
        description: "NFS attributes"
        items:
          type: "string"
      port:
        type: "integer"
        format: "int64"
        description: "FTP attributes"
      security:
        type: "string"
        description: "SMB attributes"
      smb1_enabled:
        type: "boolean"
      smb_ports:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      status:
        type: "string"
      types:
        type: "array"
        items:
          type: "string"
      update:
        type: "string"
        format: "date-time"
      user_group_num:
        type: "integer"
        format: "int64"
      vip:
        type: "string"
      vip_mask:
        type: "integer"
        format: "int64"
    title: "FSGatewayGroup"
    description: "FSGatewayGroup defines model of file storage gateway group @grpc-models-proto"
    example:
      smb_ports:
      - 5
      - 5
      types:
      - "types"
      - "types"
      smb1_enabled: true
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      vip_mask: 2
      encoding: "encoding"
      security: "security"
      port: 1
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      nfs_versions:
      - "nfs_versions"
      - "nfs_versions"
      user_group_num: 5
      id: 6
      vip: "vip"
      action_status: "action_status"
      folder_num: 0
      status: "status"
  FSGatewayGroupAddGatewaysReq:
    type: "object"
    required:
    - "fs_gateway_group"
    properties:
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroupAddGatewaysReq_GatewayGroup"
    title: "FSGatewayGroupAddGatewaysReq"
  FSGatewayGroupAddGatewaysReq_GatewayGroup:
    type: "object"
    required:
    - "fs_gateways"
    properties:
      fs_gateways:
        type: "array"
        description: "file storage gateways list"
        items:
          $ref: "#/definitions/FSGatewayReq"
    title: "FSGatewayGroupAddGatewaysReq_GatewayGroup"
  FSGatewayGroupCreateReq:
    type: "object"
    required:
    - "fs_gateway_group"
    properties:
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroupCreateReq_GatewayGroup"
    title: "FSGatewayGroupCreateReq"
  FSGatewayGroupCreateReq_GatewayGroup:
    type: "object"
    required:
    - "fs_gateways"
    - "name"
    - "types"
    - "vip"
    properties:
      description:
        type: "string"
        description: "description of gateway group"
      encoding:
        type: "string"
        description: "ftp encoding format, default is utf8"
      fs_gateways:
        type: "array"
        description: "file storage gateways list"
        items:
          $ref: "#/definitions/FSGatewayReq"
      name:
        type: "string"
        description: "name of gateway group"
      nfs_versions:
        type: "array"
        description: "nfs versions of nfs supported"
        items:
          type: "string"
      security:
        type: "string"
        description: "smb security type"
      smb1_enabled:
        type: "boolean"
        description: "smb version 1.0 enabled"
      smb_ports:
        type: "array"
        description: "smb ports"
        items:
          type: "integer"
          format: "int64"
      types:
        type: "array"
        description: "types of supported (smb, nfs, ftp)"
        items:
          type: "string"
      vip:
        type: "string"
        description: "virtual ip of gateway group"
    title: "FSGatewayGroupCreateReq_GatewayGroup"
  FSGatewayGroupRemoveGatewaysReq:
    type: "object"
    required:
    - "fs_gateway_group"
    properties:
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroupRemoveGatewaysReq_GatewayGroup"
    title: "FSGatewayGroupRemoveGatewaysReq"
  FSGatewayGroupRemoveGatewaysReq_GatewayGroup:
    type: "object"
    required:
    - "fs_gateway_ids"
    properties:
      fs_gateway_ids:
        type: "array"
        description: "file storage gateway ids"
        items:
          type: "integer"
          format: "int64"
    title: "FSGatewayGroupRemoveGatewaysReq_GatewayGroup"
  FSGatewayGroupResp:
    type: "object"
    required:
    - "fs_gateway_group"
    properties:
      fs_gateway_group:
        description: "file storage gateway group"
        $ref: "#/definitions/FSGatewayGroup"
    title: "FSGatewayGroupResp"
    example:
      fs_gateway_group:
        smb_ports:
        - 5
        - 5
        types:
        - "types"
        - "types"
        smb1_enabled: true
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        vip_mask: 2
        encoding: "encoding"
        security: "security"
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        nfs_versions:
        - "nfs_versions"
        - "nfs_versions"
        user_group_num: 5
        id: 6
        vip: "vip"
        action_status: "action_status"
        folder_num: 0
        status: "status"
  FSGatewayGroupUpdateReq:
    type: "object"
    required:
    - "fs_gateway_group"
    properties:
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroupUpdateReq_GatewayGroup"
    title: "FSGatewayGroupUpdateReq"
  FSGatewayGroupUpdateReq_GatewayGroup:
    type: "object"
    properties:
      description:
        type: "string"
        description: "description of gateway group"
      encoding:
        type: "string"
        description: "ftp encoding format, default is utf8"
      name:
        type: "string"
        description: "name of gateway group"
      nfs_versions:
        type: "array"
        description: "nfs versions supported"
        items:
          type: "string"
      security:
        type: "string"
        description: "smb security type"
      smb1_enabled:
        type: "boolean"
        description: "smb version 1.0 enabled"
      smb_ports:
        type: "array"
        description: "smb ports"
        items:
          type: "integer"
          format: "int64"
      types:
        type: "array"
        description: "types of supported"
        items:
          type: "string"
      vip:
        type: "string"
        description: "virtual ip of gateway group"
    title: "FSGatewayGroupUpdateReq_GatewayGroup"
  FSGatewayGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      vip:
        type: "string"
      vip_mask:
        type: "integer"
        format: "int64"
    title: "FSGatewayGroup_Nestview"
    example:
      name: "name"
      id: 6
      vip_mask: 1
      vip: "vip"
  FSGatewayGroupsResp:
    type: "object"
    required:
    - "fs_gateway_groups"
    properties:
      fs_gateway_groups:
        type: "array"
        description: "file storage gateway groups"
        items:
          $ref: "#/definitions/FSGatewayGroup"
    title: "FSGatewayGroupsResp"
    example:
      fs_gateway_groups:
      - smb_ports:
        - 5
        - 5
        types:
        - "types"
        - "types"
        smb1_enabled: true
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        vip_mask: 2
        encoding: "encoding"
        security: "security"
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        nfs_versions:
        - "nfs_versions"
        - "nfs_versions"
        user_group_num: 5
        id: 6
        vip: "vip"
        action_status: "action_status"
        folder_num: 0
        status: "status"
      - smb_ports:
        - 5
        - 5
        types:
        - "types"
        - "types"
        smb1_enabled: true
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        vip_mask: 2
        encoding: "encoding"
        security: "security"
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        nfs_versions:
        - "nfs_versions"
        - "nfs_versions"
        user_group_num: 5
        id: 6
        vip: "vip"
        action_status: "action_status"
        folder_num: 0
        status: "status"
  FSGatewayReq:
    type: "object"
    required:
    - "host_id"
    properties:
      host_id:
        type: "integer"
        format: "int64"
        description: "host id"
      network_address_id:
        type: "integer"
        format: "int64"
        description: "network address id"
    title: "FSGatewayReq"
  FSGatewayResp:
    type: "object"
    required:
    - "fs_gateway"
    properties:
      fs_gateway:
        description: "file storage gateway"
        $ref: "#/definitions/FSGateway"
    title: "FSGatewayResp"
    example:
      fs_gateway:
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        vip: "vip"
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        nic_name: "nic_name"
        status: "status"
  FSGatewaysResp:
    type: "object"
    required:
    - "fs_gateways"
    properties:
      fs_gateways:
        type: "array"
        description: "file storage gateways"
        items:
          $ref: "#/definitions/FSGateway"
    title: "FSGatewaysResp"
    example:
      fs_gateways:
      - host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        vip: "vip"
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        nic_name: "nic_name"
        status: "status"
      - host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        vip: "vip"
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        nic_name: "nic_name"
        status: "status"
  FSLdap:
    type: "object"
    properties:
      action_status:
        type: "string"
      admin_dn:
        type: "string"
      connection_timeout:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      fs_gateway_group_num:
        type: "integer"
        format: "int64"
      group_suffix:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      ips:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      suffix:
        type: "string"
      timeout:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
      user_suffix:
        type: "string"
      verify_time:
        type: "string"
        format: "date-time"
    title: "FSLdap"
    description: "FSLdap defines model of file storage ldap"
    example:
      admin_dn: "admin_dn"
      ip: "ip"
      update: "2000-01-23T04:56:07.000+00:00"
      suffix: "suffix"
      verify_time: "2000-01-23T04:56:07.000+00:00"
      ips:
      - "ips"
      - "ips"
      timeout: 5
      group_suffix: "group_suffix"
      user_suffix: "user_suffix"
      port: 5
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      fs_gateway_group_num: 6
      id: 1
      connection_timeout: 0
      action_status: "action_status"
      status: "status"
  FSLdapCreateReq:
    type: "object"
    required:
    - "fs_ldap"
    properties:
      fs_ldap:
        $ref: "#/definitions/FSLdapCreateReq_Info"
    title: "FSLdapCreateReq"
  FSLdapCreateReq_Info:
    type: "object"
    required:
    - "ip"
    - "name"
    - "port"
    - "suffix"
    properties:
      admin_dn:
        type: "string"
        description: "ldap admin dn"
      connection_timeout:
        type: "integer"
        format: "int64"
        description: "timeout for connection"
      group_suffix:
        type: "string"
        description: "group suffix"
      ip:
        type: "string"
        description: "ip of server"
      ips:
        type: "array"
        description: "ips of standby servers"
        items:
          type: "string"
      name:
        type: "string"
        description: "name of ldap"
      password:
        type: "string"
        description: "bind password"
      port:
        type: "integer"
        format: "int64"
        description: "ldap service port"
      suffix:
        type: "string"
        description: "ldap suffix"
      timeout:
        type: "integer"
        format: "int64"
        description: "timeout for searching"
      user_suffix:
        type: "string"
        description: "user suffix"
    title: "FSLdapCreateReq_Info"
  FSLdapResp:
    type: "object"
    required:
    - "fs_ldap"
    properties:
      fs_ldap:
        description: "file storage ldap"
        $ref: "#/definitions/FSLdap"
    title: "FSLdapResp"
    example:
      fs_ldap:
        admin_dn: "admin_dn"
        ip: "ip"
        update: "2000-01-23T04:56:07.000+00:00"
        suffix: "suffix"
        verify_time: "2000-01-23T04:56:07.000+00:00"
        ips:
        - "ips"
        - "ips"
        timeout: 5
        group_suffix: "group_suffix"
        user_suffix: "user_suffix"
        port: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 6
        id: 1
        connection_timeout: 0
        action_status: "action_status"
        status: "status"
  FSLdapUpdateReq:
    type: "object"
    required:
    - "fs_ldap"
    properties:
      fs_ldap:
        $ref: "#/definitions/FSLdapUpdateReq_Info"
    title: "FSLdapUpdateReq"
  FSLdapUpdateReq_Info:
    type: "object"
    required:
    - "ip"
    - "name"
    - "port"
    - "suffix"
    properties:
      admin_dn:
        type: "string"
        description: "ldap admin dn"
      connection_timeout:
        type: "integer"
        format: "int64"
        description: "timeout for connection"
      group_suffix:
        type: "string"
        description: "group suffix"
      ip:
        type: "string"
        description: "ip of server"
      ips:
        type: "array"
        description: "ips of standby servers"
        items:
          type: "string"
      name:
        type: "string"
        description: "name of ldap"
      password:
        type: "string"
        description: "bind password"
      port:
        type: "integer"
        format: "int64"
        description: "ldap service port"
      suffix:
        type: "string"
        description: "ldap suffix"
      timeout:
        type: "integer"
        format: "int64"
        description: "timeout for searching"
      user_suffix:
        type: "string"
        description: "user suffix"
    title: "FSLdapUpdateReq_Info"
  FSLdapsResp:
    type: "object"
    required:
    - "fs_ldaps"
    properties:
      fs_ldaps:
        type: "array"
        description: "file storage ldaps"
        items:
          $ref: "#/definitions/FSLdap"
    title: "FSLdapsResp"
    example:
      fs_ldaps:
      - admin_dn: "admin_dn"
        ip: "ip"
        update: "2000-01-23T04:56:07.000+00:00"
        suffix: "suffix"
        verify_time: "2000-01-23T04:56:07.000+00:00"
        ips:
        - "ips"
        - "ips"
        timeout: 5
        group_suffix: "group_suffix"
        user_suffix: "user_suffix"
        port: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 6
        id: 1
        connection_timeout: 0
        action_status: "action_status"
        status: "status"
      - admin_dn: "admin_dn"
        ip: "ip"
        update: "2000-01-23T04:56:07.000+00:00"
        suffix: "suffix"
        verify_time: "2000-01-23T04:56:07.000+00:00"
        ips:
        - "ips"
        - "ips"
        timeout: 5
        group_suffix: "group_suffix"
        user_suffix: "user_suffix"
        port: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        fs_gateway_group_num: 6
        id: 1
        connection_timeout: 0
        action_status: "action_status"
        status: "status"
  FSNFSConnection:
    type: "object"
    properties:
      client_ip:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShare_Nestview"
      id:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "FSNFSConnection"
    description: "FSNFSConnection defines model of FS NFS connection"
    example:
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      client_ip: "client_ip"
      fs_nfs_share:
        id: 0
      id: 6
  FSNFSConnectionsResp:
    type: "object"
    required:
    - "fs_nfs_connections"
    properties:
      fs_nfs_connections:
        type: "array"
        description: "fs nfs connections"
        items:
          $ref: "#/definitions/FSNFSConnection"
    title: "FSNFSConnectionsResp"
    example:
      fs_nfs_connections:
      - create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        fs_nfs_share:
          id: 0
        id: 6
      - create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        fs_nfs_share:
          id: 0
        id: 6
  FSNFSShare:
    type: "object"
    properties:
      acl_num:
        type: "integer"
        format: "int64"
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroup_Nestview"
      fs_quota_tree:
        $ref: "#/definitions/FSQuotaTree_Nestview"
      id:
        type: "integer"
        format: "int64"
      mapping_num:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSNFSShare"
    description: "FSNFSShare defines model of fs nfs share"
    example:
      mapping_num: 1
      fs_folder:
        name: "name"
        id: 6
      create: "2000-01-23T04:56:07.000+00:00"
      fs_quota_tree:
        name: "name"
        id: 5
      update: "2000-01-23T04:56:07.000+00:00"
      acl_num: 0
      id: 6
      fs_gateway_group:
        name: "name"
        id: 6
        vip_mask: 1
        vip: "vip"
      action_status: "action_status"
      status: "status"
  FSNFSShareACL:
    type: "object"
    properties:
      all_squash:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      fs_client:
        $ref: "#/definitions/FSClient_Nestview"
      fs_client_group:
        $ref: "#/definitions/FSClientGroup_Nestview"
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShare_Nestview"
      id:
        type: "integer"
        format: "int64"
      permission:
        type: "string"
      root_squash:
        type: "boolean"
      sync:
        type: "boolean"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSNFSShareACL"
    description: "FSNFSShareACL defines model of fs nfs share ACL"
    example:
      all_squash: true
      fs_client_group:
        name: "name"
        id: 6
      fs_client:
        name: "name"
        id: 6
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      fs_nfs_share:
        id: 0
      permission: "permission"
      id: 0
      root_squash: true
      type: "type"
      sync: true
  FSNFSShareACLReq:
    type: "object"
    properties:
      all_squash:
        type: "boolean"
        description: "all squash"
      fs_client_group_id:
        type: "integer"
        format: "int64"
        description: "id of cilent group"
      fs_client_id:
        type: "integer"
        format: "int64"
        description: "id of cilent"
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      permission:
        type: "string"
        description: "readonly or readwrite access"
      root_squash:
        type: "boolean"
        description: "root squash"
      sync:
        type: "boolean"
        description: "write to disk by sync or async"
      type:
        type: "string"
        description: "type of share acl"
    title: "FSNFSShareACLReq"
  FSNFSShareACLsResp:
    type: "object"
    required:
    - "fs_nfs_share_acls"
    properties:
      fs_nfs_share_acls:
        type: "array"
        description: "file storage folder share acls"
        items:
          $ref: "#/definitions/FSNFSShareACL"
    title: "FSNFSShareACLsResp"
    example:
      fs_nfs_share_acls:
      - all_squash: true
        fs_client_group:
          name: "name"
          id: 6
        fs_client:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_nfs_share:
          id: 0
        permission: "permission"
        id: 0
        root_squash: true
        type: "type"
        sync: true
      - all_squash: true
        fs_client_group:
          name: "name"
          id: 6
        fs_client:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_nfs_share:
          id: 0
        permission: "permission"
        id: 0
        root_squash: true
        type: "type"
        sync: true
  FSNFSShareAddACLsReq:
    type: "object"
    required:
    - "fs_nfs_share"
    properties:
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShareAddACLsReq_Share"
    title: "FSNFSShareAddACLsReq"
  FSNFSShareAddACLsReq_Share:
    type: "object"
    required:
    - "fs_nfs_share_acls"
    properties:
      fs_nfs_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSNFSShareACLReq"
    title: "FSNFSShareAddACLsReq_Share"
  FSNFSShareCreateReq:
    type: "object"
    required:
    - "fs_nfs_share"
    properties:
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShareCreateReq_Share"
    title: "FSNFSShareCreateReq"
  FSNFSShareCreateReq_Share:
    type: "object"
    required:
    - "fs_folder_id"
    - "fs_gateway_group_id"
    properties:
      fs_folder_id:
        type: "integer"
        format: "int64"
        description: "folder id"
      fs_gateway_group_id:
        type: "integer"
        format: "int64"
        description: "gateway group id"
      fs_nfs_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSNFSShareACLReq"
      fs_quota_tree_id:
        type: "integer"
        format: "int64"
        description: "quota tree id"
    title: "FSNFSShareCreateReq_Share"
  FSNFSShareRemoveACLsReq:
    type: "object"
    required:
    - "fs_nfs_share"
    properties:
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShareRemoveACLsReq_Share"
    title: "FSNFSShareRemoveACLsReq"
  FSNFSShareRemoveACLsReq_Share:
    type: "object"
    required:
    - "fs_nfs_share_acl_ids"
    properties:
      fs_nfs_share_acl_ids:
        type: "array"
        description: "access control array"
        items:
          type: "integer"
          format: "int64"
    title: "FSNFSShareRemoveACLsReq_Share"
  FSNFSShareResp:
    type: "object"
    required:
    - "fs_nfs_share"
    properties:
      fs_nfs_share:
        description: "folder share"
        $ref: "#/definitions/FSNFSShare"
    title: "FSNFSShareResp"
    example:
      fs_nfs_share:
        mapping_num: 1
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSNFSShareUpdateACLReq:
    type: "object"
    properties:
      all_squash:
        type: "boolean"
        description: "all squash"
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      permission:
        type: "string"
        description: "readonly or readwrite access"
      root_squash:
        type: "boolean"
        description: "root squash"
      sync:
        type: "boolean"
        description: "write to disk by sync or async"
    title: "FSNFSShareUpdateACLReq"
  FSNFSShareUpdateACLsReq:
    type: "object"
    required:
    - "fs_nfs_share"
    properties:
      fs_nfs_share:
        $ref: "#/definitions/FSNFSShareUpdateACLsReq_Share"
    title: "FSNFSShareUpdateACLsReq"
  FSNFSShareUpdateACLsReq_Share:
    type: "object"
    properties:
      fs_nfs_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSNFSShareUpdateACLReq"
    title: "FSNFSShareUpdateACLsReq_Share"
  FSNFSShare_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "FSNFSShare_Nestview"
    example:
      id: 0
  FSNFSSharesResp:
    type: "object"
    required:
    - "fs_nfs_shares"
    properties:
      fs_nfs_shares:
        type: "array"
        description: "share"
        items:
          $ref: "#/definitions/FSNFSShare"
    title: "FSNFSSharesResp"
    example:
      fs_nfs_shares:
      - mapping_num: 1
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
      - mapping_num: 1
        fs_folder:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSQuotaTree:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      shared:
        type: "boolean"
      size:
        type: "integer"
        format: "int64"
      soft_quota_size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      used_kbyte:
        type: "integer"
        format: "int64"
    title: "FSQuotaTree"
    description: "FSQuotaTree defines model of file storage quota tree"
    example:
      shared: true
      used_kbyte: 5
      size: 6
      soft_quota_size: 1
      fs_folder:
        name: "name"
        id: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      action_status: "action_status"
      status: "status"
  FSQuotaTreeResp:
    type: "object"
    required:
    - "fs_quota_tree"
    properties:
      fs_quota_tree:
        description: "file storage quota tree"
        $ref: "#/definitions/FSQuotaTree"
    title: "FSQuotaTreeResp"
    example:
      fs_quota_tree:
        shared: true
        used_kbyte: 5
        size: 6
        soft_quota_size: 1
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
  FSQuotaTreeUpdateReq:
    type: "object"
    required:
    - "fs_quota_tree"
    properties:
      fs_quota_tree:
        $ref: "#/definitions/FSQuotaTreeUpdateReq_QuotaTree"
    title: "FSQuotaTreeUpdateReq"
  FSQuotaTreeUpdateReq_QuotaTree:
    type: "object"
    properties:
      name:
        type: "string"
        description: "name of quota tree"
      size:
        type: "integer"
        format: "int64"
        description: "size of quota tree"
      soft_quota_size:
        type: "integer"
        format: "int64"
        description: "soft quota size of quota tree"
    title: "FSQuotaTreeUpdateReq_QuotaTree"
  FSQuotaTree_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSQuotaTree_Nestview"
    example:
      name: "name"
      id: 5
  FSQuotaTreesResp:
    type: "object"
    required:
    - "fs_quota_trees"
    properties:
      fs_quota_trees:
        type: "array"
        description: "file storage quota trees"
        items:
          $ref: "#/definitions/FSQuotaTree"
    title: "FSQuotaTreesResp"
    example:
      fs_quota_trees:
      - shared: true
        used_kbyte: 5
        size: 6
        soft_quota_size: 1
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
      - shared: true
        used_kbyte: 5
        size: 6
        soft_quota_size: 1
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
  FSSMBSession:
    type: "object"
    properties:
      client_ip:
        type: "string"
      client_port:
        type: "integer"
        format: "int64"
      connected_at:
        type: "string"
        format: "date-time"
      create:
        type: "string"
        format: "date-time"
      fs_smb_share:
        $ref: "#/definitions/FSSMBShare_Nestview"
      group:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      protocol_version:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      username:
        type: "string"
    title: "FSSMBSession"
    description: "FSSMBSession defines model of FS SMB session"
    example:
      client_port: 0
      fs_smb_share:
        name: "name"
        id: 6
      protocol_version: "protocol_version"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      client_ip: "client_ip"
      connected_at: "2000-01-23T04:56:07.000+00:00"
      id: 1
      group: "group"
      username: "username"
  FSSMBSessionsResp:
    type: "object"
    required:
    - "fs_smb_sessions"
    properties:
      fs_smb_sessions:
        type: "array"
        description: "fs smb sessions"
        items:
          $ref: "#/definitions/FSSMBSession"
    title: "FSSMBSessionsResp"
    example:
      fs_smb_sessions:
      - client_port: 0
        fs_smb_share:
          name: "name"
          id: 6
        protocol_version: "protocol_version"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        connected_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        group: "group"
        username: "username"
      - client_port: 0
        fs_smb_share:
          name: "name"
          id: 6
        protocol_version: "protocol_version"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        client_ip: "client_ip"
        connected_at: "2000-01-23T04:56:07.000+00:00"
        id: 1
        group: "group"
        username: "username"
  FSSMBShare:
    type: "object"
    properties:
      acl_inherited:
        type: "boolean"
      acl_num:
        type: "integer"
        format: "int64"
      action_status:
        type: "string"
      case_sensitive:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      fs_gateway_group:
        $ref: "#/definitions/FSGatewayGroup_Nestview"
      fs_quota_tree:
        $ref: "#/definitions/FSQuotaTree_Nestview"
      id:
        type: "integer"
        format: "int64"
      mapping_num:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      recycled:
        type: "boolean"
      security:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSSMBShare"
    description: "FSSMBShare defines model of fs smb share"
    example:
      acl_inherited: true
      fs_quota_tree:
        name: "name"
        id: 5
      update: "2000-01-23T04:56:07.000+00:00"
      security: "security"
      recycled: true
      mapping_num: 1
      case_sensitive: true
      fs_folder:
        name: "name"
        id: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      acl_num: 0
      id: 6
      fs_gateway_group:
        name: "name"
        id: 6
        vip_mask: 1
        vip: "vip"
      action_status: "action_status"
      status: "status"
  FSSMBShareACL:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      fs_smb_share:
        $ref: "#/definitions/FSSMBShare_Nestview"
      fs_user:
        $ref: "#/definitions/FSUser_Nestview"
      fs_user_group:
        $ref: "#/definitions/FSUserGroup_Nestview"
      fs_user_group_name:
        type: "string"
      fs_user_name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      permission:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSSMBShareACL"
    description: "FSSMBShareACL defines model of fs smb share ACL"
    example:
      fs_smb_share:
        name: "name"
        id: 6
      fs_user_name: "fs_user_name"
      fs_user_group:
        name: "name"
        id: 1
      fs_user:
        name: "name"
        id: 6
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      permission: "permission"
      id: 0
      type: "type"
      fs_user_group_name: "fs_user_group_name"
  FSSMBShareACLReq:
    type: "object"
    properties:
      fs_user_group_id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      fs_user_group_name:
        type: "string"
        description: "id of user group"
      fs_user_id:
        type: "integer"
        format: "int64"
        description: "id of user"
      fs_user_name:
        type: "string"
        description: "id of user"
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      permission:
        type: "string"
        description: "readonly or readwrite access"
      type:
        type: "string"
        description: "type of share acl"
    title: "FSSMBShareACLReq"
  FSSMBShareACLsResp:
    type: "object"
    required:
    - "fs_smb_share_acls"
    properties:
      fs_smb_share_acls:
        type: "array"
        description: "file storage folder share acls"
        items:
          $ref: "#/definitions/FSSMBShareACL"
    title: "FSSMBShareACLsResp"
    example:
      fs_smb_share_acls:
      - fs_smb_share:
          name: "name"
          id: 6
        fs_user_name: "fs_user_name"
        fs_user_group:
          name: "name"
          id: 1
        fs_user:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        permission: "permission"
        id: 0
        type: "type"
        fs_user_group_name: "fs_user_group_name"
      - fs_smb_share:
          name: "name"
          id: 6
        fs_user_name: "fs_user_name"
        fs_user_group:
          name: "name"
          id: 1
        fs_user:
          name: "name"
          id: 6
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        permission: "permission"
        id: 0
        type: "type"
        fs_user_group_name: "fs_user_group_name"
  FSSMBShareAddACLsReq:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        $ref: "#/definitions/FSSMBShareAddACLsReq_Share"
    title: "FSSMBShareAddACLsReq"
  FSSMBShareAddACLsReq_Share:
    type: "object"
    required:
    - "fs_smb_share_acls"
    properties:
      fs_smb_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSSMBShareACLReq"
    title: "FSSMBShareAddACLsReq_Share"
  FSSMBShareCreateReq:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        $ref: "#/definitions/FSSMBShareCreateReq_Share"
    title: "FSSMBShareCreateReq"
  FSSMBShareCreateReq_Share:
    type: "object"
    required:
    - "fs_folder_id"
    - "fs_gateway_group_id"
    properties:
      acl_inherited:
        type: "boolean"
        description: "default acl status"
      case_sensitive:
        type: "boolean"
        description: "case sensitive"
      fs_folder_id:
        type: "integer"
        format: "int64"
        description: "folder id"
      fs_gateway_group_id:
        type: "integer"
        format: "int64"
        description: "gateway group id"
      fs_quota_tree_id:
        type: "integer"
        format: "int64"
        description: "quota tree id"
      fs_smb_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSSMBShareACLReq"
      name:
        type: "string"
        description: "name of share"
      recycled:
        type: "boolean"
        description: "recycle status"
    title: "FSSMBShareCreateReq_Share"
  FSSMBShareRemoveACLsReq:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        $ref: "#/definitions/FSSMBShareRemoveACLsReq_Share"
    title: "FSSMBShareRemoveACLsReq"
  FSSMBShareRemoveACLsReq_Share:
    type: "object"
    required:
    - "fs_smb_share_acl_ids"
    properties:
      fs_smb_share_acl_ids:
        type: "array"
        description: "access control array"
        items:
          type: "integer"
          format: "int64"
    title: "FSSMBShareRemoveACLsReq_Share"
  FSSMBShareResp:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        description: "fs smb share"
        $ref: "#/definitions/FSSMBShare"
    title: "FSSMBShareResp"
    example:
      fs_smb_share:
        acl_inherited: true
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        security: "security"
        recycled: true
        mapping_num: 1
        case_sensitive: true
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSSMBShareUpdateACLReq:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id of user group"
      permission:
        type: "string"
        description: "readonly or readwrite access"
    title: "FSSMBShareUpdateACLReq"
  FSSMBShareUpdateACLsReq:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        $ref: "#/definitions/FSSMBShareUpdateACLsReq_Share"
    title: "FSSMBShareUpdateACLsReq"
  FSSMBShareUpdateACLsReq_Share:
    type: "object"
    properties:
      fs_smb_share_acls:
        type: "array"
        description: "access control array"
        items:
          $ref: "#/definitions/FSSMBShareUpdateACLReq"
    title: "FSSMBShareUpdateACLsReq_Share"
  FSSMBShareUpdateReq:
    type: "object"
    required:
    - "fs_smb_share"
    properties:
      fs_smb_share:
        $ref: "#/definitions/FSSMBShareUpdateReq_Share"
    title: "FSSMBShareUpdateReq"
  FSSMBShareUpdateReq_Share:
    type: "object"
    properties:
      acl_inherited:
        type: "boolean"
        description: "default acl status"
      case_sensitive:
        type: "boolean"
        description: "case sensitive"
      recycled:
        type: "boolean"
        description: "recycle status"
    title: "FSSMBShareUpdateReq_Share"
  FSSMBShare_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSSMBShare_Nestview"
    example:
      name: "name"
      id: 6
  FSSMBSharesResp:
    type: "object"
    required:
    - "fs_smb_shares"
    properties:
      fs_smb_shares:
        type: "array"
        description: "fs smb shares"
        items:
          $ref: "#/definitions/FSSMBShare"
    title: "FSSMBSharesResp"
    example:
      fs_smb_shares:
      - acl_inherited: true
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        security: "security"
        recycled: true
        mapping_num: 1
        case_sensitive: true
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
      - acl_inherited: true
        fs_quota_tree:
          name: "name"
          id: 5
        update: "2000-01-23T04:56:07.000+00:00"
        security: "security"
        recycled: true
        mapping_num: 1
        case_sensitive: true
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        acl_num: 0
        id: 6
        fs_gateway_group:
          name: "name"
          id: 6
          vip_mask: 1
          vip: "vip"
        action_status: "action_status"
        status: "status"
  FSSnapshot:
    type: "object"
    properties:
      allocated_size:
        type: "integer"
        format: "int64"
      block_snapshot:
        $ref: "#/definitions/Snapshot_Nestview"
      clone_folder_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      creator:
        type: "string"
      description:
        type: "string"
      formatted:
        type: "boolean"
      fs_folder:
        $ref: "#/definitions/FSFolder_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSSnapshot"
    description: "FSSnapshot defines model of file storage snapshot"
    example:
      creator: "creator"
      formatted: true
      pool:
        name: "name"
        id: 5
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      allocated_size: 0
      block_snapshot:
        name: "name"
        id: 0
      size: 5
      clone_folder_num: 6
      fs_folder:
        name: "name"
        id: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 1
      status: "status"
  FSSnapshotCreateReq:
    type: "object"
    required:
    - "fs_snapshot"
    properties:
      fs_snapshot:
        $ref: "#/definitions/FSSnapshotCreateReq_Snapshot"
    title: "FSSnapshotCreateReq"
  FSSnapshotCreateReq_Snapshot:
    type: "object"
    required:
    - "fs_folder_id"
    - "name"
    properties:
      description:
        type: "string"
        description: "description of file storage snapshot"
      fs_folder_id:
        type: "integer"
        format: "int64"
        description: "file storage folder id"
      name:
        type: "string"
        description: "name of snapshot"
    title: "FSSnapshotCreateReq_Snapshot"
  FSSnapshotResp:
    type: "object"
    required:
    - "fs_snapshot"
    properties:
      fs_snapshot:
        description: "file storage snapshot"
        $ref: "#/definitions/FSSnapshot"
    title: "FSSnapshotResp"
    example:
      fs_snapshot:
        creator: "creator"
        formatted: true
        pool:
          name: "name"
          id: 5
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        block_snapshot:
          name: "name"
          id: 0
        size: 5
        clone_folder_num: 6
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
  FSSnapshotUpdateReq:
    type: "object"
    required:
    - "fs_snapshot"
    properties:
      fs_snapshot:
        $ref: "#/definitions/FSSnapshotUpdateReq_Snapshot"
    title: "FSSnapshotUpdateReq"
  FSSnapshotUpdateReq_Snapshot:
    type: "object"
    properties:
      description:
        type: "string"
        description: "description of file storage snapshot"
      name:
        type: "string"
        description: "name of snapshot"
    title: "FSSnapshotUpdateReq_Snapshot"
  FSSnapshot_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSSnapshot_Nestview"
    example:
      name: "name"
      id: 1
  FSSnapshotsResp:
    type: "object"
    required:
    - "fs_snapshots"
    properties:
      fs_snapshots:
        type: "array"
        description: "file storage snapshots"
        items:
          $ref: "#/definitions/FSSnapshot"
    title: "FSSnapshotsResp"
    example:
      fs_snapshots:
      - creator: "creator"
        formatted: true
        pool:
          name: "name"
          id: 5
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        block_snapshot:
          name: "name"
          id: 0
        size: 5
        clone_folder_num: 6
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
      - creator: "creator"
        formatted: true
        pool:
          name: "name"
          id: 5
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        block_snapshot:
          name: "name"
          id: 0
        size: 5
        clone_folder_num: 6
        fs_folder:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 1
        status: "status"
  FSUser:
    type: "object"
    properties:
      available:
        type: "boolean"
        description: "TODO(liubo): should be delete, but used in overview..."
      create:
        type: "string"
        format: "date-time"
      email:
        type: "string"
      fs_user_group_num:
        type: "integer"
        format: "int64"
      fs_user_groups:
        type: "array"
        items:
          $ref: "#/definitions/FSUserGroup_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      password:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "FSUser"
    description: "FSUser defines model of file storage user"
    example:
      password: "password"
      available: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      fs_user_groups:
      - name: "name"
        id: 1
      - name: "name"
        id: 1
      id: 6
      fs_user_group_num: 0
      email: "email"
  FSUserCreateReq:
    type: "object"
    properties:
      fs_user:
        $ref: "#/definitions/FSUserCreateReq_User"
    title: "FSUserCreateReq"
  FSUserCreateReq_User:
    type: "object"
    properties:
      email:
        type: "string"
        description: "email of file storage user"
      name:
        type: "string"
        description: "name of file storage user"
      password:
        type: "string"
        description: "password of file storage user"
    title: "FSUserCreateReq_User"
  FSUserGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      fs_users:
        type: "array"
        items:
          $ref: "#/definitions/FSUser_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      user_num:
        type: "integer"
        format: "int64"
    title: "FSUserGroup"
    description: "FSUserGroup defines model of file storage user group"
    example:
      user_num: 6
      fs_users:
      - name: "name"
        id: 6
      - name: "name"
        id: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      action_status: "action_status"
  FSUserGroupAddUsersReq:
    type: "object"
    required:
    - "fs_user_group"
    properties:
      fs_user_group:
        $ref: "#/definitions/FSUserGroupAddUsersReq_UserGroup"
    title: "FSUserGroupAddUsersReq"
  FSUserGroupAddUsersReq_UserGroup:
    type: "object"
    properties:
      fs_user_ids:
        type: "array"
        description: "ids of users, which are required when type is smb or ftp"
        items:
          type: "integer"
          format: "int64"
    title: "FSUserGroupAddUsersReq_UserGroup"
  FSUserGroupCreateReq:
    type: "object"
    required:
    - "fs_user_group"
    properties:
      fs_user_group:
        $ref: "#/definitions/FSUserGroupCreateReq_UserGroup"
    title: "FSUserGroupCreateReq"
  FSUserGroupCreateReq_UserGroup:
    type: "object"
    required:
    - "name"
    properties:
      fs_user_ids:
        type: "array"
        description: "ids of users, which are required when type is smb or ftp"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
        description: "name of user group"
    title: "FSUserGroupCreateReq_UserGroup"
  FSUserGroupRemoveUsersReq:
    type: "object"
    required:
    - "fs_user_group"
    properties:
      fs_user_group:
        $ref: "#/definitions/FSUserGroupRemoveUsersReq_UserGroup"
    title: "FSUserGroupRemoveUsersReq"
  FSUserGroupRemoveUsersReq_UserGroup:
    type: "object"
    properties:
      fs_user_ids:
        type: "array"
        description: "ids of users, which are required when type is smb or ftp"
        items:
          type: "integer"
          format: "int64"
    title: "FSUserGroupRemoveUsersReq_UserGroup"
  FSUserGroupResp:
    type: "object"
    required:
    - "fs_user_group"
    properties:
      fs_user_group:
        description: "file storage user group"
        $ref: "#/definitions/FSUserGroup"
    title: "FSUserGroupResp"
    example:
      fs_user_group:
        user_num: 6
        fs_users:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
  FSUserGroupUpdateReq:
    type: "object"
    required:
    - "fs_user_group"
    properties:
      fs_user_group:
        $ref: "#/definitions/FSUserGroupUpdateReq_UserGroup"
    title: "FSUserGroupUpdateReq"
  FSUserGroupUpdateReq_UserGroup:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "name of user group"
    title: "FSUserGroupUpdateReq_UserGroup"
  FSUserGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSUserGroup_Nestview"
    example:
      name: "name"
      id: 1
  FSUserGroupsResp:
    type: "object"
    required:
    - "fs_user_groups"
    properties:
      fs_user_groups:
        type: "array"
        description: "file storage user groups"
        items:
          $ref: "#/definitions/FSUserGroup"
    title: "FSUserGroupsResp"
    example:
      fs_user_groups:
      - user_num: 6
        fs_users:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
      - user_num: 6
        fs_users:
        - name: "name"
          id: 6
        - name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
  FSUserResp:
    type: "object"
    required:
    - "fs_user"
    properties:
      fs_user:
        description: "file storage user"
        $ref: "#/definitions/FSUser"
    title: "FSUserResp"
    example:
      fs_user:
        password: "password"
        available: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_user_groups:
        - name: "name"
          id: 1
        - name: "name"
          id: 1
        id: 6
        fs_user_group_num: 0
        email: "email"
  FSUserUpdateReq:
    type: "object"
    properties:
      fs_user:
        $ref: "#/definitions/FSUserUpdateReq_User"
    title: "FSUserUpdateReq"
  FSUserUpdateReq_User:
    type: "object"
    properties:
      email:
        type: "string"
        description: "email of user"
      name:
        type: "string"
        description: "name of user"
      password:
        type: "string"
        description: "password of user"
    title: "FSUserUpdateReq_User"
  FSUser_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "FSUser_Nestview"
    example:
      name: "name"
      id: 6
  FSUsersResp:
    type: "object"
    required:
    - "fs_users"
    properties:
      fs_users:
        type: "array"
        description: "file storage users"
        items:
          $ref: "#/definitions/FSUser"
    title: "FSUsersResp"
    example:
      fs_users:
      - password: "password"
        available: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_user_groups:
        - name: "name"
          id: 1
        - name: "name"
          id: 1
        id: 6
        fs_user_group_num: 0
        email: "email"
      - password: "password"
        available: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        fs_user_groups:
        - name: "name"
          id: 1
        - name: "name"
          id: 1
        id: 6
        fs_user_group_num: 0
        email: "email"
  Host:
    type: "object"
    required:
    - "admin_ip"
    properties:
      action_status:
        type: "string"
      admin_ip:
        type: "string"
      clock_diff:
        type: "integer"
        format: "int64"
        description: "clock diff in milliseconds with primary host"
      cores:
        type: "integer"
        format: "int64"
      cpu_model:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      disk_num:
        type: "integer"
        format: "int64"
      enclosures:
        type: "array"
        items:
          type: "object"
          properties: {}
      fcports:
        type: "array"
        description: "fc ports of host"
        items:
          $ref: "#/definitions/HostFcPort"
      gateway_ips:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      is_master_db:
        type: "boolean"
      memory_kbyte:
        type: "integer"
        format: "int64"
      model:
        type: "string"
      name:
        type: "string"
      os:
        type: "string"
      private_ip:
        type: "string"
      protection_domain:
        description: "protection domain of host"
        $ref: "#/definitions/ProtectionDomain_Nestview"
      public_ips:
        type: "string"
      rack:
        type: "string"
      roles:
        type: "string"
      root_disk:
        $ref: "#/definitions/Disk_Nestview"
      status:
        type: "string"
      type:
        type: "string"
      up:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
      vendor:
        type: "string"
    title: "Host"
    description: "Host defines the installed hosts @grpc-models-proto"
    example:
      roles: "roles"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      enclosures:
      - "{}"
      - "{}"
      private_ip: "private_ip"
      root_disk:
        disk_type: "disk_type"
        id: 0
        device: "device"
      cores: 6
      is_master_db: true
      disk_num: 1
      cpu_model: "cpu_model"
      vendor: "vendor"
      create: "2000-01-23T04:56:07.000+00:00"
      model: "model"
      id: 5
      up: true
      action_status: "action_status"
      public_ips: "public_ips"
      memory_kbyte: 2
      rack: "rack"
      gateway_ips: "gateway_ips"
      os: "os"
      clock_diff: 0
      admin_ip: "admin_ip"
      protection_domain:
        name: "name"
        id: 5
      name: "name"
      fcports:
      - host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        wwn: "wwn"
      - host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        wwn: "wwn"
      status: "status"
  HostCreateReq:
    type: "object"
    properties:
      host:
        $ref: "#/definitions/HostCreateReq_Host"
    title: "HostCreateReq"
    example:
      host:
        gateway_ips:
        - "gateway_ips"
        - "gateway_ips"
        public_ip: "public_ip"
        roles:
        - "roles"
        - "roles"
        description: "description"
        meta_device: "meta_device"
        admin_ip: "admin_ip"
        type: "type"
        protection_domain_id: 0
        private_ip: "private_ip"
  HostCreateReq_Host:
    type: "object"
    required:
    - "admin_ip"
    properties:
      admin_ip:
        type: "string"
        description: "admin ip"
      description:
        type: "string"
        description: "host description"
      gateway_ips:
        type: "array"
        description: "gateway ips for s3"
        items:
          type: "string"
      meta_device:
        type: "string"
        description: "meta device for docker"
      private_ip:
        type: "string"
        description: "cluster private ip for internal data access"
      protection_domain_id:
        type: "integer"
        format: "int64"
        description: "deprecated"
      public_ip:
        type: "string"
        description: "public ip for outside data access"
      roles:
        type: "array"
        description: "host roles:\nadmin,monitor,block_storage_gateway,file_storage_gateway,s3_gateway,nfs_gateway"
        items:
          type: "string"
      type:
        type: "string"
        description: "storage server or storage client"
    title: "HostCreateReq_Host"
    example:
      gateway_ips:
      - "gateway_ips"
      - "gateway_ips"
      public_ip: "public_ip"
      roles:
      - "roles"
      - "roles"
      description: "description"
      meta_device: "meta_device"
      admin_ip: "admin_ip"
      type: "type"
      protection_domain_id: 0
      private_ip: "private_ip"
  HostEncSpec:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      enclosures:
        type: "array"
        items:
          $ref: "#/definitions/Enclosure"
      id:
        type: "integer"
        format: "int64"
      model:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      vendor:
        type: "string"
    title: "HostEncSpec"
    description: "HostEncSpec defines host enclosure specification"
    example:
      vendor: "vendor"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      model: "model"
      id: 5
      enclosures:
      - start_slot: 1
        slot_num: 6
        ids:
        - 0
        - 0
        position: "position"
        order: "order"
      - start_slot: 1
        slot_num: 6
        ids:
        - 0
        - 0
        position: "position"
        order: "order"
  HostEncSpecCreateReq:
    type: "object"
    properties:
      host_enc_spec:
        $ref: "#/definitions/HostEncSpecCreateReq_HostEncSpec"
    title: "HostEncSpecCreateReq"
    example:
      host_enc_spec:
        vendor: "vendor"
        model: "model"
        enclosures:
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
  HostEncSpecCreateReq_HostEncSpec:
    type: "object"
    required:
    - "enclosures"
    - "model"
    - "vendor"
    properties:
      enclosures:
        type: "array"
        description: "host enclosures"
        items:
          $ref: "#/definitions/Enclosure"
      model:
        type: "string"
        description: "host model"
      vendor:
        type: "string"
        description: "host vendor"
    title: "HostEncSpecCreateReq_HostEncSpec"
    example:
      vendor: "vendor"
      model: "model"
      enclosures:
      - start_slot: 1
        slot_num: 6
        ids:
        - 0
        - 0
        position: "position"
        order: "order"
      - start_slot: 1
        slot_num: 6
        ids:
        - 0
        - 0
        position: "position"
        order: "order"
  HostEncSpecResp:
    type: "object"
    required:
    - "host_enc_spec"
    properties:
      host_enc_spec:
        description: "host enclosure spec"
        $ref: "#/definitions/HostEncSpec"
    title: "HostEncSpecResp"
    example:
      host_enc_spec:
        vendor: "vendor"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        model: "model"
        id: 5
        enclosures:
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
  HostEncSpecsResp:
    type: "object"
    required:
    - "host_enc_specs"
    properties:
      host_enc_specs:
        type: "array"
        description: "host enclosure specs"
        items:
          $ref: "#/definitions/HostEncSpec"
    title: "HostEncSpecsResp"
    example:
      host_enc_specs:
      - vendor: "vendor"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        model: "model"
        id: 5
        enclosures:
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
      - vendor: "vendor"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        model: "model"
        id: 5
        enclosures:
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
        - start_slot: 1
          slot_num: 6
          ids:
          - 0
          - 0
          position: "position"
          order: "order"
  HostFcPort:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      wwn:
        type: "string"
    title: "HostFcPort"
    description: "HostFcPort defines fc port on the host"
    example:
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      id: 5
      wwn: "wwn"
  HostInfo:
    type: "object"
    properties:
      ips:
        type: "array"
        items:
          type: "string"
    title: "HostInfo"
    example:
      ips:
      - "ips"
      - "ips"
  HostInfoResp:
    type: "object"
    required:
    - "host_info"
    properties:
      host_info:
        description: "host info"
        $ref: "#/definitions/HostInfo"
    title: "HostInfoResp"
    example:
      host_info:
        ips:
        - "ips"
        - "ips"
  HostInitialization:
    type: "object"
    properties:
      admin_ips:
        type: "array"
        items:
          type: "string"
      create:
        type: "string"
        format: "date-time"
      disable_firewalld:
        type: "boolean"
      hostname_prefix:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      set_hostname:
        type: "boolean"
      ssh_user:
        type: "string"
      status:
        type: "string"
    title: "HostInitialization"
    description: "HostInitialization is the model of host initialization"
    example:
      hostname_prefix: "hostname_prefix"
      disable_firewalld: true
      set_hostname: true
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      message: "message"
      admin_ips:
      - "admin_ips"
      - "admin_ips"
      ssh_user: "ssh_user"
      status: "status"
  HostInitializationReq:
    type: "object"
    properties:
      host_initialization:
        $ref: "#/definitions/HostInitializationReq_Initialization"
    title: "HostInitializationReq"
    example:
      host_initialization:
        hostname_prefix: "hostname_prefix"
        disable_firewalld: true
        set_hostname: true
        ssh_password: "ssh_password"
        admin_ips:
        - "admin_ips"
        - "admin_ips"
        ssh_user: "ssh_user"
  HostInitializationReq_Initialization:
    type: "object"
    required:
    - "admin_ips"
    - "ssh_user"
    properties:
      admin_ips:
        type: "array"
        items:
          type: "string"
      disable_firewalld:
        type: "boolean"
      hostname_prefix:
        type: "string"
      set_hostname:
        type: "boolean"
      ssh_password:
        type: "string"
      ssh_user:
        type: "string"
    title: "HostInitializationReq_Initialization"
    example:
      hostname_prefix: "hostname_prefix"
      disable_firewalld: true
      set_hostname: true
      ssh_password: "ssh_password"
      admin_ips:
      - "admin_ips"
      - "admin_ips"
      ssh_user: "ssh_user"
  HostInitializationResp:
    type: "object"
    properties:
      host_initialization:
        $ref: "#/definitions/HostInitialization"
    title: "HostInitializationResp"
    example:
      host_initialization:
        hostname_prefix: "hostname_prefix"
        disable_firewalld: true
        set_hostname: true
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        message: "message"
        admin_ips:
        - "admin_ips"
        - "admin_ips"
        ssh_user: "ssh_user"
        status: "status"
  HostRecord:
    title: "HostRecord"
    allOf:
    - $ref: "#/definitions/Host"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/HostStat"
    description: "HostRecord combine Host and HostStatus to let API comfortable"
  HostResp:
    type: "object"
    required:
    - "host"
    properties:
      host:
        description: "host"
        $ref: "#/definitions/HostRecord"
    title: "HostResp"
    example:
      host: ""
  HostSamplesResp:
    type: "object"
    required:
    - "host_samples"
    properties:
      host_samples:
        type: "array"
        description: "host samples"
        items:
          $ref: "#/definitions/HostStat"
    title: "HostSamplesResp"
    example:
      host_samples:
      - network_tx_error_pps: 6.683562403749608
        meta_mon_used_kbyte: 7.386281948385884
        meta_postgres_used_kbyte: 1.2315135367772556
        network_drop_pps: 1.4894159098541704
        network_tx_pps: 8.762042012749001
        load5min: 2.3021358869347655
        meta_docker_used_kbyte: 9.301444243932576
        network_error_pps: 6.84685269835264
        network_rx_pps: 5.025004791520295
        page_paging_ps: 9.018348186070783
        load1min: 5.637376656633329
        network_rx_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        cpu_util: 6.027456183070403
        context_switch_ps: 0.8008281904610115
        network_rx_error_pps: 4.965218492984954
        network_rx_drop_pps: 1.1730742509559433
        load15min: 5.962133916683182
        mem_usage_percent: 7.061401241503109
        meta_elasticsearch_used_kbyte: 3.616076749251911
        interrupts_ps: 1.4658129805029452
        meta_prometheus_used_kbyte: 1.0246457001441578
        network_tx_bandwidth_kbyte: 9.965781217890562
        meta_log_used_kbyte: 4.145608029883936
        meta_etcd_used_kbyte: 2.027123023002322
        network_tx_drop_pps: 9.369310271410669
      - network_tx_error_pps: 6.683562403749608
        meta_mon_used_kbyte: 7.386281948385884
        meta_postgres_used_kbyte: 1.2315135367772556
        network_drop_pps: 1.4894159098541704
        network_tx_pps: 8.762042012749001
        load5min: 2.3021358869347655
        meta_docker_used_kbyte: 9.301444243932576
        network_error_pps: 6.84685269835264
        network_rx_pps: 5.025004791520295
        page_paging_ps: 9.018348186070783
        load1min: 5.637376656633329
        network_rx_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        cpu_util: 6.027456183070403
        context_switch_ps: 0.8008281904610115
        network_rx_error_pps: 4.965218492984954
        network_rx_drop_pps: 1.1730742509559433
        load15min: 5.962133916683182
        mem_usage_percent: 7.061401241503109
        meta_elasticsearch_used_kbyte: 3.616076749251911
        interrupts_ps: 1.4658129805029452
        meta_prometheus_used_kbyte: 1.0246457001441578
        network_tx_bandwidth_kbyte: 9.965781217890562
        meta_log_used_kbyte: 4.145608029883936
        meta_etcd_used_kbyte: 2.027123023002322
        network_tx_drop_pps: 9.369310271410669
  HostStat:
    type: "object"
    properties:
      context_switch_ps:
        type: "number"
        format: "double"
      cpu_util:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      interrupts_ps:
        type: "number"
        format: "double"
      load15min:
        type: "number"
        format: "double"
      load1min:
        type: "number"
        format: "double"
      load5min:
        type: "number"
        format: "double"
      mem_usage_percent:
        type: "number"
        format: "double"
      meta_docker_used_kbyte:
        type: "number"
        format: "double"
      meta_elasticsearch_used_kbyte:
        type: "number"
        format: "double"
      meta_etcd_used_kbyte:
        type: "number"
        format: "double"
      meta_log_used_kbyte:
        type: "number"
        format: "double"
      meta_mon_used_kbyte:
        type: "number"
        format: "double"
      meta_postgres_used_kbyte:
        type: "number"
        format: "double"
      meta_prometheus_used_kbyte:
        type: "number"
        format: "double"
      network_drop_pps:
        type: "number"
        format: "double"
      network_error_pps:
        type: "number"
        format: "double"
      network_rx_bandwidth_kbyte:
        type: "number"
        format: "double"
      network_rx_drop_pps:
        type: "number"
        format: "double"
      network_rx_error_pps:
        type: "number"
        format: "double"
      network_rx_pps:
        type: "number"
        format: "double"
      network_tx_bandwidth_kbyte:
        type: "number"
        format: "double"
      network_tx_drop_pps:
        type: "number"
        format: "double"
      network_tx_error_pps:
        type: "number"
        format: "double"
      network_tx_pps:
        type: "number"
        format: "double"
      page_paging_ps:
        type: "number"
        format: "double"
    title: "HostStat"
    description: "HostStat define the host statistics"
    example:
      network_tx_error_pps: 6.683562403749608
      meta_mon_used_kbyte: 7.386281948385884
      meta_postgres_used_kbyte: 1.2315135367772556
      network_drop_pps: 1.4894159098541704
      network_tx_pps: 8.762042012749001
      load5min: 2.3021358869347655
      meta_docker_used_kbyte: 9.301444243932576
      network_error_pps: 6.84685269835264
      network_rx_pps: 5.025004791520295
      page_paging_ps: 9.018348186070783
      load1min: 5.637376656633329
      network_rx_bandwidth_kbyte: 7.457744773683766
      create: "2000-01-23T04:56:07.000+00:00"
      cpu_util: 6.027456183070403
      context_switch_ps: 0.8008281904610115
      network_rx_error_pps: 4.965218492984954
      network_rx_drop_pps: 1.1730742509559433
      load15min: 5.962133916683182
      mem_usage_percent: 7.061401241503109
      meta_elasticsearch_used_kbyte: 3.616076749251911
      interrupts_ps: 1.4658129805029452
      meta_prometheus_used_kbyte: 1.0246457001441578
      network_tx_bandwidth_kbyte: 9.965781217890562
      meta_log_used_kbyte: 4.145608029883936
      meta_etcd_used_kbyte: 2.027123023002322
      network_tx_drop_pps: 9.369310271410669
  HostUpdateReq:
    type: "object"
    required:
    - "host"
    properties:
      host:
        $ref: "#/definitions/HostUpdateReq_Host"
    title: "HostUpdateReq"
    example:
      host:
        roles:
        - "roles"
        - "roles"
        description: "description"
  HostUpdateReq_Host:
    type: "object"
    properties:
      description:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
    title: "HostUpdateReq_Host"
    example:
      roles:
      - "roles"
      - "roles"
      description: "description"
  HostValidator:
    type: "object"
    properties:
      admin_ip:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      gateway_ips:
        type: "array"
        items:
          type: "string"
      host_roles:
        type: "array"
        items:
          type: "string"
      host_type:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      private_ip:
        type: "string"
      public_ip:
        type: "string"
      report:
        type: "object"
        properties: {}
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "HostValidator"
    description: "HostValidator defines the validator for host"
    example:
      gateway_ips:
      - "gateway_ips"
      - "gateway_ips"
      public_ip: "public_ip"
      host_roles:
      - "host_roles"
      - "host_roles"
      report: "{}"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      admin_ip: "admin_ip"
      id: 0
      host_type: "host_type"
      private_ip: "private_ip"
      status: "status"
  HostValidatorCreateReq:
    type: "object"
    properties:
      host_validator:
        $ref: "#/definitions/HostValidatorCreateReq_Validator"
    title: "HostValidatorCreateReq"
    example:
      host_validator:
        gateway_ips:
        - "gateway_ips"
        - "gateway_ips"
        public_ip: "public_ip"
        host_roles:
        - "host_roles"
        - "host_roles"
        admin_ip: "admin_ip"
        host_type: "host_type"
        private_ip: "private_ip"
  HostValidatorCreateReq_Validator:
    type: "object"
    required:
    - "admin_ip"
    - "host_roles"
    - "host_type"
    properties:
      admin_ip:
        type: "string"
      gateway_ips:
        type: "array"
        items:
          type: "string"
      host_roles:
        type: "array"
        items:
          type: "string"
      host_type:
        type: "string"
      private_ip:
        type: "string"
      public_ip:
        type: "string"
    title: "HostValidatorCreateReq_Validator"
    example:
      gateway_ips:
      - "gateway_ips"
      - "gateway_ips"
      public_ip: "public_ip"
      host_roles:
      - "host_roles"
      - "host_roles"
      admin_ip: "admin_ip"
      host_type: "host_type"
      private_ip: "private_ip"
  HostValidatorResp:
    type: "object"
    properties:
      host_validator:
        $ref: "#/definitions/HostValidator"
    title: "HostValidatorResp"
    example:
      host_validator:
        gateway_ips:
        - "gateway_ips"
        - "gateway_ips"
        public_ip: "public_ip"
        host_roles:
        - "host_roles"
        - "host_roles"
        report: "{}"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        admin_ip: "admin_ip"
        id: 0
        host_type: "host_type"
        private_ip: "private_ip"
        status: "status"
  Host_Nestview:
    type: "object"
    required:
    - "admin_ip"
    properties:
      admin_ip:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "Host_Nestview"
    example:
      name: "name"
      admin_ip: "admin_ip"
      id: 0
  HostsResp:
    type: "object"
    required:
    - "hosts"
    properties:
      hosts:
        type: "array"
        description: "hosts"
        items:
          $ref: "#/definitions/HostRecord"
    title: "HostsResp"
    example:
      hosts:
      - ""
      - ""
  IdentityPlatform:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating identity platform"
      enabled:
        type: "boolean"
        description: "enable the identity platform or not"
      failure_num:
        type: "integer"
        format: "int64"
        description: "num of failed authorization"
      id:
        type: "integer"
        format: "int64"
        description: "id of identity platform"
      key:
        type: "string"
        description: "secret key of identity platform"
      name:
        type: "string"
        description: "name of identity platform"
      success_num:
        type: "integer"
        format: "int64"
        description: "num of successful authorization"
      type:
        type: "string"
        description: "type of identity platform"
      update:
        type: "string"
        format: "date-time"
        description: "time of updating identity platform"
      url:
        type: "string"
        description: "url of identity platform"
      uuid:
        type: "string"
    title: "IdentityPlatform"
    description: "IdentityPlatform defines different platforms for auth"
    example:
      failure_num: 0
      success_num: 1
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 6
      type: "type"
      uuid: "uuid"
      enabled: true
      key: "key"
      url: "url"
  IdentityPlatformCreateReq:
    type: "object"
    properties:
      identity_platform:
        $ref: "#/definitions/IdentityPlatformCreateReq_Platform"
    title: "IdentityPlatformCreateReq"
    example:
      identity_platform:
        name: "name"
        type: "type"
        enabled: true
        url: "url"
  IdentityPlatformCreateReq_Platform:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      name:
        type: "string"
        description: "name of identity platform"
      type:
        type: "string"
        description: "type of identity platform"
      url:
        type: "string"
    title: "IdentityPlatformCreateReq_Platform"
    example:
      name: "name"
      type: "type"
      enabled: true
      url: "url"
  IdentityPlatformResp:
    type: "object"
    properties:
      identity_platform:
        description: "identity platform"
        $ref: "#/definitions/IdentityPlatform"
    title: "IdentityPlatformResp"
    example:
      identity_platform:
        failure_num: 0
        success_num: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        type: "type"
        uuid: "uuid"
        enabled: true
        key: "key"
        url: "url"
  IdentityPlatformUpdateReq:
    type: "object"
    properties:
      identity_platform:
        $ref: "#/definitions/IdentityPlatformUpdateReq_Platform"
    title: "IdentityPlatformUpdateReq"
    example:
      identity_platform:
        name: "name"
        enabled: true
        url: "url"
  IdentityPlatformUpdateReq_Platform:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      name:
        type: "string"
        description: "name of identity platform"
      url:
        type: "string"
    title: "IdentityPlatformUpdateReq_Platform"
    example:
      name: "name"
      enabled: true
      url: "url"
  IdentityPlatform_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id of identity platform"
      name:
        type: "string"
        description: "name of identity platform"
    title: "IdentityPlatform_Nestview"
    example:
      name: "name"
      id: 6
  IdentityPlatformsResp:
    type: "object"
    properties:
      identity_platforms:
        type: "array"
        description: "identity platforms"
        items:
          $ref: "#/definitions/IdentityPlatform"
    title: "IdentityPlatformsResp"
    example:
      identity_platforms:
      - failure_num: 0
        success_num: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        type: "type"
        uuid: "uuid"
        enabled: true
        key: "key"
        url: "url"
      - failure_num: 0
        success_num: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        type: "type"
        uuid: "uuid"
        enabled: true
        key: "key"
        url: "url"
  License:
    type: "object"
    properties:
      active:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      customer:
        type: "string"
      expired_time:
        type: "string"
        format: "date-time"
      features:
        type: "array"
        items:
          $ref: "#/definitions/ProductFeature"
      id:
        type: "integer"
        format: "int64"
      limits:
        $ref: "#/definitions/ProductLimits"
      product_info:
        $ref: "#/definitions/ProductInfo"
      services:
        type: "array"
        items:
          $ref: "#/definitions/ProductService"
      signed_time:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      used_capacity:
        type: "integer"
        format: "int64"
      used_host_num:
        type: "integer"
        format: "int64"
      uuid:
        type: "string"
      version:
        type: "string"
        description: "v2, load from license info"
    title: "License"
    description: "License is used to manage backend license @grpc-models-proto"
    example:
      signed_time: "2000-01-23T04:56:07.000+00:00"
      used_capacity: 6
      used_host_num: 1
      active: true
      expired_time: "2000-01-23T04:56:07.000+00:00"
      product_info:
        series: "series"
        model: "model"
      services:
      - start_time: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        expired_time: "2000-01-23T04:56:07.000+00:00"
      - start_time: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        expired_time: "2000-01-23T04:56:07.000+00:00"
      uuid: "uuid"
      version: "version"
      features:
      - functions:
        - "functions"
        - "functions"
        name: "name"
        protocols:
        - "protocols"
        - "protocols"
        limits:
          key: "limits"
      - functions:
        - "functions"
        - "functions"
        name: "name"
        protocols:
        - "protocols"
        - "protocols"
        limits:
          key: "limits"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      limits: {}
      customer: "customer"
      status: "status"
  LicenseResp:
    type: "object"
    required:
    - "license"
    properties:
      license:
        description: "license"
        $ref: "#/definitions/License"
    title: "LicenseResp"
    example:
      license:
        signed_time: "2000-01-23T04:56:07.000+00:00"
        used_capacity: 6
        used_host_num: 1
        active: true
        expired_time: "2000-01-23T04:56:07.000+00:00"
        product_info:
          series: "series"
          model: "model"
        services:
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        version: "version"
        features:
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        limits: {}
        customer: "customer"
        status: "status"
  LicensesResp:
    type: "object"
    required:
    - "licenses"
    properties:
      licenses:
        type: "array"
        description: "licenses"
        items:
          $ref: "#/definitions/License"
    title: "LicensesResp"
    example:
      licenses:
      - signed_time: "2000-01-23T04:56:07.000+00:00"
        used_capacity: 6
        used_host_num: 1
        active: true
        expired_time: "2000-01-23T04:56:07.000+00:00"
        product_info:
          series: "series"
          model: "model"
        services:
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        version: "version"
        features:
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        limits: {}
        customer: "customer"
        status: "status"
      - signed_time: "2000-01-23T04:56:07.000+00:00"
        used_capacity: 6
        used_host_num: 1
        active: true
        expired_time: "2000-01-23T04:56:07.000+00:00"
        product_info:
          series: "series"
          model: "model"
        services:
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        - start_time: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          expired_time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        version: "version"
        features:
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        - functions:
          - "functions"
          - "functions"
          name: "name"
          protocols:
          - "protocols"
          - "protocols"
          limits:
            key: "limits"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        limits: {}
        customer: "customer"
        status: "status"
  LifecycleExpiration:
    type: "object"
    title: "LifecycleExpiration"
    description: "LifecycleExpiration is the details of expiration of LifecycleRule"
  LifecycleRule:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      expiration:
        $ref: "#/definitions/LifecycleExpiration"
      name:
        type: "string"
      prefix:
        type: "string"
      transitions:
        type: "array"
        items:
          $ref: "#/definitions/LifecycleTransition"
    title: "LifecycleRule"
    description: "LifecycleRule is the details of object storage lifecycle rule"
    example:
      prefix: "prefix"
      name: "name"
      expiration: {}
      transitions:
      - storage_class: "storage_class"
        type: "type"
      - storage_class: "storage_class"
        type: "type"
      enabled: true
  LifecycleTransition:
    type: "object"
    required:
    - "storage_class"
    - "type"
    properties:
      storage_class:
        type: "string"
      type:
        type: "string"
    title: "LifecycleTransition"
    description: "LifecycleTransition is the details of transition of LifecycleRule"
    example:
      storage_class: "storage_class"
      type: "type"
  Lun:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      lun_id:
        type: "integer"
        format: "int64"
      nestview:
        $ref: "#/definitions/AccessPath"
      volume:
        $ref: "#/definitions/Volume_Nestview"
    title: "Lun"
    description: "Lun defines lun id"
    example:
      nestview:
        hidden: true
        block_volume_num: 0
        iqn: "iqn"
        client_group_num: 6
        description: "description"
        tname: "tname"
        update: "2000-01-23T04:56:07.000+00:00"
        tsecret: "tsecret"
        type: "type"
        protection_domain:
          name: "name"
          id: 5
        vip_group_num: 5
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        chap: true
        id: 1
        action_status: "action_status"
        status: "status"
      volume:
        original_name: "original_name"
        name: "name"
        id: 9
      create: "2000-01-23T04:56:07.000+00:00"
      lun_id: 6
      id: 0
  LunResp:
    type: "object"
    required:
    - "lun"
    properties:
      lun:
        description: "lun"
        $ref: "#/definitions/Lun"
    title: "LunResp"
    example:
      lun:
        nestview:
          hidden: true
          block_volume_num: 0
          iqn: "iqn"
          client_group_num: 6
          description: "description"
          tname: "tname"
          update: "2000-01-23T04:56:07.000+00:00"
          tsecret: "tsecret"
          type: "type"
          protection_domain:
            name: "name"
            id: 5
          vip_group_num: 5
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          chap: true
          id: 1
          action_status: "action_status"
          status: "status"
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        create: "2000-01-23T04:56:07.000+00:00"
        lun_id: 6
        id: 0
  Lun_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      lun_id:
        type: "integer"
        format: "int64"
    title: "Lun_Nestview"
  LunsResp:
    type: "object"
    required:
    - "luns"
    properties:
      luns:
        type: "array"
        description: "luns"
        items:
          $ref: "#/definitions/Lun"
    title: "LunsResp"
    example:
      luns:
      - nestview:
          hidden: true
          block_volume_num: 0
          iqn: "iqn"
          client_group_num: 6
          description: "description"
          tname: "tname"
          update: "2000-01-23T04:56:07.000+00:00"
          tsecret: "tsecret"
          type: "type"
          protection_domain:
            name: "name"
            id: 5
          vip_group_num: 5
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          chap: true
          id: 1
          action_status: "action_status"
          status: "status"
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        create: "2000-01-23T04:56:07.000+00:00"
        lun_id: 6
        id: 0
      - nestview:
          hidden: true
          block_volume_num: 0
          iqn: "iqn"
          client_group_num: 6
          description: "description"
          tname: "tname"
          update: "2000-01-23T04:56:07.000+00:00"
          tsecret: "tsecret"
          type: "type"
          protection_domain:
            name: "name"
            id: 5
          vip_group_num: 5
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          chap: true
          id: 1
          action_status: "action_status"
          status: "status"
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        create: "2000-01-23T04:56:07.000+00:00"
        lun_id: 6
        id: 0
  MappingGroup:
    type: "object"
    properties:
      access_path:
        $ref: "#/definitions/AccessPath_Nestview"
      client_group:
        $ref: "#/definitions/ClientGroup_Nestview"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "MappingGroup"
    description: "MappingGroup defines the mapping group of volumes and client groups"
    example:
      client_group:
        name: "name"
        id: 5
      access_path:
        name: "name"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 6
      status: "status"
  MappingGroupAddVolumesReq:
    type: "object"
    required:
    - "block_volume_ids"
    properties:
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "MappingGroupAddVolumesReq"
    example:
      block_volume_ids:
      - 0
      - 0
  MappingGroupCreateReq:
    type: "object"
    required:
    - "mapping_group"
    properties:
      mapping_group:
        $ref: "#/definitions/MappingGroupReq"
    title: "MappingGroupCreateReq"
    example:
      mapping_group:
        client_group_id: 5
        block_volume_ids:
        - 1
        - 1
        access_path_id: 6
  MappingGroupRemoveVolumesReq:
    type: "object"
    required:
    - "block_volume_ids"
    properties:
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "MappingGroupRemoveVolumesReq"
    example:
      block_volume_ids:
      - 0
      - 0
  MappingGroupReq:
    type: "object"
    properties:
      access_path_id:
        type: "integer"
        format: "int64"
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      client_group_id:
        type: "integer"
        format: "int64"
    title: "MappingGroupReq"
    example:
      client_group_id: 5
      block_volume_ids:
      - 1
      - 1
      access_path_id: 6
  MappingGroupResp:
    type: "object"
    required:
    - "mapping_group"
    properties:
      mapping_group:
        $ref: "#/definitions/MappingGroup"
    title: "MappingGroupResp"
    example:
      mapping_group:
        client_group:
          name: "name"
          id: 5
        access_path:
          name: "name"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
  MappingGroupUpdateClientGroupReq:
    type: "object"
    required:
    - "client_group_id"
    properties:
      client_group_id:
        type: "integer"
        format: "int64"
    title: "MappingGroupUpdateClientGroupReq"
    example:
      client_group_id: 0
  MappingGroupUpdateReq:
    type: "object"
    required:
    - "mapping_group"
    properties:
      mapping_group:
        $ref: "#/definitions/MappingGroupUpdateReq_MappingGroup"
    title: "MappingGroupUpdateReq"
    example:
      mapping_group:
        block_volume_ids:
        - 0
        - 0
  MappingGroupUpdateReq_MappingGroup:
    type: "object"
    properties:
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "MappingGroupUpdateReq_MappingGroup"
    example:
      block_volume_ids:
      - 0
      - 0
  MappingGroupsResp:
    type: "object"
    required:
    - "mapping_groups"
    properties:
      mapping_groups:
        type: "array"
        items:
          $ref: "#/definitions/MappingGroup"
    title: "MappingGroupsResp"
    example:
      mapping_groups:
      - client_group:
          name: "name"
          id: 5
        access_path:
          name: "name"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
      - client_group:
          name: "name"
          id: 5
        access_path:
          name: "name"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
  MultiObjectStorageBucketsSamplesResp:
    type: "object"
    properties:
      os_buckets_samples:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageBucketSamplesElem"
    title: "MultiObjectStorageBucketsSamplesResp"
    example:
      os_buckets_samples:
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - ""
        - ""
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - ""
        - ""
  MultiS3LoadBalancersSamplesResp:
    type: "object"
    properties:
      s3_load_balancers_samples:
        type: "array"
        items:
          $ref: "#/definitions/S3LoadBalancerSamplesElem"
    title: "MultiS3LoadBalancersSamplesResp"
    example:
      s3_load_balancers_samples:
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - up_bandwidth_kbyte: 9.301444243932576
          down_bandwidth_kbyte: 5.962133916683182
          success_requests: 7.061401241503109
          mem_usage_percent: 2.3021358869347655
          create: "2000-01-23T04:56:07.000+00:00"
          active_connections: 6.027456183070403
          cpu_util: 1.4658129805029452
          failure_requests: 5.637376656633329
        - up_bandwidth_kbyte: 9.301444243932576
          down_bandwidth_kbyte: 5.962133916683182
          success_requests: 7.061401241503109
          mem_usage_percent: 2.3021358869347655
          create: "2000-01-23T04:56:07.000+00:00"
          active_connections: 6.027456183070403
          cpu_util: 1.4658129805029452
          failure_requests: 5.637376656633329
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - up_bandwidth_kbyte: 9.301444243932576
          down_bandwidth_kbyte: 5.962133916683182
          success_requests: 7.061401241503109
          mem_usage_percent: 2.3021358869347655
          create: "2000-01-23T04:56:07.000+00:00"
          active_connections: 6.027456183070403
          cpu_util: 1.4658129805029452
          failure_requests: 5.637376656633329
        - up_bandwidth_kbyte: 9.301444243932576
          down_bandwidth_kbyte: 5.962133916683182
          success_requests: 7.061401241503109
          mem_usage_percent: 2.3021358869347655
          create: "2000-01-23T04:56:07.000+00:00"
          active_connections: 6.027456183070403
          cpu_util: 1.4658129805029452
          failure_requests: 5.637376656633329
  MultiVolumesSamplesResp:
    type: "object"
    properties:
      block_volumes_samples:
        type: "array"
        items:
          $ref: "#/definitions/VolumeSamplesElem"
    title: "MultiVolumesSamplesResp"
    example:
      block_volumes_samples:
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - migrate_write_iops: 1.1730742509559433
          FailedTask:
            abort: 7.061401241503109
            busy: 9.301444243932576
            check_cond: 3.616076749251911
            resv_conflict: 2.027123023002322
          total_bandwidth_kbyte: 1.284659006116532
          write_latency_us: 5.944895607614016
          total_iops: 2.8841621266687802
          read_latency_us: 6.965117697638846
          read_iops: 3.5571952270680973
          migrate_write_latency_us: 4.965218492984954
          non_io_task:
            ats: 5.025004791520295
            other: 9.965781217890562
            write_same: 6.683562403749608
            xcopy: 8.762042012749001
            unmap: 9.369310271410669
          io_size:
            8_32kbyte: 1.4894159098541704
            0_4kbyte: 4.145608029883936
            32_64kbyte: 7.386281948385884
            4_8kbyte: 1.2315135367772556
            above_512kbyte: 6.84685269835264
            64_512kbyte: 1.0246457001441578
          read_bandwidth_kbyte: 6.438423552598547
          write_bandwidth_kbyte: 6.778324963048013
          migrate_write_bandwidth_kbyte: 7.457744773683766
          create: "2000-01-23T04:56:07.000+00:00"
          write_iops: 6.878052220127876
          queue_depth: 9.018348186070783
        - migrate_write_iops: 1.1730742509559433
          FailedTask:
            abort: 7.061401241503109
            busy: 9.301444243932576
            check_cond: 3.616076749251911
            resv_conflict: 2.027123023002322
          total_bandwidth_kbyte: 1.284659006116532
          write_latency_us: 5.944895607614016
          total_iops: 2.8841621266687802
          read_latency_us: 6.965117697638846
          read_iops: 3.5571952270680973
          migrate_write_latency_us: 4.965218492984954
          non_io_task:
            ats: 5.025004791520295
            other: 9.965781217890562
            write_same: 6.683562403749608
            xcopy: 8.762042012749001
            unmap: 9.369310271410669
          io_size:
            8_32kbyte: 1.4894159098541704
            0_4kbyte: 4.145608029883936
            32_64kbyte: 7.386281948385884
            4_8kbyte: 1.2315135367772556
            above_512kbyte: 6.84685269835264
            64_512kbyte: 1.0246457001441578
          read_bandwidth_kbyte: 6.438423552598547
          write_bandwidth_kbyte: 6.778324963048013
          migrate_write_bandwidth_kbyte: 7.457744773683766
          create: "2000-01-23T04:56:07.000+00:00"
          write_iops: 6.878052220127876
          queue_depth: 9.018348186070783
      - paging:
          duration: 1
          next: "next"
          period: "period"
          offset: 5
          total_count: 2
          count: 6
          duration_end: "2000-01-23T04:56:07.000+00:00"
          limit: 5
          truncated: true
          duration_begin: "2000-01-23T04:56:07.000+00:00"
        id: 0
        samples:
        - migrate_write_iops: 1.1730742509559433
          FailedTask:
            abort: 7.061401241503109
            busy: 9.301444243932576
            check_cond: 3.616076749251911
            resv_conflict: 2.027123023002322
          total_bandwidth_kbyte: 1.284659006116532
          write_latency_us: 5.944895607614016
          total_iops: 2.8841621266687802
          read_latency_us: 6.965117697638846
          read_iops: 3.5571952270680973
          migrate_write_latency_us: 4.965218492984954
          non_io_task:
            ats: 5.025004791520295
            other: 9.965781217890562
            write_same: 6.683562403749608
            xcopy: 8.762042012749001
            unmap: 9.369310271410669
          io_size:
            8_32kbyte: 1.4894159098541704
            0_4kbyte: 4.145608029883936
            32_64kbyte: 7.386281948385884
            4_8kbyte: 1.2315135367772556
            above_512kbyte: 6.84685269835264
            64_512kbyte: 1.0246457001441578
          read_bandwidth_kbyte: 6.438423552598547
          write_bandwidth_kbyte: 6.778324963048013
          migrate_write_bandwidth_kbyte: 7.457744773683766
          create: "2000-01-23T04:56:07.000+00:00"
          write_iops: 6.878052220127876
          queue_depth: 9.018348186070783
        - migrate_write_iops: 1.1730742509559433
          FailedTask:
            abort: 7.061401241503109
            busy: 9.301444243932576
            check_cond: 3.616076749251911
            resv_conflict: 2.027123023002322
          total_bandwidth_kbyte: 1.284659006116532
          write_latency_us: 5.944895607614016
          total_iops: 2.8841621266687802
          read_latency_us: 6.965117697638846
          read_iops: 3.5571952270680973
          migrate_write_latency_us: 4.965218492984954
          non_io_task:
            ats: 5.025004791520295
            other: 9.965781217890562
            write_same: 6.683562403749608
            xcopy: 8.762042012749001
            unmap: 9.369310271410669
          io_size:
            8_32kbyte: 1.4894159098541704
            0_4kbyte: 4.145608029883936
            32_64kbyte: 7.386281948385884
            4_8kbyte: 1.2315135367772556
            above_512kbyte: 6.84685269835264
            64_512kbyte: 1.0246457001441578
          read_bandwidth_kbyte: 6.438423552598547
          write_bandwidth_kbyte: 6.778324963048013
          migrate_write_bandwidth_kbyte: 7.457744773683766
          create: "2000-01-23T04:56:07.000+00:00"
          write_iops: 6.878052220127876
          queue_depth: 9.018348186070783
  NFSGateway:
    type: "object"
    properties:
      bucket_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      gateway_ip:
        type: "string"
      gateway_name:
        type: "string"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      mount_clients:
        type: "string"
      mount_num:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "NFSGateway"
    description: "NFSGateway defines nfs gateway @grpc-models-proto"
  NFSGatewayActionReq:
    type: "object"
    required:
    - "nfs_gateway"
    properties:
      nfs_gateway:
        $ref: "#/definitions/NFSGatewayActionReq_NFSGateway"
    title: "NFSGatewayActionReq"
  NFSGatewayActionReq_NFSGateway:
    type: "object"
    required:
    - "action"
    properties:
      action:
        type: "string"
    title: "NFSGatewayActionReq_NFSGateway"
  NFSGatewayBucketMap:
    type: "object"
    properties:
      action_status:
        type: "string"
      bucket:
        $ref: "#/definitions/ObjectStorageBucket_Nestview"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      key:
        $ref: "#/definitions/ObjectStorageKey_Nestview"
      mount_clients:
        type: "string"
      mount_num:
        type: "integer"
        format: "int64"
      nfs_gateway:
        $ref: "#/definitions/NFSGateway_Nestview"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "NFSGatewayBucketMap"
    description: "NFSGatewayBucketMap defines nfs gateway bucket map @grpc-models-proto"
    example:
      bucket:
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        name: "name"
        id: 0
      mount_clients: "mount_clients"
      mount_num: 5
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 1
      key:
        id: 5
      action_status: "action_status"
      nfs_gateway:
        name: "name"
        id: 2
      status: "status"
  NFSGatewayBucketMapResp:
    type: "object"
    required:
    - "nfs_gateway_bucket_map"
    properties:
      nfs_gateway_bucket_map:
        description: "map of nfs gateway and bucket"
        $ref: "#/definitions/NFSGatewayBucketMap"
    title: "NFSGatewayBucketMapResp"
    example:
      nfs_gateway_bucket_map:
        bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        mount_clients: "mount_clients"
        mount_num: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        key:
          id: 5
        action_status: "action_status"
        nfs_gateway:
          name: "name"
          id: 2
        status: "status"
  NFSGatewayBucketMapUpdateReq:
    type: "object"
    required:
    - "nfs_gateway_bucket_map"
    properties:
      nfs_gateway_bucket_map:
        $ref: "#/definitions/NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap"
    title: "NFSGatewayBucketMapUpdateReq"
  NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap:
    type: "object"
    properties:
      key_id:
        type: "integer"
        format: "int64"
    title: "NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap"
  NFSGatewayBucketMapsResp:
    type: "object"
    required:
    - "nfs_gateway_bucket_maps"
    properties:
      nfs_gateway_bucket_maps:
        type: "array"
        description: "maps of nfs gateway and bucket"
        items:
          $ref: "#/definitions/NFSGatewayBucketMap"
    title: "NFSGatewayBucketMapsResp"
    example:
      nfs_gateway_bucket_maps:
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        mount_clients: "mount_clients"
        mount_num: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        key:
          id: 5
        action_status: "action_status"
        nfs_gateway:
          name: "name"
          id: 2
        status: "status"
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        mount_clients: "mount_clients"
        mount_num: 5
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        key:
          id: 5
        action_status: "action_status"
        nfs_gateway:
          name: "name"
          id: 2
        status: "status"
  NFSGatewayCreateReq:
    type: "object"
    required:
    - "nfs_gateway"
    properties:
      nfs_gateway:
        $ref: "#/definitions/NFSGatewayCreateReq_NFSGateway"
    title: "NFSGatewayCreateReq"
  NFSGatewayCreateReq_NFSGateway:
    type: "object"
    required:
    - "description"
    - "host_id"
    - "name"
    - "port"
    properties:
      description:
        type: "string"
      gateway_ip:
        type: "string"
      host_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
    title: "NFSGatewayCreateReq_NFSGateway"
  NFSGatewayRecord:
    title: "NFSGatewayRecord"
    allOf:
    - $ref: "#/definitions/NFSGateway"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/NFSGatewayStat"
    description: "NFSGatewayRecord combine NFSGateway and NFSGatewayStat as API response"
  NFSGatewayResp:
    type: "object"
    required:
    - "nfs_gateway"
    properties:
      nfs_gateway:
        description: "nfs gateway"
        $ref: "#/definitions/NFSGatewayRecord"
    title: "NFSGatewayResp"
    example:
      nfs_gateway: ""
  NFSGatewaySamplesResp:
    type: "object"
    required:
    - "nfs_gateway_samples"
    properties:
      nfs_gateway_samples:
        type: "array"
        description: "nfs gateway samples"
        items:
          $ref: "#/definitions/NFSGatewayStat"
    title: "NFSGatewaySamplesResp"
    example:
      nfs_gateway_samples:
      - up_bandwidth_kbyte: 2.3021358869347655
        up_ops: 9.301444243932576
        down_bandwidth_kbyte: 6.027456183070403
        down_ops: 5.962133916683182
        up_latency_us: 7.061401241503109
        mem_usage_percent: 5.637376656633329
        create: "2000-01-23T04:56:07.000+00:00"
        cpu_util: 0.8008281904610115
        down_latency_us: 1.4658129805029452
      - up_bandwidth_kbyte: 2.3021358869347655
        up_ops: 9.301444243932576
        down_bandwidth_kbyte: 6.027456183070403
        down_ops: 5.962133916683182
        up_latency_us: 7.061401241503109
        mem_usage_percent: 5.637376656633329
        create: "2000-01-23T04:56:07.000+00:00"
        cpu_util: 0.8008281904610115
        down_latency_us: 1.4658129805029452
  NFSGatewayStat:
    type: "object"
    properties:
      cpu_util:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      down_bandwidth_kbyte:
        type: "number"
        format: "double"
      down_latency_us:
        type: "number"
        format: "double"
      down_ops:
        type: "number"
        format: "double"
      mem_usage_percent:
        type: "number"
        format: "double"
      up_bandwidth_kbyte:
        type: "number"
        format: "double"
      up_latency_us:
        type: "number"
        format: "double"
      up_ops:
        type: "number"
        format: "double"
    title: "NFSGatewayStat"
    description: "NFSGatewayStat defines nfs gateway stat"
    example:
      up_bandwidth_kbyte: 2.3021358869347655
      up_ops: 9.301444243932576
      down_bandwidth_kbyte: 6.027456183070403
      down_ops: 5.962133916683182
      up_latency_us: 7.061401241503109
      mem_usage_percent: 5.637376656633329
      create: "2000-01-23T04:56:07.000+00:00"
      cpu_util: 0.8008281904610115
      down_latency_us: 1.4658129805029452
  NFSGatewayUpdateReq:
    type: "object"
    required:
    - "nfs_gateway"
    properties:
      nfs_gateway:
        $ref: "#/definitions/NFSGatewayUpdateReq_NFSGateway"
    title: "NFSGatewayUpdateReq"
  NFSGatewayUpdateReq_NFSGateway:
    type: "object"
    properties:
      description:
        type: "string"
      name:
        type: "string"
    title: "NFSGatewayUpdateReq_NFSGateway"
  NFSGateway_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "NFSGateway_Nestview"
    example:
      name: "name"
      id: 2
  NFSGatewaysResp:
    type: "object"
    required:
    - "nfs_gateways"
    properties:
      nfs_gateways:
        type: "array"
        description: "nfs gateways"
        items:
          $ref: "#/definitions/NFSGatewayRecord"
    title: "NFSGatewaysResp"
    example:
      nfs_gateways:
      - ""
      - ""
  NetworkAddress:
    type: "object"
    properties:
      available:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
      network_interface:
        $ref: "#/definitions/NetworkInterface_Nestview"
      roles:
        type: "array"
        items:
          type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "NetworkAddress"
    description: "NetworkAddress defines model of network address @grpc-models-proto"
    example:
      ip: "ip"
      roles:
      - "roles"
      - "roles"
      available: true
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      mask: 6
      network_interface:
        mac_address: "mac_address"
        name: "name"
        id: 1
  NetworkAddressResp:
    type: "object"
    properties:
      network_address:
        description: "network address record"
        $ref: "#/definitions/NetworkAddress"
    title: "NetworkAddressResp"
    example:
      network_address:
        ip: "ip"
        roles:
        - "roles"
        - "roles"
        available: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        mask: 6
        network_interface:
          mac_address: "mac_address"
          name: "name"
          id: 1
  NetworkAddress_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
    title: "NetworkAddress_Nestview"
    example:
      ip: "ip"
      id: 6
      mask: 1
  NetworkAddressesResp:
    type: "object"
    properties:
      network_addresses:
        type: "array"
        description: "network address records"
        items:
          $ref: "#/definitions/NetworkAddress"
    title: "NetworkAddressesResp"
    example:
      network_addresses:
      - ip: "ip"
        roles:
        - "roles"
        - "roles"
        available: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        mask: 6
        network_interface:
          mac_address: "mac_address"
          name: "name"
          id: 1
      - ip: "ip"
        roles:
        - "roles"
        - "roles"
        available: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        mask: 6
        network_interface:
          mac_address: "mac_address"
          name: "name"
          id: 1
  NetworkDiagnosesResp:
    type: "object"
    required:
    - "network_diagnoses"
    properties:
      network_diagnoses:
        type: "array"
        description: "network diagnoses"
        items:
          $ref: "#/definitions/NetworkDiagnosis"
    title: "NetworkDiagnosesResp"
    example:
      network_diagnoses:
      - diagnose_warning_num: 5
        diagnose_active_num: 0
        update: "2000-01-23T04:56:07.000+00:00"
        networks:
        - "networks"
        - "networks"
        diagnose_error_num: 6
        diagnosing_num: 5
        host_num: 2
        create: "2000-01-23T04:56:07.000+00:00"
        diagnose_num: 1
        progress: 3.616076749251911
        id: 7
        not_diagnose_num: 9
        status: "status"
      - diagnose_warning_num: 5
        diagnose_active_num: 0
        update: "2000-01-23T04:56:07.000+00:00"
        networks:
        - "networks"
        - "networks"
        diagnose_error_num: 6
        diagnosing_num: 5
        host_num: 2
        create: "2000-01-23T04:56:07.000+00:00"
        diagnose_num: 1
        progress: 3.616076749251911
        id: 7
        not_diagnose_num: 9
        status: "status"
  NetworkDiagnosis:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      diagnose_active_num:
        type: "integer"
        format: "int64"
      diagnose_error_num:
        type: "integer"
        format: "int64"
      diagnose_num:
        type: "integer"
        format: "int64"
      diagnose_warning_num:
        type: "integer"
        format: "int64"
      diagnosing_num:
        type: "integer"
        format: "int64"
      host_num:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      networks:
        type: "array"
        items:
          type: "string"
      not_diagnose_num:
        type: "integer"
        format: "int64"
      progress:
        type: "number"
        format: "double"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "NetworkDiagnosis"
    description: "NetworkDiagnosis defines model of network diagnosis"
    example:
      diagnose_warning_num: 5
      diagnose_active_num: 0
      update: "2000-01-23T04:56:07.000+00:00"
      networks:
      - "networks"
      - "networks"
      diagnose_error_num: 6
      diagnosing_num: 5
      host_num: 2
      create: "2000-01-23T04:56:07.000+00:00"
      diagnose_num: 1
      progress: 3.616076749251911
      id: 7
      not_diagnose_num: 9
      status: "status"
  NetworkDiagnosisCreateReq:
    type: "object"
    required:
    - "network_diagnosis"
    properties:
      network_diagnosis:
        $ref: "#/definitions/NetworkDiagnosisCreateReq_Diagnosis"
    title: "NetworkDiagnosisCreateReq"
    example:
      network_diagnosis:
        host_scope: "host_scope"
        host_ids:
        - 0
        - 0
        networks:
        - "networks"
        - "networks"
  NetworkDiagnosisCreateReq_Diagnosis:
    type: "object"
    required:
    - "host_ids"
    - "host_scope"
    - "networks"
    properties:
      host_ids:
        type: "array"
        description: "ids of host"
        items:
          type: "integer"
          format: "int64"
      host_scope:
        type: "string"
        description: "host scope"
      networks:
        type: "array"
        description: "network types"
        items:
          type: "string"
    title: "NetworkDiagnosisCreateReq_Diagnosis"
    example:
      host_scope: "host_scope"
      host_ids:
      - 0
      - 0
      networks:
      - "networks"
      - "networks"
  NetworkDiagnosisItem:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      dst_host:
        $ref: "#/definitions/Host_Nestview"
      dst_interface:
        type: "string"
      dst_ip:
        type: "string"
      dst_megabits:
        type: "integer"
        format: "int64"
      dst_type:
        type: "string"
      execute:
        type: "string"
        format: "date-time"
      finish:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      network_diagnosis:
        $ref: "#/definitions/NetworkDiagnosis_Nestview"
      networks:
        type: "array"
        items:
          type: "string"
      src_host:
        $ref: "#/definitions/Host_Nestview"
      src_interface:
        type: "string"
      src_ip:
        type: "string"
      src_megabits:
        type: "integer"
        format: "int64"
      src_type:
        type: "string"
      stat:
        $ref: "#/definitions/NetworkDiagnosisStat"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "NetworkDiagnosisItem"
    description: "NetworkDiagnosisItem defines model of network diagnosis item"
    example:
      src_interface: "src_interface"
      stat:
        recv_bytes: 3
        recv_pkgs: 2
        tcp_conn_errs: 1
        bandwidth: 5
        err_pkg_ratio: 7.061401241503109
        send_pkgs: 7
        tcp_segment_retrans: 1
        lost_pkg_ratio: 9.301444243932576
        send_bytes: 4
        coll_pkgs: 2
      update: "2000-01-23T04:56:07.000+00:00"
      network_diagnosis:
        id: 1
      src_host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      dst_interface: "dst_interface"
      message: "message"
      networks:
      - "networks"
      - "networks"
      execute: "2000-01-23T04:56:07.000+00:00"
      dst_ip: "dst_ip"
      src_ip: "src_ip"
      dst_type: "dst_type"
      create: "2000-01-23T04:56:07.000+00:00"
      dst_megabits: 0
      finish: "2000-01-23T04:56:07.000+00:00"
      id: 6
      src_type: "src_type"
      dst_host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      src_megabits: 5
      status: "status"
  NetworkDiagnosisItemsResp:
    type: "object"
    required:
    - "network_diagnosis_items"
    properties:
      network_diagnosis_items:
        type: "array"
        description: "network diagnosis items"
        items:
          $ref: "#/definitions/NetworkDiagnosisItem"
    title: "NetworkDiagnosisItemsResp"
    example:
      network_diagnosis_items:
      - src_interface: "src_interface"
        stat:
          recv_bytes: 3
          recv_pkgs: 2
          tcp_conn_errs: 1
          bandwidth: 5
          err_pkg_ratio: 7.061401241503109
          send_pkgs: 7
          tcp_segment_retrans: 1
          lost_pkg_ratio: 9.301444243932576
          send_bytes: 4
          coll_pkgs: 2
        update: "2000-01-23T04:56:07.000+00:00"
        network_diagnosis:
          id: 1
        src_host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        dst_interface: "dst_interface"
        message: "message"
        networks:
        - "networks"
        - "networks"
        execute: "2000-01-23T04:56:07.000+00:00"
        dst_ip: "dst_ip"
        src_ip: "src_ip"
        dst_type: "dst_type"
        create: "2000-01-23T04:56:07.000+00:00"
        dst_megabits: 0
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 6
        src_type: "src_type"
        dst_host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        src_megabits: 5
        status: "status"
      - src_interface: "src_interface"
        stat:
          recv_bytes: 3
          recv_pkgs: 2
          tcp_conn_errs: 1
          bandwidth: 5
          err_pkg_ratio: 7.061401241503109
          send_pkgs: 7
          tcp_segment_retrans: 1
          lost_pkg_ratio: 9.301444243932576
          send_bytes: 4
          coll_pkgs: 2
        update: "2000-01-23T04:56:07.000+00:00"
        network_diagnosis:
          id: 1
        src_host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        dst_interface: "dst_interface"
        message: "message"
        networks:
        - "networks"
        - "networks"
        execute: "2000-01-23T04:56:07.000+00:00"
        dst_ip: "dst_ip"
        src_ip: "src_ip"
        dst_type: "dst_type"
        create: "2000-01-23T04:56:07.000+00:00"
        dst_megabits: 0
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 6
        src_type: "src_type"
        dst_host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        src_megabits: 5
        status: "status"
  NetworkDiagnosisResp:
    type: "object"
    required:
    - "network_diagnosis"
    properties:
      network_diagnosis:
        description: "network diagnosis"
        $ref: "#/definitions/NetworkDiagnosis"
    title: "NetworkDiagnosisResp"
    example:
      network_diagnosis:
        diagnose_warning_num: 5
        diagnose_active_num: 0
        update: "2000-01-23T04:56:07.000+00:00"
        networks:
        - "networks"
        - "networks"
        diagnose_error_num: 6
        diagnosing_num: 5
        host_num: 2
        create: "2000-01-23T04:56:07.000+00:00"
        diagnose_num: 1
        progress: 3.616076749251911
        id: 7
        not_diagnose_num: 9
        status: "status"
  NetworkDiagnosisStat:
    type: "object"
    properties:
      bandwidth:
        type: "integer"
        format: "int64"
      coll_pkgs:
        type: "integer"
        format: "int64"
      err_pkg_ratio:
        type: "number"
        format: "double"
      lost_pkg_ratio:
        type: "number"
        format: "double"
      recv_bytes:
        type: "integer"
        format: "int64"
      recv_pkgs:
        type: "integer"
        format: "int64"
      send_bytes:
        type: "integer"
        format: "int64"
      send_pkgs:
        type: "integer"
        format: "int64"
      tcp_conn_errs:
        type: "integer"
        format: "int64"
      tcp_segment_retrans:
        type: "integer"
        format: "int64"
    title: "NetworkDiagnosisStat"
    description: "NetworkDiagnosisStat defines model of network diagnosis stat"
    example:
      recv_bytes: 3
      recv_pkgs: 2
      tcp_conn_errs: 1
      bandwidth: 5
      err_pkg_ratio: 7.061401241503109
      send_pkgs: 7
      tcp_segment_retrans: 1
      lost_pkg_ratio: 9.301444243932576
      send_bytes: 4
      coll_pkgs: 2
  NetworkDiagnosis_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "NetworkDiagnosis_Nestview"
    example:
      id: 1
  NetworkInterface:
    type: "object"
    properties:
      bonding_mode:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      link_detected:
        type: "boolean"
      mac_address:
        type: "string"
      master_network_interface:
        $ref: "#/definitions/NetworkInterface_Nestview"
      megabits:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      operstate:
        type: "string"
      type:
        type: "string"
        description: "ethernet or bond"
      update:
        type: "string"
        format: "date-time"
    title: "NetworkInterface"
    description: "NetworkInterface defines model of network interface @grpc-models-proto"
  NetworkInterfaceRecord:
    title: "NetworkInterfaceRecord"
    allOf:
    - $ref: "#/definitions/NetworkInterface"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/NetworkInterfaceStat"
    description: "NetworkInterfaceRecord combine NetworkInterface and NetworkInterfaceStat\
      \ as API\nresponse"
  NetworkInterfaceResp:
    type: "object"
    properties:
      network_interface:
        description: "network interface record"
        $ref: "#/definitions/NetworkInterfaceRecord"
    title: "NetworkInterfaceResp"
    example:
      network_interface: ""
  NetworkInterfaceSamplesResp:
    type: "object"
    properties:
      network_interface_samples:
        type: "array"
        items:
          $ref: "#/definitions/NetworkInterfaceStat"
    title: "NetworkInterfaceSamplesResp"
    example:
      network_interface_samples:
      - tx_pps: 2.027123023002322
        tx_bandwidth_kbyte: 7.061401241503109
        error_pps: 6.027456183070403
        rx_bandwidth_kbyte: 1.4658129805029452
        create: "2000-01-23T04:56:07.000+00:00"
        rx_drop_pps: 5.962133916683182
        rx_error_pps: 5.637376656633329
        rx_pps: 2.3021358869347655
        tx_error_pps: 3.616076749251911
        drop_pps: 0.8008281904610115
        tx_drop_pps: 9.301444243932576
      - tx_pps: 2.027123023002322
        tx_bandwidth_kbyte: 7.061401241503109
        error_pps: 6.027456183070403
        rx_bandwidth_kbyte: 1.4658129805029452
        create: "2000-01-23T04:56:07.000+00:00"
        rx_drop_pps: 5.962133916683182
        rx_error_pps: 5.637376656633329
        rx_pps: 2.3021358869347655
        tx_error_pps: 3.616076749251911
        drop_pps: 0.8008281904610115
        tx_drop_pps: 9.301444243932576
  NetworkInterfaceStat:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      drop_pps:
        type: "number"
        format: "double"
      error_pps:
        type: "number"
        format: "double"
      rx_bandwidth_kbyte:
        type: "number"
        format: "double"
      rx_drop_pps:
        type: "number"
        format: "double"
      rx_error_pps:
        type: "number"
        format: "double"
      rx_pps:
        type: "number"
        format: "double"
      tx_bandwidth_kbyte:
        type: "number"
        format: "double"
      tx_drop_pps:
        type: "number"
        format: "double"
      tx_error_pps:
        type: "number"
        format: "double"
      tx_pps:
        type: "number"
        format: "double"
    title: "NetworkInterfaceStat"
    description: "NetworkInterfaceStat define the statistics of network interface"
    example:
      tx_pps: 2.027123023002322
      tx_bandwidth_kbyte: 7.061401241503109
      error_pps: 6.027456183070403
      rx_bandwidth_kbyte: 1.4658129805029452
      create: "2000-01-23T04:56:07.000+00:00"
      rx_drop_pps: 5.962133916683182
      rx_error_pps: 5.637376656633329
      rx_pps: 2.3021358869347655
      tx_error_pps: 3.616076749251911
      drop_pps: 0.8008281904610115
      tx_drop_pps: 9.301444243932576
  NetworkInterface_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      mac_address:
        type: "string"
      name:
        type: "string"
    title: "NetworkInterface_Nestview"
    example:
      mac_address: "mac_address"
      name: "name"
      id: 1
  NetworkInterfacesResp:
    type: "object"
    properties:
      network_interfaces:
        type: "array"
        description: "network interface records"
        items:
          $ref: "#/definitions/NetworkInterfaceRecord"
    title: "NetworkInterfacesResp"
    example:
      network_interfaces:
      - ""
      - ""
  OSBucketAddReplicationPathsReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketAddReplicationPathsReq_Bucket"
    title: "OSBucketAddReplicationPathsReq"
  OSBucketAddReplicationPathsReq_Bucket:
    type: "object"
    properties:
      os_replication_path_uuids:
        type: "array"
        items:
          type: "string"
      os_replication_paths:
        type: "array"
        items:
          $ref: "#/definitions/OSReplicationPathReq"
    title: "OSBucketAddReplicationPathsReq_Bucket"
  OSBucketAddReplicationZonesReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketAddReplicationZonesReq_Bucket"
    title: "OSBucketAddReplicationZonesReq"
  OSBucketAddReplicationZonesReq_Bucket:
    type: "object"
    properties:
      os_replication_zone_uuids:
        type: "array"
        items:
          type: "string"
      os_replication_zones:
        type: "array"
        items:
          $ref: "#/definitions/OSReplicationZoneReq"
    title: "OSBucketAddReplicationZonesReq_Bucket"
  OSBucketCustomLabelsAddReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketCustomLabelsAddReq_Bucket"
    title: "OSBucketCustomLabelsAddReq"
  OSBucketCustomLabelsAddReq_Bucket:
    type: "object"
    required:
    - "labels"
    properties:
      labels:
        type: "array"
        items:
          $ref: "#/definitions/OSBucketCustomLabelsAddReq_Bucket_Labels_Elt"
    title: "OSBucketCustomLabelsAddReq_Bucket"
  OSBucketCustomLabelsAddReq_Bucket_Labels_Elt:
    type: "object"
    required:
    - "category"
    - "name"
    - "type"
    properties:
      category:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
    title: "OSBucketCustomLabelsAddReq_Bucket_Labels_Elt"
  OSBucketCustomLabelsRemoveReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketCustomLabelsRemoveReq_Bucket"
    title: "OSBucketCustomLabelsRemoveReq"
  OSBucketCustomLabelsRemoveReq_Bucket:
    type: "object"
    required:
    - "label_ids"
    properties:
      label_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OSBucketCustomLabelsRemoveReq_Bucket"
  OSBucketCustomLabelsUpdateReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketCustomLabelsUpdateReq_Bucket"
    title: "OSBucketCustomLabelsUpdateReq"
  OSBucketCustomLabelsUpdateReq_Bucket:
    type: "object"
    required:
    - "labels"
    properties:
      labels:
        type: "array"
        items:
          $ref: "#/definitions/OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt"
    title: "OSBucketCustomLabelsUpdateReq_Bucket"
  OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt:
    type: "object"
    required:
    - "id"
    - "type"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
    title: "OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt"
  OSBucketLogging:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      prefix:
        type: "string"
      source_bucket_name:
        type: "string"
      target_bucket_name:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OSBucketLogging"
    description: "OSBucketLogging defines models of os bucket logging."
    example:
      target_bucket_name: "target_bucket_name"
      prefix: "prefix"
      source_bucket_name: "source_bucket_name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
  OSBucketLoggingGrant:
    type: "object"
    properties:
      os_user_email:
        type: "string"
      os_user_name:
        type: "string"
      permission:
        type: "string"
      uri:
        type: "string"
    title: "OSBucketLoggingGrant"
    description: "OSBucketLoggingGrant defines logging permissions of os bucket"
    example:
      os_user_email: "os_user_email"
      os_user_name: "os_user_name"
      permission: "permission"
      uri: "uri"
  OSBucketLoggingsResp:
    type: "object"
    properties:
      os_bucket_loggings:
        type: "array"
        items:
          $ref: "#/definitions/OSBucketLogging"
    title: "OSBucketLoggingsResp"
    example:
      os_bucket_loggings:
      - target_bucket_name: "target_bucket_name"
        prefix: "prefix"
        source_bucket_name: "source_bucket_name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
      - target_bucket_name: "target_bucket_name"
        prefix: "prefix"
        source_bucket_name: "source_bucket_name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
  OSBucketMetadataSearchSetReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketMetadataSearchSetReq_Bucket"
    title: "OSBucketMetadataSearchSetReq"
  OSBucketMetadataSearchSetReq_Bucket:
    type: "object"
    required:
    - "metadata_search_enabled"
    properties:
      metadata_search_enabled:
        type: "boolean"
    title: "OSBucketMetadataSearchSetReq_Bucket"
  OSBucketPolicySetReq:
    type: "object"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketPolicySetReq_Bucket"
    title: "OSBucketPolicySetReq"
  OSBucketPolicySetReq_Bucket:
    type: "object"
    required:
    - "bucket_policy"
    properties:
      bucket_policy:
        type: "string"
    title: "OSBucketPolicySetReq_Bucket"
  OSBucketRemoveLoggingsReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketRemoveLoggingsReq_Bucket"
    title: "OSBucketRemoveLoggingsReq"
  OSBucketRemoveLoggingsReq_Bucket:
    type: "object"
    required:
    - "os_bucket_logging_ids"
    properties:
      os_bucket_logging_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OSBucketRemoveLoggingsReq_Bucket"
  OSBucketRemoveReplicationPathsReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketRemoveReplicationPathsReq_Bucket"
    title: "OSBucketRemoveReplicationPathsReq"
  OSBucketRemoveReplicationPathsReq_Bucket:
    type: "object"
    required:
    - "os_replication_path_uuids"
    properties:
      os_replication_path_uuids:
        type: "array"
        items:
          type: "string"
    title: "OSBucketRemoveReplicationPathsReq_Bucket"
  OSBucketRemoveReplicationZonesReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketRemoveReplicationZonesReq_Bucket"
    title: "OSBucketRemoveReplicationZonesReq"
  OSBucketRemoveReplicationZonesReq_Bucket:
    type: "object"
    required:
    - "os_replication_zone_uuids"
    properties:
      os_replication_zone_uuids:
        type: "array"
        items:
          type: "string"
    title: "OSBucketRemoveReplicationZonesReq_Bucket"
  OSBucketSetAccessLoggingReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketSetAccessLoggingReq_Bucket"
    title: "OSBucketSetAccessLoggingReq"
  OSBucketSetAccessLoggingReq_Bucket:
    type: "object"
    properties:
      logging_grants:
        type: "array"
        items:
          type: "object"
          properties: {}
      logging_owner_id:
        type: "integer"
        format: "int64"
      logging_prefix:
        type: "string"
      logging_target_bucket_id:
        type: "integer"
        format: "int64"
    title: "OSBucketSetAccessLoggingReq_Bucket"
  OSBucketSwitchOwnerOSZoneReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketSwitchOwnerOSZoneReq_Bucket"
    title: "OSBucketSwitchOwnerOSZoneReq"
  OSBucketSwitchOwnerOSZoneReq_Bucket:
    type: "object"
    properties:
      os_zone_uuid:
        type: "string"
    title: "OSBucketSwitchOwnerOSZoneReq_Bucket"
  OSBucketUpdateReplicationPathsReq:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        $ref: "#/definitions/OSBucketUpdateReplicationPathsReq_Bucket"
    title: "OSBucketUpdateReplicationPathsReq"
  OSBucketUpdateReplicationPathsReq_Bucket:
    type: "object"
    required:
    - "os_replication_path_uuids"
    properties:
      os_replication_path_uuids:
        type: "array"
        items:
          type: "string"
    title: "OSBucketUpdateReplicationPathsReq_Bucket"
  OSBucketUsageCategory:
    type: "object"
    properties:
      download_bytes:
        type: "integer"
        format: "int64"
      ops:
        type: "integer"
        format: "int64"
      upload_bytes:
        type: "integer"
        format: "int64"
    title: "OSBucketUsageCategory"
    description: "OSBucketUsageCategory contain usage info"
    example:
      ops: 6
      download_bytes: 0
      upload_bytes: 1
  OSCustomLabel:
    type: "object"
    properties:
      bucket:
        $ref: "#/definitions/ObjectStorageBucket_Nestview"
      category:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OSCustomLabel"
    description: "OSCustomLabel the struct of object storage custom label"
    example:
      bucket:
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        name: "name"
        id: 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      category: "category"
      type: "type"
      status: "status"
  OSCustomLabelResp:
    type: "object"
    required:
    - "os_custom_label"
    properties:
      os_custom_label:
        description: "object storage custom label"
        $ref: "#/definitions/OSCustomLabel"
    title: "OSCustomLabelResp"
    example:
      os_custom_label:
        bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        category: "category"
        type: "type"
        status: "status"
  OSCustomLabelsResp:
    type: "object"
    required:
    - "os_custom_labels"
    properties:
      os_custom_labels:
        type: "array"
        description: "object storage custom labels"
        items:
          $ref: "#/definitions/OSCustomLabel"
    title: "OSCustomLabelsResp"
    example:
      os_custom_labels:
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        category: "category"
        type: "type"
        status: "status"
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        category: "category"
        type: "type"
        status: "status"
  OSExternalStorageBucketInfo:
    type: "object"
    required:
    - "name"
    - "weight"
    properties:
      name:
        type: "string"
      weight:
        type: "integer"
        format: "int64"
    title: "OSExternalStorageBucketInfo"
    description: "OSExternalStorageBucketInfo contains bucket info of external storage\
      \ platform"
    example:
      name: "name"
      weight: 6
  OSExternalStorageClass:
    type: "object"
    required:
    - "class"
    - "external_storage_platforms"
    - "name"
    - "os_policy_id"
    - "platform"
    - "platform_type"
    properties:
      Create:
        type: "string"
        format: "date-time"
      class:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      external_storage_platforms:
        type: "array"
        items:
          $ref: "#/definitions/OSExternalStoragePlatform"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      os_policy_id:
        type: "integer"
        format: "int64"
      platform:
        type: "string"
      platform_type:
        type: "string"
      status:
        type: "string"
      storage_pattern:
        type: "array"
        items:
          type: "string"
    title: "OSExternalStorageClass"
    description: "OSExternalStorageClass is the model of os external storage class\n\
      +X:model:generate;plur=OSExternalStorageClasses;with_detailed"
    example:
      platform_type: "platform_type"
      storage_pattern:
      - "storage_pattern"
      - "storage_pattern"
      external_storage_platforms:
      - secret_key: "secret_key"
        endpoint: "endpoint"
        access_key: "access_key"
        buckets:
        - name: "name"
          weight: 6
        - name: "name"
          weight: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        weight: 5
        id: 1
        uuid: "uuid"
        status: "status"
      - secret_key: "secret_key"
        endpoint: "endpoint"
        access_key: "access_key"
        buckets:
        - name: "name"
          weight: 6
        - name: "name"
          weight: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        weight: 5
        id: 1
        uuid: "uuid"
        status: "status"
      Create: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      id: 5
      class: 0
      os_policy_id: 2
      platform: "platform"
      status: "status"
  OSExternalStorageClassCreateReq:
    type: "object"
    properties:
      os_external_storage_class:
        $ref: "#/definitions/OSExternalStorageClass"
    title: "OSExternalStorageClassCreateReq"
  OSExternalStorageClassResp:
    type: "object"
    properties:
      os_external_storage_class:
        $ref: "#/definitions/OSExternalStorageClass"
    title: "OSExternalStorageClassResp"
    example:
      os_external_storage_class:
        platform_type: "platform_type"
        storage_pattern:
        - "storage_pattern"
        - "storage_pattern"
        external_storage_platforms:
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        Create: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        description: "description"
        id: 5
        class: 0
        os_policy_id: 2
        platform: "platform"
        status: "status"
  OSExternalStorageClassUpdateReq:
    type: "object"
    properties:
      os_external_storage_class:
        $ref: "#/definitions/OSExternalStorageClassUpdateReq_ExternalStorageClass"
    title: "OSExternalStorageClassUpdateReq"
  OSExternalStorageClassUpdateReq_ExternalStorageClass:
    type: "object"
    properties:
      description:
        type: "string"
      external_storage_platforms:
        type: "array"
        items:
          $ref: "#/definitions/OSExternalStoragePlatformInfo"
      name:
        type: "string"
      storage_pattern:
        $ref: "#/definitions/SliceStringField"
    title: "OSExternalStorageClassUpdateReq_ExternalStorageClass"
  OSExternalStorageClassesResp:
    type: "object"
    properties:
      os_external_storage_classes:
        type: "array"
        items:
          $ref: "#/definitions/OSExternalStorageClass"
    title: "OSExternalStorageClassesResp"
    example:
      os_external_storage_classes:
      - platform_type: "platform_type"
        storage_pattern:
        - "storage_pattern"
        - "storage_pattern"
        external_storage_platforms:
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        Create: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        description: "description"
        id: 5
        class: 0
        os_policy_id: 2
        platform: "platform"
        status: "status"
      - platform_type: "platform_type"
        storage_pattern:
        - "storage_pattern"
        - "storage_pattern"
        external_storage_platforms:
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        - secret_key: "secret_key"
          endpoint: "endpoint"
          access_key: "access_key"
          buckets:
          - name: "name"
            weight: 6
          - name: "name"
            weight: 6
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          weight: 5
          id: 1
          uuid: "uuid"
          status: "status"
        Create: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        description: "description"
        id: 5
        class: 0
        os_policy_id: 2
        platform: "platform"
        status: "status"
  OSExternalStoragePlatform:
    type: "object"
    properties:
      access_key:
        type: "string"
      buckets:
        type: "array"
        items:
          $ref: "#/definitions/OSExternalStorageBucketInfo"
      create:
        type: "string"
        format: "date-time"
      endpoint:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      secret_key:
        type: "string"
      status:
        type: "string"
      uuid:
        type: "string"
      weight:
        type: "integer"
        format: "int64"
    title: "OSExternalStoragePlatform"
    description: "OSExternalStoragePlatform is the model of os_external_storage_platform\n\
      +X:model:generate;with_detailed;order_by=ID"
    example:
      secret_key: "secret_key"
      endpoint: "endpoint"
      access_key: "access_key"
      buckets:
      - name: "name"
        weight: 6
      - name: "name"
        weight: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      weight: 5
      id: 1
      uuid: "uuid"
      status: "status"
  OSExternalStoragePlatformInfo:
    type: "object"
    properties:
      access_key:
        type: "string"
      buckets:
        type: "array"
        items:
          $ref: "#/definitions/OSExternalStorageBucketInfo"
      endpoint:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      secret_key:
        type: "string"
      weight:
        type: "integer"
        format: "int64"
    title: "OSExternalStoragePlatformInfo"
    description: "OSExternalStoragePlatformInfo used for update os external storage\
      \ class"
  OSRemotePoliciesResp:
    type: "object"
    properties:
      os_remote_policies:
        type: "array"
        items:
          $ref: "#/definitions/OSRemotePolicy"
    title: "OSRemotePoliciesResp"
    example:
      os_remote_policies:
      - default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        zone_uuid: "zone_uuid"
        uuid: "uuid"
        status: "status"
      - default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        zone_uuid: "zone_uuid"
        uuid: "uuid"
        status: "status"
  OSRemotePolicy:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      default:
        type: "boolean"
      name:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      zone_uuid:
        type: "string"
    title: "OSRemotePolicy"
    description: "OSRemotePolicy defines model of cached remote os policy."
    example:
      default: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      zone_uuid: "zone_uuid"
      uuid: "uuid"
      status: "status"
  OSRemotePolicyResp:
    type: "object"
    properties:
      os_remote_policy:
        $ref: "#/definitions/OSRemotePolicy"
    title: "OSRemotePolicyResp"
    example:
      os_remote_policy:
        default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        zone_uuid: "zone_uuid"
        uuid: "uuid"
        status: "status"
  OSRemotePolicy_Nestview:
    type: "object"
    properties:
      name:
        type: "string"
      uuid:
        type: "string"
    title: "OSRemotePolicy_Nestview"
    example:
      name: "name"
      uuid: "uuid"
  OSReplicationPath:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      os_zone_uuids:
        type: "array"
        items:
          type: "string"
      os_zones:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageZone_Nestview"
      replication_uuid:
        type: "string"
      status:
        type: "string"
      suspended:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "OSReplicationPath"
    description: "OSReplicationPath defines models of os replication path."
    example:
      replication_uuid: "replication_uuid"
      os_zone_uuids:
      - "os_zone_uuids"
      - "os_zone_uuids"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      os_zones:
      - id: 7
        uuid: "uuid"
      - id: 7
        uuid: "uuid"
      uuid: "uuid"
      suspended: true
      status: "status"
  OSReplicationPathReq:
    type: "object"
    required:
    - "os_zone_uuids"
    properties:
      os_zone_uuids:
        type: "array"
        items:
          type: "string"
    title: "OSReplicationPathReq"
  OSReplicationPathResp:
    type: "object"
    properties:
      os_replication_path:
        $ref: "#/definitions/OSReplicationPath"
    title: "OSReplicationPathResp"
    example:
      os_replication_path:
        replication_uuid: "replication_uuid"
        os_zone_uuids:
        - "os_zone_uuids"
        - "os_zone_uuids"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        os_zones:
        - id: 7
          uuid: "uuid"
        - id: 7
          uuid: "uuid"
        uuid: "uuid"
        suspended: true
        status: "status"
  OSReplicationPathsResp:
    type: "object"
    properties:
      os_replication_paths:
        type: "array"
        items:
          $ref: "#/definitions/OSReplicationPath"
    title: "OSReplicationPathsResp"
    example:
      os_replication_paths:
      - replication_uuid: "replication_uuid"
        os_zone_uuids:
        - "os_zone_uuids"
        - "os_zone_uuids"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        os_zones:
        - id: 7
          uuid: "uuid"
        - id: 7
          uuid: "uuid"
        uuid: "uuid"
        suspended: true
        status: "status"
      - replication_uuid: "replication_uuid"
        os_zone_uuids:
        - "os_zone_uuids"
        - "os_zone_uuids"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        os_zones:
        - id: 7
          uuid: "uuid"
        - id: 7
          uuid: "uuid"
        uuid: "uuid"
        suspended: true
        status: "status"
  OSReplicationZone:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      dirty:
        type: "boolean"
      os_bucket:
        $ref: "#/definitions/ObjectStorageBucket_Nestview"
      os_bucket_owner_cluster:
        $ref: "#/definitions/RemoteCluster_Nestview"
      os_bucket_owner_zone:
        $ref: "#/definitions/ObjectStorageZone_Nestview"
      os_remote_policy:
        $ref: "#/definitions/OSRemotePolicy_Nestview"
      os_remote_policy_uuid:
        type: "string"
      os_replication_path_num:
        type: "integer"
        format: "int64"
      os_zone:
        $ref: "#/definitions/ObjectStorageZone_Nestview"
      os_zone_uuid:
        type: "string"
      replication_uuid:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "OSReplicationZone"
    description: "OSReplicationZone defines models of os replication zone."
    example:
      dirty: true
      replication_uuid: "replication_uuid"
      os_zone:
        id: 7
        uuid: "uuid"
      os_remote_policy_uuid: "os_remote_policy_uuid"
      os_zone_uuid: "os_zone_uuid"
      update: "2000-01-23T04:56:07.000+00:00"
      os_remote_policy:
        name: "name"
        uuid: "uuid"
      uuid: "uuid"
      os_bucket_owner_zone:
        id: 7
        uuid: "uuid"
      os_bucket_owner_cluster:
        name: "name"
        id: 2
        fs_id: "fs_id"
        url: "url"
      os_bucket:
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        name: "name"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      os_replication_path_num: 0
      status: "status"
  OSReplicationZoneCreateReq:
    type: "object"
    required:
    - "os_replication_zone"
    properties:
      os_replication_zone:
        $ref: "#/definitions/OSReplicationZoneCreateReq_OSReplicationZone"
    title: "OSReplicationZoneCreateReq"
  OSReplicationZoneCreateReq_OSReplicationZone:
    type: "object"
    required:
    - "os_bucket_id"
    - "uuid"
    properties:
      os_bucket_id:
        type: "integer"
        format: "int64"
      uuid:
        type: "string"
    title: "OSReplicationZoneCreateReq_OSReplicationZone"
  OSReplicationZoneRecord:
    title: "OSReplicationZoneRecord"
    allOf:
    - $ref: "#/definitions/OSReplicationZone"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/OSReplicationZoneStat"
    description: "OSReplicationZoneRecord is used to combine OSReplicationZone and\n\
      OSReplicationZoneStat"
  OSReplicationZoneRecordResp:
    type: "object"
    properties:
      os_replication_zone:
        $ref: "#/definitions/OSReplicationZoneRecord"
    title: "OSReplicationZoneRecordResp"
    example:
      os_replication_zone: ""
  OSReplicationZoneRecordsResp:
    type: "object"
    properties:
      os_replication_zones:
        type: "array"
        items:
          $ref: "#/definitions/OSReplicationZoneRecord"
    title: "OSReplicationZoneRecordsResp"
    example:
      os_replication_zones:
      - ""
      - ""
  OSReplicationZoneReq:
    type: "object"
    required:
    - "os_remote_policy_uuid"
    properties:
      os_remote_policy_uuid:
        type: "string"
    title: "OSReplicationZoneReq"
  OSReplicationZoneResp:
    type: "object"
    properties:
      os_replication_zone:
        $ref: "#/definitions/OSReplicationZone"
    title: "OSReplicationZoneResp"
    example:
      os_replication_zone:
        dirty: true
        replication_uuid: "replication_uuid"
        os_zone:
          id: 7
          uuid: "uuid"
        os_remote_policy_uuid: "os_remote_policy_uuid"
        os_zone_uuid: "os_zone_uuid"
        update: "2000-01-23T04:56:07.000+00:00"
        os_remote_policy:
          name: "name"
          uuid: "uuid"
        uuid: "uuid"
        os_bucket_owner_zone:
          id: 7
          uuid: "uuid"
        os_bucket_owner_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        os_bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        os_replication_path_num: 0
        status: "status"
  OSReplicationZoneSamplesResp:
    type: "object"
    required:
    - "os_replication_zone_samples"
    properties:
      os_replication_zone_samples:
        type: "array"
        description: "os replication zone samples"
        items:
          $ref: "#/definitions/OSReplicationZoneStat"
    title: "OSReplicationZoneSamplesResp"
    example:
      os_replication_zone_samples:
      - object_kbytes_ps: 6.027456183070403
        total_objects: 2
        bandwidth_kbyte: 0.8008281904610115
        total_bytes: 5
        create: "2000-01-23T04:56:07.000+00:00"
        objects_pm: 1.4658129805029452
        total_object_bytes: 5
      - object_kbytes_ps: 6.027456183070403
        total_objects: 2
        bandwidth_kbyte: 0.8008281904610115
        total_bytes: 5
        create: "2000-01-23T04:56:07.000+00:00"
        objects_pm: 1.4658129805029452
        total_object_bytes: 5
  OSReplicationZoneStat:
    type: "object"
    properties:
      bandwidth_kbyte:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      object_kbytes_ps:
        type: "number"
        format: "double"
      objects_pm:
        type: "number"
        format: "double"
      total_bytes:
        type: "integer"
        format: "int64"
      total_object_bytes:
        type: "integer"
        format: "int64"
      total_objects:
        type: "integer"
        format: "int64"
    title: "OSReplicationZoneStat"
    description: "OSReplicationZoneStat contains sync stat info of os replication\
      \ zone"
    example:
      object_kbytes_ps: 6.027456183070403
      total_objects: 2
      bandwidth_kbyte: 0.8008281904610115
      total_bytes: 5
      create: "2000-01-23T04:56:07.000+00:00"
      objects_pm: 1.4658129805029452
      total_object_bytes: 5
  OSSample:
    type: "object"
    properties:
      delete_obj_category:
        $ref: "#/definitions/OSBucketUsageCategory"
      get_obj_category:
        $ref: "#/definitions/OSBucketUsageCategory"
      list_bucket_category:
        $ref: "#/definitions/OSBucketUsageCategory"
      objects:
        type: "integer"
        format: "int64"
      post_obj_category:
        $ref: "#/definitions/OSBucketUsageCategory"
      put_obj_category:
        $ref: "#/definitions/OSBucketUsageCategory"
      used_capacity_bytes:
        type: "object"
        additionalProperties:
          type: "integer"
          format: "int64"
    title: "OSSample"
    description: "OSSample contains os samples"
    example:
      used_capacity_bytes:
        key: 5
      post_obj_category:
        ops: 6
        download_bytes: 0
        upload_bytes: 1
      objects: 5
      delete_obj_category:
        ops: 6
        download_bytes: 0
        upload_bytes: 1
      get_obj_category:
        ops: 6
        download_bytes: 0
        upload_bytes: 1
      put_obj_category:
        ops: 6
        download_bytes: 0
        upload_bytes: 1
      list_bucket_category:
        ops: 6
        download_bytes: 0
        upload_bytes: 1
  OSSampleResp:
    type: "object"
    properties:
      os_samples:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "object"
              additionalProperties:
                $ref: "#/definitions/OSSample"
    title: "OSSampleResp"
    example:
      os_samples:
      - key:
        - key:
            used_capacity_bytes:
              key: 5
            post_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            objects: 5
            delete_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            get_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            put_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            list_bucket_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
        - key:
            used_capacity_bytes:
              key: 5
            post_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            objects: 5
            delete_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            get_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            put_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            list_bucket_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
      - key:
        - key:
            used_capacity_bytes:
              key: 5
            post_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            objects: 5
            delete_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            get_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            put_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            list_bucket_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
        - key:
            used_capacity_bytes:
              key: 5
            post_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            objects: 5
            delete_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            get_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            put_obj_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
            list_bucket_category:
              ops: 6
              download_bytes: 0
              upload_bytes: 1
  OSSearchEngine:
    type: "object"
    properties:
      action_status:
        type: "string"
      allocated_size:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      gateway_data_size:
        type: "integer"
        format: "int64"
      gateway_flavor:
        $ref: "#/definitions/VMFlavor_Nestview"
      gateway_http_port:
        type: "integer"
        format: "int64"
      gateway_transport_port:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      search_s3_load_balancer_group:
        $ref: "#/definitions/S3LoadBalancerGroup_Nestview"
      size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      sync_s3_load_balancer_group:
        $ref: "#/definitions/S3LoadBalancerGroup_Nestview"
      update:
        type: "string"
        format: "date-time"
    title: "OSSearchEngine"
    description: "OSSearchEngine defines model of OS search engine TODO(penghui):\
      \ Load balancer\ngroup"
  OSSearchEngineAddGatewaysReq:
    type: "object"
    required:
    - "os_search_engine"
    properties:
      os_search_engine:
        $ref: "#/definitions/OSSearchEngineAddGatewaysReq_SearchEngine"
    title: "OSSearchEngineAddGatewaysReq"
  OSSearchEngineAddGatewaysReq_SearchEngine:
    type: "object"
    required:
    - "os_search_gateways"
    properties:
      os_search_gateways:
        type: "array"
        items:
          $ref: "#/definitions/OSSearchGatewayReq"
    title: "OSSearchEngineAddGatewaysReq_SearchEngine"
  OSSearchEngineCreateReq:
    type: "object"
    required:
    - "os_search_engine"
    properties:
      os_search_engine:
        $ref: "#/definitions/OSSearchEngineCreateReq_SearchEngine"
    title: "OSSearchEngineCreateReq"
  OSSearchEngineCreateReq_SearchEngine:
    type: "object"
    required:
    - "gateway_data_size"
    - "gateway_flavor_id"
    - "os_search_gateways"
    properties:
      gateway_data_size:
        type: "integer"
        format: "int64"
      gateway_flavor_id:
        type: "integer"
        format: "int64"
      gateway_http_port:
        type: "integer"
        format: "int64"
      gateway_transport_port:
        type: "integer"
        format: "int64"
      os_search_gateways:
        type: "array"
        items:
          $ref: "#/definitions/OSSearchGatewayReq"
    title: "OSSearchEngineCreateReq_SearchEngine"
  OSSearchEngineRecord:
    title: "OSSearchEngineRecord"
    allOf:
    - $ref: "#/definitions/OSSearchEngine"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/OSSearchEngineStat"
    description: "OSSearchEngineRecord is used to combine OSSearchEngine and OSSearchEngineStat"
  OSSearchEngineRemoveGatewaysReq:
    type: "object"
    required:
    - "os_search_engine"
    properties:
      os_search_engine:
        $ref: "#/definitions/OSSearchEngineRemoveGatewaysReq_SearchEngine"
    title: "OSSearchEngineRemoveGatewaysReq"
  OSSearchEngineRemoveGatewaysReq_SearchEngine:
    type: "object"
    required:
    - "os_search_gateway_ids"
    properties:
      os_search_gateway_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OSSearchEngineRemoveGatewaysReq_SearchEngine"
  OSSearchEngineResp:
    type: "object"
    required:
    - "os_search_engine"
    properties:
      os_search_engine:
        description: "object storage search engine"
        $ref: "#/definitions/OSSearchEngineRecord"
    title: "OSSearchEngineResp"
    example:
      os_search_engine: ""
  OSSearchEngineSamplesResp:
    type: "object"
    required:
    - "os_search_engine_samples"
    properties:
      os_search_engine_samples:
        type: "array"
        description: "os search engine samples"
        items:
          $ref: "#/definitions/OSSearchEngineStat"
    title: "OSSearchEngineSamplesResp"
    example:
      os_search_engine_samples:
      - average_meta_query_latency: 0.8008281904610115
        total_meta_num: 5
        total_meta_size_bytes: 2
        create: "2000-01-23T04:56:07.000+00:00"
        sync_objects_pm: 5.962133916683182
        meta_query_pm: 6.027456183070403
        sync_bandwidth_kbyte: 1.4658129805029452
      - average_meta_query_latency: 0.8008281904610115
        total_meta_num: 5
        total_meta_size_bytes: 2
        create: "2000-01-23T04:56:07.000+00:00"
        sync_objects_pm: 5.962133916683182
        meta_query_pm: 6.027456183070403
        sync_bandwidth_kbyte: 1.4658129805029452
  OSSearchEngineStat:
    type: "object"
    properties:
      average_meta_query_latency:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      meta_query_pm:
        type: "number"
        format: "double"
      sync_bandwidth_kbyte:
        type: "number"
        format: "double"
      sync_objects_pm:
        type: "number"
        format: "double"
      total_meta_num:
        type: "integer"
        format: "int64"
      total_meta_size_bytes:
        type: "integer"
        format: "int64"
    title: "OSSearchEngineStat"
    description: "OSSearchEngineStat contains info of os search engine"
    example:
      average_meta_query_latency: 0.8008281904610115
      total_meta_num: 5
      total_meta_size_bytes: 2
      create: "2000-01-23T04:56:07.000+00:00"
      sync_objects_pm: 5.962133916683182
      meta_query_pm: 6.027456183070403
      sync_bandwidth_kbyte: 1.4658129805029452
  OSSearchEngineUpdateReq:
    type: "object"
    required:
    - "os_search_engine"
    properties:
      os_search_engine:
        $ref: "#/definitions/OSSearchEngineUpdateReq_SearchEngine"
    title: "OSSearchEngineUpdateReq"
  OSSearchEngineUpdateReq_SearchEngine:
    type: "object"
    properties:
      gateway_data_size:
        type: "integer"
        format: "int64"
      gateway_flavor_id:
        type: "integer"
        format: "int64"
    title: "OSSearchEngineUpdateReq_SearchEngine"
  OSSearchEngine_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "OSSearchEngine_Nestview"
  OSSearchEnginesResp:
    type: "object"
    required:
    - "os_search_engines"
    properties:
      os_search_engines:
        type: "array"
        description: "object storage search engine"
        items:
          $ref: "#/definitions/OSSearchEngineRecord"
    title: "OSSearchEnginesResp"
    example:
      os_search_engines:
      - ""
      - ""
  OSSearchGateway:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      search_engine:
        $ref: "#/definitions/OSSearchEngine_Nestview"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OSSearchGateway"
    description: "OSSearchGateway defines model os OS search gateway"
  OSSearchGatewayRecord:
    title: "OSSearchGatewayRecord"
    allOf:
    - $ref: "#/definitions/OSSearchGateway"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/OSSearchGatewayStat"
    description: "OSSearchGatewayRecord combine OSSearchGateway and OSSearchGatewayStat\
      \ to let API\ncomfortable"
  OSSearchGatewayReq:
    type: "object"
    required:
    - "host_id"
    - "pool_id"
    properties:
      host_id:
        type: "integer"
        format: "int64"
        description: "host id"
      pool_id:
        type: "integer"
        format: "int64"
    title: "OSSearchGatewayReq"
  OSSearchGatewayResp:
    type: "object"
    required:
    - "os_search_gateway"
    properties:
      os_search_gateway:
        $ref: "#/definitions/OSSearchGatewayRecord"
    title: "OSSearchGatewayResp"
    example:
      os_search_gateway: ""
  OSSearchGatewaySamplesResp:
    type: "object"
    required:
    - "os_search_gateway_samples"
    properties:
      os_search_gateway_samples:
        type: "array"
        items:
          $ref: "#/definitions/OSSearchGatewayStat"
    title: "OSSearchGatewaySamplesResp"
    example:
      os_search_gateway_samples:
      - read_bandwidth_kbyte: 1.4658129805029452
        write_bandwidth_kbyte: 2.3021358869347655
        mem_usage_percent: 6.027456183070403
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 7.061401241503109
        write_latency_us: 9.301444243932576
        read_latency_us: 5.637376656633329
        cpu_util: 0.8008281904610115
        read_iops: 5.962133916683182
      - read_bandwidth_kbyte: 1.4658129805029452
        write_bandwidth_kbyte: 2.3021358869347655
        mem_usage_percent: 6.027456183070403
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 7.061401241503109
        write_latency_us: 9.301444243932576
        read_latency_us: 5.637376656633329
        cpu_util: 0.8008281904610115
        read_iops: 5.962133916683182
  OSSearchGatewayStat:
    type: "object"
    properties:
      cpu_util:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      mem_usage_percent:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "OSSearchGatewayStat"
    description: "OSSearchGatewayStat defines model os OS search gateway stat"
    example:
      read_bandwidth_kbyte: 1.4658129805029452
      write_bandwidth_kbyte: 2.3021358869347655
      mem_usage_percent: 6.027456183070403
      create: "2000-01-23T04:56:07.000+00:00"
      write_iops: 7.061401241503109
      write_latency_us: 9.301444243932576
      read_latency_us: 5.637376656633329
      cpu_util: 0.8008281904610115
      read_iops: 5.962133916683182
  OSSearchGatewaysResp:
    type: "object"
    required:
    - "os_search_gateways"
    properties:
      os_search_gateways:
        type: "array"
        items:
          $ref: "#/definitions/OSSearchGatewayRecord"
    title: "OSSearchGatewaysResp"
    example:
      os_search_gateways:
      - ""
      - ""
  OSStorageClass:
    type: "object"
    properties:
      active_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      class:
        type: "integer"
        format: "int32"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      inactive_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
      os_policy:
        $ref: "#/definitions/ObjectStoragePolicy"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OSStorageClass"
    description: "OSStorageClass is the model of os_storage_class"
    example:
      active_pool_ids:
      - 0
      - 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 1
      class: 6
      os_policy:
        shared: true
        cache_pool:
          name: "name"
          id: 5
        compress: true
        description: "description"
        policy_name: "policy_name"
        update: "2000-01-23T04:56:07.000+00:00"
        bucket_num: 0
        crypto: true
        index_pool:
          name: "name"
          id: 5
        object_size_threshold: 1
        default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
      inactive_pool_ids:
      - 5
      - 5
      status: "status"
  OSStorageClassResp:
    type: "object"
    properties:
      os_storage_class:
        $ref: "#/definitions/OSStorageClass"
    title: "OSStorageClassResp"
    example:
      os_storage_class:
        active_pool_ids:
        - 0
        - 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        class: 6
        os_policy:
          shared: true
          cache_pool:
            name: "name"
            id: 5
          compress: true
          description: "description"
          policy_name: "policy_name"
          update: "2000-01-23T04:56:07.000+00:00"
          bucket_num: 0
          crypto: true
          index_pool:
            name: "name"
            id: 5
          object_size_threshold: 1
          default: true
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          id: 6
          status: "status"
        inactive_pool_ids:
        - 5
        - 5
        status: "status"
  OSStorageClassUpdateReq:
    type: "object"
    properties:
      os_storage_class:
        $ref: "#/definitions/OSStorageClassUpdateReq_StorageClass"
    title: "OSStorageClassUpdateReq"
  OSStorageClassUpdateReq_StorageClass:
    type: "object"
    properties:
      active_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      description:
        type: "string"
      inactive_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
    title: "OSStorageClassUpdateReq_StorageClass"
  OSStorageClassesResp:
    type: "object"
    properties:
      os_storage_classes:
        type: "array"
        items:
          $ref: "#/definitions/OSStorageClass"
    title: "OSStorageClassesResp"
    example:
      os_storage_classes:
      - active_pool_ids:
        - 0
        - 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        class: 6
        os_policy:
          shared: true
          cache_pool:
            name: "name"
            id: 5
          compress: true
          description: "description"
          policy_name: "policy_name"
          update: "2000-01-23T04:56:07.000+00:00"
          bucket_num: 0
          crypto: true
          index_pool:
            name: "name"
            id: 5
          object_size_threshold: 1
          default: true
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          id: 6
          status: "status"
        inactive_pool_ids:
        - 5
        - 5
        status: "status"
      - active_pool_ids:
        - 0
        - 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        class: 6
        os_policy:
          shared: true
          cache_pool:
            name: "name"
            id: 5
          compress: true
          description: "description"
          policy_name: "policy_name"
          update: "2000-01-23T04:56:07.000+00:00"
          bucket_num: 0
          crypto: true
          index_pool:
            name: "name"
            id: 5
          object_size_threshold: 1
          default: true
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          id: 6
          status: "status"
        inactive_pool_ids:
        - 5
        - 5
        status: "status"
  OSUserProperties:
    type: "object"
    properties:
      area_code:
        type: "string"
      contact_person:
        type: "string"
      email:
        type: "string"
      mobile:
        type: "string"
      user_name:
        type: "string"
      user_type:
        type: "integer"
        format: "int64"
    title: "OSUserProperties"
    description: "OSUserProperties contains properties for a os user."
  OSUserPropertiesReq:
    type: "object"
    properties:
      area_code:
        type: "string"
      contact_person:
        type: "string"
      email:
        type: "string"
      mobile:
        type: "string"
      user_name:
        type: "string"
      user_type:
        type: "integer"
        format: "int64"
    title: "OSUserPropertiesReq"
    example:
      user_type: 5
      contact_person: "contact_person"
      user_name: "user_name"
      area_code: "area_code"
      mobile: "mobile"
      email: "email"
  OSZoneLock:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      expired_time:
        type: "string"
        format: "date-time"
      key:
        type: "string"
      resource_type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      value:
        type: "string"
    title: "OSZoneLock"
    description: "OSZoneLock defines model of os zone lock."
    example:
      resource_type: "resource_type"
      create: "2000-01-23T04:56:07.000+00:00"
      expired_time: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      uuid: "uuid"
      value: "value"
      key: "key"
  OSZoneLockCreateReq:
    type: "object"
    properties:
      os_zone_lock:
        $ref: "#/definitions/OSZoneLockCreateReq_Lock"
    title: "OSZoneLockCreateReq"
  OSZoneLockCreateReq_Lock:
    type: "object"
    required:
    - "key"
    - "resource_type"
    - "value"
    properties:
      key:
        type: "string"
        description: "key of lock, for example name of os bucket"
      resource_type:
        type: "string"
        description: "resource type of lock, including os_bucket"
      value:
        type: "string"
        description: "value of lock, for example action of os bucket"
    title: "OSZoneLockCreateReq_Lock"
  OSZoneLockResp:
    type: "object"
    required:
    - "os_zone_lock"
    properties:
      os_zone_lock:
        $ref: "#/definitions/OSZoneLock"
    title: "OSZoneLockResp"
    example:
      os_zone_lock:
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expired_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        value: "value"
        key: "key"
  OSZoneLocksResp:
    type: "object"
    required:
    - "os_zone_locks"
    properties:
      os_zone_locks:
        type: "array"
        items:
          $ref: "#/definitions/OSZoneLock"
    title: "OSZoneLocksResp"
    example:
      os_zone_locks:
      - resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expired_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        value: "value"
        key: "key"
      - resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expired_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        value: "value"
        key: "key"
  OSZonePair:
    type: "object"
    properties:
      ID:
        type: "integer"
        format: "int64"
      clock_diff:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      source_zone_uuid:
        type: "string"
      target_zone_uuid:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OSZonePair"
    description: "OSZonePair contains relation info from source zone to target zone"
    example:
      clock_diff: 6
      target_zone_uuid: "target_zone_uuid"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      ID: 0
      source_zone_uuid: "source_zone_uuid"
  OSZonePairsResp:
    type: "object"
    required:
    - "os_zone_pairs"
    properties:
      os_zone_pairs:
        type: "array"
        items:
          $ref: "#/definitions/OSZonePair"
    title: "OSZonePairsResp"
    example:
      os_zone_pairs:
      - clock_diff: 6
        target_zone_uuid: "target_zone_uuid"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        ID: 0
        source_zone_uuid: "source_zone_uuid"
      - clock_diff: 6
        target_zone_uuid: "target_zone_uuid"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        ID: 0
        source_zone_uuid: "source_zone_uuid"
  OSZonePairsUpdateReq:
    type: "object"
    properties:
      os_zone:
        $ref: "#/definitions/OSZonePairsUpdateReq_Zone"
    title: "OSZonePairsUpdateReq"
  OSZonePairsUpdateReq_Zone:
    type: "object"
    properties:
      target_zones:
        type: "array"
        items:
          $ref: "#/definitions/OSZonePairsUpdateReq_Zone_TargetZones_Elt"
    title: "OSZonePairsUpdateReq_Zone"
  OSZonePairsUpdateReq_Zone_TargetZones_Elt:
    type: "object"
    required:
    - "clock_diff"
    - "zone_uuid"
    properties:
      clock_diff:
        type: "integer"
        format: "int64"
      zone_uuid:
        type: "string"
    title: "OSZonePairsUpdateReq_Zone_TargetZones_Elt"
  OSZonePeriod:
    type: "object"
    properties:
      action:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      master_os_zone_uuid:
        type: "string"
      next_master_os_zone_uuid:
        type: "string"
      period_id:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "OSZonePeriod"
    description: "OSZonePeriod records progressing of a zone group operation."
    example:
      next_master_os_zone_uuid: "next_master_os_zone_uuid"
      action: "action"
      create: "2000-01-23T04:56:07.000+00:00"
      master_os_zone_uuid: "master_os_zone_uuid"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      period_id: "period_id"
      uuid: "uuid"
      status: "status"
  OSZonePeriodResp:
    type: "object"
    required:
    - "os_zone_period"
    properties:
      os_zone_period:
        $ref: "#/definitions/OSZonePeriod"
    title: "OSZonePeriodResp"
    example:
      os_zone_period:
        next_master_os_zone_uuid: "next_master_os_zone_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        master_os_zone_uuid: "master_os_zone_uuid"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        period_id: "period_id"
        uuid: "uuid"
        status: "status"
  OSZonePeriodsResp:
    type: "object"
    required:
    - "os_zone_periods"
    properties:
      os_zone_periods:
        type: "array"
        items:
          $ref: "#/definitions/OSZonePeriod"
    title: "OSZonePeriodsResp"
    example:
      os_zone_periods:
      - next_master_os_zone_uuid: "next_master_os_zone_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        master_os_zone_uuid: "master_os_zone_uuid"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        period_id: "period_id"
        uuid: "uuid"
        status: "status"
      - next_master_os_zone_uuid: "next_master_os_zone_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        master_os_zone_uuid: "master_os_zone_uuid"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        period_id: "period_id"
        uuid: "uuid"
        status: "status"
  OSZoneTranslog:
    type: "object"
    properties:
      action:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      resource_type:
        type: "string"
      resource_uuid:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "OSZoneTranslog"
    description: "OSZoneTranslog defines model of os zone translog."
    example:
      resource_type: "resource_type"
      resource_uuid: "resource_uuid"
      action: "action"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      uuid: "uuid"
  OSZoneTranslogResp:
    type: "object"
    properties:
      os_zone_translog:
        $ref: "#/definitions/OSZoneTranslog"
    title: "OSZoneTranslogResp"
    example:
      os_zone_translog:
        resource_type: "resource_type"
        resource_uuid: "resource_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
  OSZoneTranslogsResp:
    type: "object"
    properties:
      os_zone_translogs:
        type: "array"
        items:
          $ref: "#/definitions/OSZoneTranslog"
    title: "OSZoneTranslogsResp"
    example:
      os_zone_translogs:
      - resource_type: "resource_type"
        resource_uuid: "resource_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
      - resource_type: "resource_type"
        resource_uuid: "resource_uuid"
        action: "action"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
  ObjectStorage:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      index_pool:
        $ref: "#/definitions/Pool_Nestview"
      lifecycle_end_on:
        type: "string"
      lifecycle_start_on:
        type: "string"
      multi_zone_enabled:
        type: "boolean"
      name:
        type: "string"
      search_enabled:
        type: "boolean"
      second_mergence_enabled:
        type: "boolean"
      second_mergence_end_on:
        type: "string"
      second_mergence_start_on:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "ObjectStorage"
    description: "ObjectStorage is the model of object_storage"
    example:
      second_mergence_enabled: true
      search_enabled: true
      update: "2000-01-23T04:56:07.000+00:00"
      index_pool:
        name: "name"
        id: 5
      lifecycle_start_on: "lifecycle_start_on"
      second_mergence_end_on: "second_mergence_end_on"
      second_mergence_start_on: "second_mergence_start_on"
      multi_zone_enabled: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      lifecycle_end_on: "lifecycle_end_on"
      action_status: "action_status"
      status: "status"
  ObjectStorageBucket:
    type: "object"
    properties:
      action_status:
        type: "string"
      all_user_permission:
        type: "string"
      auth_user_permission:
        type: "string"
      bucket_policy:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      flag:
        type: "object"
      id:
        type: "integer"
        format: "int64"
      lifecycle:
        $ref: "#/definitions/ObjectStorageLifecycle"
      log_delivery_permission:
        type: "string"
      logging_enabled:
        type: "boolean"
      logging_grants:
        type: "array"
        items:
          $ref: "#/definitions/OSBucketLoggingGrant"
      logging_owner:
        $ref: "#/definitions/ObjectStorageUser_Nestview"
      logging_prefix:
        type: "string"
      logging_suspended:
        type: "boolean"
      logging_target_bucket:
        $ref: "#/definitions/ObjectStorageBucket_Nestview"
      metadata_search_enabled:
        type: "boolean"
      name:
        type: "string"
      nfs_client_num:
        type: "integer"
        format: "int64"
      os_replication_path_num:
        type: "integer"
        format: "int64"
      os_replication_zone_num:
        type: "integer"
        format: "int64"
      os_zone:
        $ref: "#/definitions/ObjectStorageZone_Nestview"
      os_zone_uuid:
        type: "string"
      owner:
        $ref: "#/definitions/ObjectStorageUser_Nestview"
      owner_permission:
        type: "string"
      policy:
        $ref: "#/definitions/ObjectStoragePolicy_Nestview"
      policy_enabled:
        type: "boolean"
      quota_max_objects:
        type: "integer"
        format: "int64"
      quota_max_size:
        type: "integer"
        format: "int64"
      remote_cluster:
        $ref: "#/definitions/RemoteCluster_Nestview"
      replication_uuid:
        type: "string"
        description: "NOTE: Use name of bucket as replication uuid for simplicity"
      shards:
        type: "integer"
        format: "int64"
      specification_objects:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      virtual:
        type: "boolean"
    title: "ObjectStorageBucket"
    description: "ObjectStorageBucket is the model of object_storage_bucket"
    example:
      owner_permission: "owner_permission"
      replication_uuid: "replication_uuid"
      policy_enabled: true
      logging_suspended: true
      virtual: true
      flag: "{}"
      os_replication_zone_num: 2
      auth_user_permission: "auth_user_permission"
      bucket_policy: "bucket_policy"
      update: "2000-01-23T04:56:07.000+00:00"
      lifecycle:
        rules:
        - "{}"
        - "{}"
        id: 6
        status: "status"
      logging_enabled: true
      logging_owner:
        name: "name"
        id: 1
      specification_objects: 7
      logging_grants:
      - os_user_email: "os_user_email"
        os_user_name: "os_user_name"
        permission: "permission"
        uri: "uri"
      - os_user_email: "os_user_email"
        os_user_name: "os_user_name"
        permission: "permission"
        uri: "uri"
      remote_cluster:
        name: "name"
        id: 2
        fs_id: "fs_id"
        url: "url"
      quota_max_size: 2
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      action_status: "action_status"
      policy:
        name: "name"
        id: 9
      owner:
        name: "name"
        id: 1
      os_zone:
        id: 7
        uuid: "uuid"
      os_zone_uuid: "os_zone_uuid"
      log_delivery_permission: "log_delivery_permission"
      logging_prefix: "logging_prefix"
      nfs_client_num: 5
      shards: 4
      metadata_search_enabled: true
      quota_max_objects: 3
      name: "name"
      all_user_permission: "all_user_permission"
      os_replication_path_num: 5
      logging_target_bucket:
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        name: "name"
        id: 0
      status: "status"
  ObjectStorageBucketCreateReq:
    type: "object"
    properties:
      os_bucket:
        $ref: "#/definitions/ObjectStorageBucketCreateReq_Bucket"
    title: "ObjectStorageBucketCreateReq"
    example:
      os_bucket:
        owner_permission: "owner_permission"
        flag:
          versions_suspended: true
          worm: true
          versioned: true
        policy_id: 6
        auth_user_permission: "auth_user_permission"
        owner_id: 0
        quota_max_objects: 1
        name: "name"
        quota_max_size: 5
        all_user_permission: "all_user_permission"
        log_delivery_permission: "log_delivery_permission"
  ObjectStorageBucketCreateReq_Bucket:
    type: "object"
    required:
    - "name"
    - "owner_id"
    - "policy_id"
    properties:
      all_user_permission:
        type: "string"
        description: "permission setting of all users"
      auth_user_permission:
        type: "string"
        description: "permission setting of authenticated users"
      flag:
        description: "bucket options"
        $ref: "#/definitions/BucketFlag"
      log_delivery_permission:
        type: "string"
        description: "permission setting of log delivery group"
      name:
        type: "string"
        description: "bucket name"
      owner_id:
        type: "integer"
        format: "int64"
        description: "bucket owner"
      owner_permission:
        type: "string"
        description: "permission setting of owner"
      policy_id:
        type: "integer"
        format: "int64"
        description: "storage policy"
      quota_max_objects:
        type: "integer"
        format: "int64"
        description: "max number of objects"
      quota_max_size:
        type: "integer"
        format: "int64"
        description: "max size of all objects"
    title: "ObjectStorageBucketCreateReq_Bucket"
    example:
      owner_permission: "owner_permission"
      flag:
        versions_suspended: true
        worm: true
        versioned: true
      policy_id: 6
      auth_user_permission: "auth_user_permission"
      owner_id: 0
      quota_max_objects: 1
      name: "name"
      quota_max_size: 5
      all_user_permission: "all_user_permission"
      log_delivery_permission: "log_delivery_permission"
  ObjectStorageBucketNFSClient:
    type: "object"
    properties:
      bucket:
        $ref: "#/definitions/ObjectStorageBucket_Nestview"
      client:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      permission:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "ObjectStorageBucketNFSClient"
    description: "ObjectStorageBucketNFSClient defines nfs client"
    example:
      bucket:
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        name: "name"
        id: 0
      client: "client"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      permission: "permission"
      id: 0
      status: "status"
  ObjectStorageBucketNFSClientResp:
    type: "object"
    required:
    - "os_bucket_nfs_client"
    properties:
      os_bucket_nfs_client:
        description: "nfs client of object storage bucket"
        $ref: "#/definitions/ObjectStorageBucketNFSClient"
    title: "ObjectStorageBucketNFSClientResp"
    example:
      os_bucket_nfs_client:
        bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        client: "client"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        permission: "permission"
        id: 0
        status: "status"
  ObjectStorageBucketNFSClientUpdateReq:
    type: "object"
    required:
    - "os_bucket_nfs_client"
    properties:
      os_bucket_nfs_client:
        $ref: "#/definitions/ObjectStorageBucketNFSClientUpdateReq_Client"
    title: "ObjectStorageBucketNFSClientUpdateReq"
  ObjectStorageBucketNFSClientUpdateReq_Client:
    type: "object"
    properties:
      permission:
        type: "string"
    title: "ObjectStorageBucketNFSClientUpdateReq_Client"
  ObjectStorageBucketNFSClientsCreateReq:
    type: "object"
    required:
    - "os_bucket_nfs_clients"
    properties:
      os_bucket_nfs_clients:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageBucketNFSClientsCreateReq_Clients_Elt"
    title: "ObjectStorageBucketNFSClientsCreateReq"
  ObjectStorageBucketNFSClientsCreateReq_Clients_Elt:
    type: "object"
    required:
    - "client"
    - "permission"
    properties:
      client:
        type: "string"
      permission:
        type: "string"
    title: "ObjectStorageBucketNFSClientsCreateReq_Clients_Elt"
  ObjectStorageBucketNFSClientsDeleteReq:
    type: "object"
    required:
    - "client_ids"
    properties:
      client_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "ObjectStorageBucketNFSClientsDeleteReq"
  ObjectStorageBucketNFSClientsResp:
    type: "object"
    required:
    - "os_bucket_nfs_clients"
    properties:
      os_bucket_nfs_clients:
        type: "array"
        description: "nfs clients of object storage bucket"
        items:
          $ref: "#/definitions/ObjectStorageBucketNFSClient"
    title: "ObjectStorageBucketNFSClientsResp"
    example:
      os_bucket_nfs_clients:
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        client: "client"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        permission: "permission"
        id: 0
        status: "status"
      - bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        client: "client"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        permission: "permission"
        id: 0
        status: "status"
  ObjectStorageBucketRecord:
    title: "ObjectStorageBucketRecord"
    allOf:
    - $ref: "#/definitions/ObjectStorageBucket"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/ObjectStorageBucketStat"
    description: "ObjectStorageBucketRecord is used to combine ObjectStorageBucket\
      \ and\nObjectStorageBucketStat"
  ObjectStorageBucketResp:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        description: "record of object storage bucket"
        $ref: "#/definitions/ObjectStorageBucketRecord"
    title: "ObjectStorageBucketResp"
    example:
      os_bucket: ""
  ObjectStorageBucketSamplesElem:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      paging:
        $ref: "#/definitions/Paging"
      samples:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageBucketStat"
    title: "ObjectStorageBucketSamplesElem"
    example:
      paging:
        duration: 1
        next: "next"
        period: "period"
        offset: 5
        total_count: 2
        count: 6
        duration_end: "2000-01-23T04:56:07.000+00:00"
        limit: 5
        truncated: true
        duration_begin: "2000-01-23T04:56:07.000+00:00"
      id: 0
      samples:
      - ""
      - ""
  ObjectStorageBucketSamplesResp:
    type: "object"
    required:
    - "os_bucket_samples"
    properties:
      os_bucket_samples:
        type: "array"
        description: "object storage bucket samples"
        items:
          $ref: "#/definitions/ObjectStorageBucketStat"
    title: "ObjectStorageBucketSamplesResp"
    example:
      os_bucket_samples:
      - ""
      - ""
  ObjectStorageBucketStat:
    title: "ObjectStorageBucketStat"
    allOf:
    - $ref: "#/definitions/OSSample"
    - properties:
        allocated_objects:
          type: "integer"
          format: "int64"
        allocated_size:
          type: "integer"
          format: "int64"
        create:
          type: "string"
          format: "date-time"
        del_ops_pm:
          type: "number"
          format: "double"
        down_latency_us:
          type: "number"
          format: "double"
        latency_down:
          type: "integer"
          format: "int64"
        latency_up:
          type: "integer"
          format: "int64"
        num_down:
          type: "integer"
          format: "int64"
        num_up:
          type: "integer"
          format: "int64"
        rx_bandwidth_kbyte:
          type: "number"
          format: "double"
        rx_ops_pm:
          type: "number"
          format: "double"
        total_del_ops:
          type: "integer"
          format: "int64"
        total_del_success_ops:
          type: "integer"
          format: "int64"
        total_rx_bytes:
          type: "integer"
          format: "int64"
        total_rx_ops:
          type: "integer"
          format: "int64"
        total_rx_success_ops:
          type: "integer"
          format: "int64"
        total_tx_bytes:
          type: "integer"
          format: "int64"
        total_tx_ops:
          type: "integer"
          format: "int64"
        total_tx_success_ops:
          type: "integer"
          format: "int64"
        tx_bandwidth_kbyte:
          type: "number"
          format: "double"
        tx_ops_pm:
          type: "number"
          format: "double"
        up_latency_us:
          type: "number"
          format: "double"
    description: "ObjectStorageBucketStat define the object storage bucket statistics"
  ObjectStorageBucketUpdateReq:
    type: "object"
    properties:
      os_bucket:
        $ref: "#/definitions/ObjectStorageBucketUpdateReq_Bucket"
    title: "ObjectStorageBucketUpdateReq"
    example:
      os_bucket:
        owner_permission: "owner_permission"
        flag:
          versions_suspended: true
          worm: true
          versioned: true
        auth_user_permission: "auth_user_permission"
        owner_id: 0
        quota_max_objects: 6
        quota_max_size: 1
        all_user_permission: "all_user_permission"
        log_delivery_permission: "log_delivery_permission"
  ObjectStorageBucketUpdateReq_Bucket:
    type: "object"
    properties:
      all_user_permission:
        type: "string"
      auth_user_permission:
        type: "string"
      flag:
        $ref: "#/definitions/BucketFlagReq"
      log_delivery_permission:
        type: "string"
      owner_id:
        type: "integer"
        format: "int64"
      owner_permission:
        type: "string"
      quota_max_objects:
        type: "integer"
        format: "int64"
      quota_max_size:
        type: "integer"
        format: "int64"
    title: "ObjectStorageBucketUpdateReq_Bucket"
    example:
      owner_permission: "owner_permission"
      flag:
        versions_suspended: true
        worm: true
        versioned: true
      auth_user_permission: "auth_user_permission"
      owner_id: 0
      quota_max_objects: 6
      quota_max_size: 1
      all_user_permission: "all_user_permission"
      log_delivery_permission: "log_delivery_permission"
  ObjectStorageBucket_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      lifecycle:
        $ref: "#/definitions/ObjectStorageBucket_Nestview_lifecycle"
      name:
        type: "string"
    title: "ObjectStorageBucket_Nestview"
    example:
      lifecycle:
        rules:
        - "{}"
        - "{}"
        id: 6
        status: "status"
      name: "name"
      id: 0
  ObjectStorageBucketsResp:
    type: "object"
    required:
    - "os_buckets"
    properties:
      os_buckets:
        type: "array"
        description: "records of object storage bucket"
        items:
          $ref: "#/definitions/ObjectStorageBucketRecord"
    title: "ObjectStorageBucketsResp"
    example:
      os_buckets:
      - ""
      - ""
  ObjectStorageGateway:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      gateway_ip:
        type: "string"
      gateway_name:
        type: "string"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      os_zone:
        $ref: "#/definitions/ObjectStorageZone_Nestview"
      port:
        type: "integer"
        format: "int64"
      role:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "ObjectStorageGateway"
    description: "ObjectStorageGateway is the model of object_storage_gateway @grpc-models-proto"
  ObjectStorageGatewayCreateReq:
    type: "object"
    properties:
      os_gateway:
        $ref: "#/definitions/ObjectStorageGatewayCreateReq_Gateway"
    title: "ObjectStorageGatewayCreateReq"
    example:
      os_gateway:
        role: "role"
        port: 6
        name: "name"
        description: "description"
        gateway_ip: "gateway_ip"
        host_id: 0
  ObjectStorageGatewayCreateReq_Gateway:
    type: "object"
    required:
    - "host_id"
    - "name"
    - "port"
    properties:
      description:
        type: "string"
      gateway_ip:
        type: "string"
      host_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      role:
        type: "string"
    title: "ObjectStorageGatewayCreateReq_Gateway"
    example:
      role: "role"
      port: 6
      name: "name"
      description: "description"
      gateway_ip: "gateway_ip"
      host_id: 0
  ObjectStorageGatewayRecord:
    title: "ObjectStorageGatewayRecord"
    allOf:
    - $ref: "#/definitions/ObjectStorageGateway"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/ObjectStorageGatewayStat"
    description: "ObjectStorageGatewayRecord combine ObjectStorageGateway and\nObjectStorageGatewayStat\
      \ as API response"
  ObjectStorageGatewayResp:
    type: "object"
    required:
    - "os_gateway"
    properties:
      os_gateway:
        description: "object storage gateway"
        $ref: "#/definitions/ObjectStorageGatewayRecord"
    title: "ObjectStorageGatewayResp"
    example:
      os_gateway: ""
  ObjectStorageGatewaySamplesResp:
    type: "object"
    required:
    - "os_gateway_samples"
    properties:
      os_gateway_samples:
        type: "array"
        description: "object storage gateway samples"
        items:
          $ref: "#/definitions/ObjectStorageGatewayStat"
    title: "ObjectStorageGatewaySamplesResp"
    example:
      os_gateway_samples:
      - up_bandwidth_kbyte: 3.616076749251911
        up_ops: 2.027123023002322
        down_bandwidth_kbyte: 6.027456183070403
        down_ops: 1.4658129805029452
        sync_down_ops: 9.301444243932576
        merge_speed: 5
        mem_usage_percent: 5.962133916683182
        create: "2000-01-23T04:56:07.000+00:00"
        requests: 2
        sync_down_bandwidth_kbyte: 7.061401241503109
        cpu_util: 0.8008281904610115
      - up_bandwidth_kbyte: 3.616076749251911
        up_ops: 2.027123023002322
        down_bandwidth_kbyte: 6.027456183070403
        down_ops: 1.4658129805029452
        sync_down_ops: 9.301444243932576
        merge_speed: 5
        mem_usage_percent: 5.962133916683182
        create: "2000-01-23T04:56:07.000+00:00"
        requests: 2
        sync_down_bandwidth_kbyte: 7.061401241503109
        cpu_util: 0.8008281904610115
  ObjectStorageGatewayStat:
    type: "object"
    properties:
      cpu_util:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      down_bandwidth_kbyte:
        type: "number"
        format: "double"
      down_ops:
        type: "number"
        format: "double"
      mem_usage_percent:
        type: "number"
        format: "double"
      merge_speed:
        type: "integer"
        format: "int64"
      requests:
        type: "integer"
        format: "int64"
      sync_down_bandwidth_kbyte:
        type: "number"
        format: "double"
      sync_down_ops:
        type: "number"
        format: "double"
      up_bandwidth_kbyte:
        type: "number"
        format: "double"
      up_ops:
        type: "number"
        format: "double"
    title: "ObjectStorageGatewayStat"
    description: "ObjectStorageGatewayStat is the model of object_storage_gateway_stat"
    example:
      up_bandwidth_kbyte: 3.616076749251911
      up_ops: 2.027123023002322
      down_bandwidth_kbyte: 6.027456183070403
      down_ops: 1.4658129805029452
      sync_down_ops: 9.301444243932576
      merge_speed: 5
      mem_usage_percent: 5.962133916683182
      create: "2000-01-23T04:56:07.000+00:00"
      requests: 2
      sync_down_bandwidth_kbyte: 7.061401241503109
      cpu_util: 0.8008281904610115
  ObjectStorageGatewayUpdateReq:
    type: "object"
    properties:
      os_gateway:
        $ref: "#/definitions/ObjectStorageGatewayUpdateReq_Gateway"
    title: "ObjectStorageGatewayUpdateReq"
    example:
      os_gateway:
        action: "action"
  ObjectStorageGatewayUpdateReq_Gateway:
    type: "object"
    properties:
      action:
        type: "string"
    title: "ObjectStorageGatewayUpdateReq_Gateway"
    example:
      action: "action"
  ObjectStorageGatewaysResp:
    type: "object"
    required:
    - "os_gateways"
    properties:
      os_gateways:
        type: "array"
        description: "object storage gateways"
        items:
          $ref: "#/definitions/ObjectStorageGatewayRecord"
    title: "ObjectStorageGatewaysResp"
    example:
      os_gateways:
      - ""
      - ""
  ObjectStorageInitReq:
    type: "object"
    required:
    - "object_storage"
    properties:
      object_storage:
        $ref: "#/definitions/ObjectStorageInitReq_Info"
    title: "ObjectStorageInitReq"
    example:
      object_storage:
        pool_id: 0
  ObjectStorageInitReq_Info:
    type: "object"
    required:
    - "pool_id"
    properties:
      pool_id:
        type: "integer"
        format: "int64"
        description: "system pool id"
    title: "ObjectStorageInitReq_Info"
    example:
      pool_id: 0
  ObjectStorageKey:
    type: "object"
    properties:
      access_key:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      reserved:
        type: "boolean"
      secret_key:
        type: "string"
      status:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      user:
        $ref: "#/definitions/ObjectStorageUser_Nestview"
    title: "ObjectStorageKey"
    description: "ObjectStorageKey defines access key and secret key for object storage"
    example:
      secret_key: "secret_key"
      reserved: true
      access_key: "access_key"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      type: "type"
      user:
        name: "name"
        id: 1
      status: "status"
  ObjectStorageKeyCreateReq:
    type: "object"
    properties:
      os_key:
        $ref: "#/definitions/ObjectStorageKeyCreateReq_Key"
    title: "ObjectStorageKeyCreateReq"
    example:
      os_key:
        secret_key: "secret_key"
        user_id: 0
        access_key: "access_key"
  ObjectStorageKeyCreateReq_Key:
    type: "object"
    required:
    - "access_key"
    - "user_id"
    properties:
      access_key:
        type: "string"
      secret_key:
        type: "string"
      user_id:
        type: "integer"
        format: "int64"
    title: "ObjectStorageKeyCreateReq_Key"
    example:
      secret_key: "secret_key"
      user_id: 0
      access_key: "access_key"
  ObjectStorageKeyResp:
    type: "object"
    required:
    - "os_key"
    properties:
      os_key:
        description: "object storage key"
        $ref: "#/definitions/ObjectStorageKey"
    title: "ObjectStorageKeyResp"
    example:
      os_key:
        secret_key: "secret_key"
        reserved: true
        access_key: "access_key"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        user:
          name: "name"
          id: 1
        status: "status"
  ObjectStorageKeyUpdateReq:
    type: "object"
    properties:
      os_key:
        $ref: "#/definitions/ObjectStorageKeyUpdateReq_Key"
    title: "ObjectStorageKeyUpdateReq"
    example:
      os_key:
        secret_key: "secret_key"
  ObjectStorageKeyUpdateReq_Key:
    type: "object"
    properties:
      secret_key:
        type: "string"
    title: "ObjectStorageKeyUpdateReq_Key"
    example:
      secret_key: "secret_key"
  ObjectStorageKey_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "ObjectStorageKey_Nestview"
    example:
      id: 5
  ObjectStorageKeysResp:
    type: "object"
    required:
    - "os_keys"
    properties:
      os_keys:
        type: "array"
        description: "object storage keys"
        items:
          $ref: "#/definitions/ObjectStorageKey"
    title: "ObjectStorageKeysResp"
    example:
      os_keys:
      - secret_key: "secret_key"
        reserved: true
        access_key: "access_key"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        user:
          name: "name"
          id: 1
        status: "status"
      - secret_key: "secret_key"
        reserved: true
        access_key: "access_key"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        user:
          name: "name"
          id: 1
        status: "status"
  ObjectStorageLifecycle:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      rules:
        type: "array"
        items:
          type: "object"
          properties: {}
      status:
        type: "string"
    title: "ObjectStorageLifecycle"
    description: "ObjectStorageLifecycle is the model of object_storage_lifecycle"
    example:
      rules:
      - "{}"
      - "{}"
      id: 6
      status: "status"
  ObjectStorageLifecycleResp:
    type: "object"
    required:
    - "os_lifecycle"
    properties:
      os_lifecycle:
        description: "object storage lifecycle"
        $ref: "#/definitions/ObjectStorageLifecycle"
    title: "ObjectStorageLifecycleResp"
    example:
      os_lifecycle:
        rules:
        - "{}"
        - "{}"
        id: 6
        status: "status"
  ObjectStorageLifecycleSetReq:
    type: "object"
    properties:
      lifecycle_rules:
        type: "array"
        items:
          $ref: "#/definitions/LifecycleRule"
    title: "ObjectStorageLifecycleSetReq"
    example:
      lifecycle_rules:
      - prefix: "prefix"
        name: "name"
        expiration: {}
        transitions:
        - storage_class: "storage_class"
          type: "type"
        - storage_class: "storage_class"
          type: "type"
        enabled: true
      - prefix: "prefix"
        name: "name"
        expiration: {}
        transitions:
        - storage_class: "storage_class"
          type: "type"
        - storage_class: "storage_class"
          type: "type"
        enabled: true
  ObjectStorageLifecyclesResp:
    type: "object"
    required:
    - "os_lifecycles"
    properties:
      os_lifecycles:
        type: "array"
        description: "object storage lifecycles"
        items:
          $ref: "#/definitions/ObjectStorageLifecycle"
    title: "ObjectStorageLifecyclesResp"
    example:
      os_lifecycles:
      - rules:
        - "{}"
        - "{}"
        id: 6
        status: "status"
      - rules:
        - "{}"
        - "{}"
        id: 6
        status: "status"
  ObjectStoragePoliciesResp:
    type: "object"
    required:
    - "os_policies"
    properties:
      os_policies:
        type: "array"
        description: "object storage policies"
        items:
          $ref: "#/definitions/ObjectStoragePolicy"
    title: "ObjectStoragePoliciesResp"
    example:
      os_policies:
      - shared: true
        cache_pool:
          name: "name"
          id: 5
        compress: true
        description: "description"
        policy_name: "policy_name"
        update: "2000-01-23T04:56:07.000+00:00"
        bucket_num: 0
        crypto: true
        index_pool:
          name: "name"
          id: 5
        object_size_threshold: 1
        default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
      - shared: true
        cache_pool:
          name: "name"
          id: 5
        compress: true
        description: "description"
        policy_name: "policy_name"
        update: "2000-01-23T04:56:07.000+00:00"
        bucket_num: 0
        crypto: true
        index_pool:
          name: "name"
          id: 5
        object_size_threshold: 1
        default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
  ObjectStoragePolicy:
    type: "object"
    properties:
      bucket_num:
        type: "integer"
        format: "int64"
      cache_pool:
        $ref: "#/definitions/Pool_Nestview"
      compress:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      crypto:
        type: "boolean"
      default:
        type: "boolean"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      index_pool:
        $ref: "#/definitions/Pool_Nestview"
      name:
        type: "string"
      object_size_threshold:
        type: "integer"
        format: "int64"
      policy_name:
        type: "string"
      shared:
        type: "boolean"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "ObjectStoragePolicy"
    description: "ObjectStoragePolicy is the model of object_storage_policy"
    example:
      shared: true
      cache_pool:
        name: "name"
        id: 5
      compress: true
      description: "description"
      policy_name: "policy_name"
      update: "2000-01-23T04:56:07.000+00:00"
      bucket_num: 0
      crypto: true
      index_pool:
        name: "name"
        id: 5
      object_size_threshold: 1
      default: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 6
      status: "status"
  ObjectStoragePolicyCreateReq:
    type: "object"
    properties:
      os_policy:
        $ref: "#/definitions/ObjectStoragePolicyCreateReq_Policy"
    title: "ObjectStoragePolicyCreateReq"
    example:
      os_policy:
        shared: true
        storage_classes:
        - active_pool_ids:
          - 1
          - 1
          name: "name"
          description: "description"
          class: 5
          inactive_pool_ids:
          - 5
          - 5
        - active_pool_ids:
          - 1
          - 1
          name: "name"
          description: "description"
          class: 5
          inactive_pool_ids:
          - 5
          - 5
        cache_pool_id: 0
        compress: true
        name: "name"
        description: "description"
        index_pool_id: 6
        crypto: true
  ObjectStoragePolicyCreateReq_Policy:
    type: "object"
    required:
    - "index_pool_id"
    - "name"
    - "storage_classes"
    properties:
      cache_pool_id:
        type: "integer"
        format: "int64"
      compress:
        type: "boolean"
      crypto:
        type: "boolean"
      description:
        type: "string"
      index_pool_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      shared:
        type: "boolean"
      storage_classes:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt"
    title: "ObjectStoragePolicyCreateReq_Policy"
    example:
      shared: true
      storage_classes:
      - active_pool_ids:
        - 1
        - 1
        name: "name"
        description: "description"
        class: 5
        inactive_pool_ids:
        - 5
        - 5
      - active_pool_ids:
        - 1
        - 1
        name: "name"
        description: "description"
        class: 5
        inactive_pool_ids:
        - 5
        - 5
      cache_pool_id: 0
      compress: true
      name: "name"
      description: "description"
      index_pool_id: 6
      crypto: true
  ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt:
    type: "object"
    required:
    - "active_pool_ids"
    - "class"
    - "name"
    properties:
      active_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      class:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      inactive_pool_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      name:
        type: "string"
    title: "ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt"
    example:
      active_pool_ids:
      - 1
      - 1
      name: "name"
      description: "description"
      class: 5
      inactive_pool_ids:
      - 5
      - 5
  ObjectStoragePolicyResp:
    type: "object"
    required:
    - "os_policy"
    properties:
      os_policy:
        description: "object storage policy"
        $ref: "#/definitions/ObjectStoragePolicy"
    title: "ObjectStoragePolicyResp"
    example:
      os_policy:
        shared: true
        cache_pool:
          name: "name"
          id: 5
        compress: true
        description: "description"
        policy_name: "policy_name"
        update: "2000-01-23T04:56:07.000+00:00"
        bucket_num: 0
        crypto: true
        index_pool:
          name: "name"
          id: 5
        object_size_threshold: 1
        default: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        status: "status"
  ObjectStoragePolicyUpdateReq:
    type: "object"
    properties:
      os_policy:
        $ref: "#/definitions/ObjectStoragePolicyUpdateReq_Policy"
    title: "ObjectStoragePolicyUpdateReq"
    example:
      os_policy:
        shared: true
        default: true
        cache_pool_id: 0
        compress: true
        description: "description"
        crypto: true
  ObjectStoragePolicyUpdateReq_Policy:
    type: "object"
    properties:
      cache_pool_id:
        type: "integer"
        format: "int64"
      compress:
        type: "boolean"
      crypto:
        type: "boolean"
      default:
        type: "boolean"
      description:
        type: "string"
      shared:
        type: "boolean"
    title: "ObjectStoragePolicyUpdateReq_Policy"
    example:
      shared: true
      default: true
      cache_pool_id: 0
      compress: true
      description: "description"
      crypto: true
  ObjectStoragePolicy_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "ObjectStoragePolicy_Nestview"
    example:
      name: "name"
      id: 9
  ObjectStorageResp:
    type: "object"
    properties:
      object_storage:
        description: "object storage"
        $ref: "#/definitions/ObjectStorage"
    title: "ObjectStorageResp"
    example:
      object_storage:
        second_mergence_enabled: true
        search_enabled: true
        update: "2000-01-23T04:56:07.000+00:00"
        index_pool:
          name: "name"
          id: 5
        lifecycle_start_on: "lifecycle_start_on"
        second_mergence_end_on: "second_mergence_end_on"
        second_mergence_start_on: "second_mergence_start_on"
        multi_zone_enabled: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        lifecycle_end_on: "lifecycle_end_on"
        action_status: "action_status"
        status: "status"
  ObjectStorageSetReq:
    type: "object"
    required:
    - "object_storage"
    properties:
      object_storage:
        $ref: "#/definitions/ObjectStorageSetReq_Info"
    title: "ObjectStorageSetReq"
    example:
      object_storage:
        lifecycle_start_on: "lifecycle_start_on"
        second_mergence_enabled: true
        second_mergence_end_on: "second_mergence_end_on"
        second_mergence_start_on: "second_mergence_start_on"
        lifecycle_end_on: "lifecycle_end_on"
  ObjectStorageSetReq_Info:
    type: "object"
    properties:
      lifecycle_end_on:
        type: "string"
        description: "lifecycle end execute time"
      lifecycle_start_on:
        type: "string"
        description: "lifecycle start execute time"
      second_mergence_enabled:
        type: "boolean"
        description: "SecondMergenceEnabled enable second mergence or not"
      second_mergence_end_on:
        type: "string"
        description: "SecondMergenceEndOn indicates second mergence end time"
      second_mergence_start_on:
        type: "string"
        description: "SecondMergenceStartOn indicates second mergence start time"
    title: "ObjectStorageSetReq_Info"
    example:
      lifecycle_start_on: "lifecycle_start_on"
      second_mergence_enabled: true
      second_mergence_end_on: "second_mergence_end_on"
      second_mergence_start_on: "second_mergence_start_on"
      lifecycle_end_on: "lifecycle_end_on"
  ObjectStorageUser:
    type: "object"
    properties:
      bucket_num:
        type: "integer"
        format: "int64"
      bucket_quota_max_objects:
        type: "integer"
        format: "int64"
      bucket_quota_max_size:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      display_name:
        type: "string"
      email:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      location_constraint_enabled:
        type: "boolean"
      max_buckets:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      op_mask:
        type: "string"
      parent:
        $ref: "#/definitions/ObjectStorageUser_Nestview"
      policy:
        $ref: "#/definitions/ObjectStoragePolicy_Nestview"
      policy_polling_enabled:
        type: "boolean"
      properties:
        $ref: "#/definitions/OSUserProperties"
      status:
        type: "string"
      suspended:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
      user_quota_max_objects:
        type: "integer"
        format: "int64"
      user_quota_max_size:
        type: "integer"
        format: "int64"
    title: "ObjectStorageUser"
    description: "ObjectStorageUser is the model of object_storage_user"
  ObjectStorageUserCreateReq:
    type: "object"
    properties:
      os_user:
        $ref: "#/definitions/ObjectStorageUserCreateReq_Info"
    title: "ObjectStorageUserCreateReq"
    example:
      os_user:
        bucket_quota_max_objects: 0
        policy_id: 5
        keys:
        - secret_key: "secret_key"
          reserved: true
          access_key: "access_key"
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 0
          type: "type"
          user:
            name: "name"
            id: 1
          status: "status"
        - secret_key: "secret_key"
          reserved: true
          access_key: "access_key"
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 0
          type: "type"
          user:
            name: "name"
            id: 1
          status: "status"
        max_buckets: 1
        op_mask: "op_mask"
        user_quota_max_objects: 2
        display_name: "display_name"
        policy_polling_enabled: true
        location_constraint_enabled: true
        name: "name"
        email: "email"
        properties:
          user_type: 5
          contact_person: "contact_person"
          user_name: "user_name"
          area_code: "area_code"
          mobile: "mobile"
          email: "email"
        bucket_quota_max_size: 6
        user_quota_max_size: 7
  ObjectStorageUserCreateReq_Info:
    type: "object"
    required:
    - "name"
    properties:
      bucket_quota_max_objects:
        type: "integer"
        format: "int64"
      bucket_quota_max_size:
        type: "integer"
        format: "int64"
      display_name:
        type: "string"
      email:
        type: "string"
      keys:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageKey"
      location_constraint_enabled:
        type: "boolean"
      max_buckets:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      op_mask:
        type: "string"
      policy_id:
        type: "integer"
        format: "int64"
      policy_polling_enabled:
        type: "boolean"
      properties:
        $ref: "#/definitions/OSUserPropertiesReq"
      user_quota_max_objects:
        type: "integer"
        format: "int64"
      user_quota_max_size:
        type: "integer"
        format: "int64"
    title: "ObjectStorageUserCreateReq_Info"
    example:
      bucket_quota_max_objects: 0
      policy_id: 5
      keys:
      - secret_key: "secret_key"
        reserved: true
        access_key: "access_key"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        user:
          name: "name"
          id: 1
        status: "status"
      - secret_key: "secret_key"
        reserved: true
        access_key: "access_key"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        type: "type"
        user:
          name: "name"
          id: 1
        status: "status"
      max_buckets: 1
      op_mask: "op_mask"
      user_quota_max_objects: 2
      display_name: "display_name"
      policy_polling_enabled: true
      location_constraint_enabled: true
      name: "name"
      email: "email"
      properties:
        user_type: 5
        contact_person: "contact_person"
        user_name: "user_name"
        area_code: "area_code"
        mobile: "mobile"
        email: "email"
      bucket_quota_max_size: 6
      user_quota_max_size: 7
  ObjectStorageUserRecord:
    title: "ObjectStorageUserRecord"
    allOf:
    - $ref: "#/definitions/ObjectStorageUser"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/ObjectStorageUserStat"
    description: "ObjectStorageUserRecord is used to combine ObjectStorageUser and\n\
      ObjectStorageUserStat"
  ObjectStorageUserResp:
    type: "object"
    required:
    - "os_user"
    properties:
      os_user:
        description: "object storage user"
        $ref: "#/definitions/ObjectStorageUserRecord"
    title: "ObjectStorageUserResp"
    example:
      os_user: ""
  ObjectStorageUserSamplesResp:
    type: "object"
    required:
    - "os_user_samples"
    properties:
      os_user_samples:
        type: "array"
        description: "object storage user samples"
        items:
          $ref: "#/definitions/ObjectStorageUserStat"
    title: "ObjectStorageUserSamplesResp"
    example:
      os_user_samples:
      - rx_ops_pm: 5.637376656633329
        total_rx_ops: 3
        allocated_objects: 0
        allocated_size: 6
        tx_ops_pm: 1.4894159098541704
        total_tx_bytes: 4
        total_rx_bytes: 9
        total_tx_success_ops: 1
        total_del_success_ops: 7
        total_rx_success_ops: 2
        total_del_ops: 2
        total_tx_ops: 7
        tx_bandwidth_kbyte: 1.0246457001441578
        del_ops_pm: 1.4658129805029452
        rx_bandwidth_kbyte: 5.962133916683182
        create: "2000-01-23T04:56:07.000+00:00"
      - rx_ops_pm: 5.637376656633329
        total_rx_ops: 3
        allocated_objects: 0
        allocated_size: 6
        tx_ops_pm: 1.4894159098541704
        total_tx_bytes: 4
        total_rx_bytes: 9
        total_tx_success_ops: 1
        total_del_success_ops: 7
        total_rx_success_ops: 2
        total_del_ops: 2
        total_tx_ops: 7
        tx_bandwidth_kbyte: 1.0246457001441578
        del_ops_pm: 1.4658129805029452
        rx_bandwidth_kbyte: 5.962133916683182
        create: "2000-01-23T04:56:07.000+00:00"
  ObjectStorageUserStat:
    type: "object"
    properties:
      allocated_objects:
        type: "integer"
        format: "int64"
      allocated_size:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      del_ops_pm:
        type: "number"
        format: "double"
      rx_bandwidth_kbyte:
        type: "number"
        format: "double"
      rx_ops_pm:
        type: "number"
        format: "double"
      total_del_ops:
        type: "integer"
        format: "int64"
      total_del_success_ops:
        type: "integer"
        format: "int64"
      total_rx_bytes:
        type: "integer"
        format: "int64"
      total_rx_ops:
        type: "integer"
        format: "int64"
      total_rx_success_ops:
        type: "integer"
        format: "int64"
      total_tx_bytes:
        type: "integer"
        format: "int64"
      total_tx_ops:
        type: "integer"
        format: "int64"
      total_tx_success_ops:
        type: "integer"
        format: "int64"
      tx_bandwidth_kbyte:
        type: "number"
        format: "double"
      tx_ops_pm:
        type: "number"
        format: "double"
    title: "ObjectStorageUserStat"
    description: "ObjectStorageUserStat define the object storage user statistics"
    example:
      rx_ops_pm: 5.637376656633329
      total_rx_ops: 3
      allocated_objects: 0
      allocated_size: 6
      tx_ops_pm: 1.4894159098541704
      total_tx_bytes: 4
      total_rx_bytes: 9
      total_tx_success_ops: 1
      total_del_success_ops: 7
      total_rx_success_ops: 2
      total_del_ops: 2
      total_tx_ops: 7
      tx_bandwidth_kbyte: 1.0246457001441578
      del_ops_pm: 1.4658129805029452
      rx_bandwidth_kbyte: 5.962133916683182
      create: "2000-01-23T04:56:07.000+00:00"
  ObjectStorageUserUpdateReq:
    type: "object"
    properties:
      os_user:
        $ref: "#/definitions/ObjectStorageUserUpdateReq_Info"
    title: "ObjectStorageUserUpdateReq"
    example:
      os_user:
        bucket_quota_max_objects: 0
        policy_id: 5
        max_buckets: 1
        op_mask: "op_mask"
        user_quota_max_objects: 5
        display_name: "display_name"
        suspended: true
        policy_polling_enabled: true
        location_constraint_enabled: true
        email: "email"
        properties:
          user_type: 5
          contact_person: "contact_person"
          user_name: "user_name"
          area_code: "area_code"
          mobile: "mobile"
          email: "email"
        bucket_quota_max_size: 6
        user_quota_max_size: 2
  ObjectStorageUserUpdateReq_Info:
    type: "object"
    properties:
      bucket_quota_max_objects:
        type: "integer"
        format: "int64"
      bucket_quota_max_size:
        type: "integer"
        format: "int64"
      display_name:
        type: "string"
      email:
        type: "string"
      location_constraint_enabled:
        type: "boolean"
      max_buckets:
        type: "integer"
        format: "int64"
      op_mask:
        type: "string"
      policy_id:
        type: "integer"
        format: "int64"
      policy_polling_enabled:
        type: "boolean"
      properties:
        $ref: "#/definitions/OSUserPropertiesReq"
      suspended:
        type: "boolean"
      user_quota_max_objects:
        type: "integer"
        format: "int64"
      user_quota_max_size:
        type: "integer"
        format: "int64"
    title: "ObjectStorageUserUpdateReq_Info"
    example:
      bucket_quota_max_objects: 0
      policy_id: 5
      max_buckets: 1
      op_mask: "op_mask"
      user_quota_max_objects: 5
      display_name: "display_name"
      suspended: true
      policy_polling_enabled: true
      location_constraint_enabled: true
      email: "email"
      properties:
        user_type: 5
        contact_person: "contact_person"
        user_name: "user_name"
        area_code: "area_code"
        mobile: "mobile"
        email: "email"
      bucket_quota_max_size: 6
      user_quota_max_size: 2
  ObjectStorageUser_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "ObjectStorageUser_Nestview"
    example:
      name: "name"
      id: 1
  ObjectStorageUsersResp:
    type: "object"
    required:
    - "os_users"
    properties:
      os_users:
        type: "array"
        description: "object storage users"
        items:
          $ref: "#/definitions/ObjectStorageUserRecord"
    title: "ObjectStorageUsersResp"
    example:
      os_users:
      - ""
      - ""
  ObjectStorageZone:
    type: "object"
    properties:
      alias:
        type: "string"
      connected:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      endpoints:
        type: "array"
        items:
          type: "string"
      epoch_uuid:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      local:
        type: "boolean"
      master:
        type: "boolean"
      name:
        type: "string"
      realm_name:
        type: "string"
      remote_cluster:
        $ref: "#/definitions/RemoteCluster_Nestview"
      s3_load_balancer_group:
        $ref: "#/definitions/S3LoadBalancerGroup_Nestview"
      search_zone_uuid:
        type: "string"
      status:
        type: "string"
      switch_status:
        type: "string"
      system_access_key:
        type: "string"
      system_secret_key:
        type: "string"
      system_user:
        type: "string"
      tier_type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
      zonegroup_name:
        type: "string"
    title: "ObjectStorageZone"
    description: "ObjectStorageZone is the model of object_storage_zone"
    example:
      endpoints:
      - "endpoints"
      - "endpoints"
      system_access_key: "system_access_key"
      system_secret_key: "system_secret_key"
      zonegroup_name: "zonegroup_name"
      update: "2000-01-23T04:56:07.000+00:00"
      uuid: "uuid"
      epoch_uuid: "epoch_uuid"
      local: true
      realm_name: "realm_name"
      switch_status: "switch_status"
      master: true
      connected: true
      remote_cluster:
        name: "name"
        id: 2
        fs_id: "fs_id"
        url: "url"
      s3_load_balancer_group:
        name: "name"
        id: 6
        status: "status"
      name: "name"
      alias: "alias"
      create: "2000-01-23T04:56:07.000+00:00"
      search_zone_uuid: "search_zone_uuid"
      id: 0
      system_user: "system_user"
      tier_type: "tier_type"
      status: "status"
  ObjectStorageZoneCreateReq:
    type: "object"
    properties:
      os_zone:
        $ref: "#/definitions/ObjectStorageZoneCreateReq_Zone"
    title: "ObjectStorageZoneCreateReq"
    example:
      os_zone:
        remote_cluster_id: 0
        alias: "alias"
        master: true
  ObjectStorageZoneCreateReq_Zone:
    type: "object"
    required:
    - "master"
    - "remote_cluster_id"
    properties:
      alias:
        type: "string"
        description: "os zone alias"
      master:
        type: "boolean"
        description: "is a master zone"
      remote_cluster_id:
        type: "integer"
        format: "int64"
        description: "remote cluster id"
    title: "ObjectStorageZoneCreateReq_Zone"
    example:
      remote_cluster_id: 0
      alias: "alias"
      master: true
  ObjectStorageZoneRecord:
    title: "ObjectStorageZoneRecord"
    allOf:
    - $ref: "#/definitions/ObjectStorageZone"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/ObjectStorageZoneStat"
    description: "ObjectStorageZoneRecord combine ObjectStorageZone and ObjectStorageZoneStat\
      \ as\nAPI response"
  ObjectStorageZoneRecordResp:
    type: "object"
    properties:
      os_zone:
        $ref: "#/definitions/ObjectStorageZoneRecord"
    title: "ObjectStorageZoneRecordResp"
    example:
      os_zone: ""
  ObjectStorageZoneResp:
    type: "object"
    properties:
      os_zone:
        $ref: "#/definitions/ObjectStorageZone"
    title: "ObjectStorageZoneResp"
    example:
      os_zone:
        endpoints:
        - "endpoints"
        - "endpoints"
        system_access_key: "system_access_key"
        system_secret_key: "system_secret_key"
        zonegroup_name: "zonegroup_name"
        update: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        epoch_uuid: "epoch_uuid"
        local: true
        realm_name: "realm_name"
        switch_status: "switch_status"
        master: true
        connected: true
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        s3_load_balancer_group:
          name: "name"
          id: 6
          status: "status"
        name: "name"
        alias: "alias"
        create: "2000-01-23T04:56:07.000+00:00"
        search_zone_uuid: "search_zone_uuid"
        id: 0
        system_user: "system_user"
        tier_type: "tier_type"
        status: "status"
  ObjectStorageZoneSamplesResp:
    type: "object"
    required:
    - "os_zone_samples"
    properties:
      os_zone_samples:
        type: "array"
        description: "object storage zone samples"
        items:
          $ref: "#/definitions/ObjectStorageZoneStat"
    title: "ObjectStorageZoneSamplesResp"
    example:
      os_zone_samples:
      - object_kbytes_ps: 6.027456183070403
        total_objects: 2
        bandwidth_kbyte: 0.8008281904610115
        total_bytes: 5
        create: "2000-01-23T04:56:07.000+00:00"
        objects_pm: 1.4658129805029452
        total_object_bytes: 5
      - object_kbytes_ps: 6.027456183070403
        total_objects: 2
        bandwidth_kbyte: 0.8008281904610115
        total_bytes: 5
        create: "2000-01-23T04:56:07.000+00:00"
        objects_pm: 1.4658129805029452
        total_object_bytes: 5
  ObjectStorageZoneStat:
    type: "object"
    properties:
      bandwidth_kbyte:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      object_kbytes_ps:
        type: "number"
        format: "double"
      objects_pm:
        type: "number"
        format: "double"
      total_bytes:
        type: "integer"
        format: "int64"
      total_object_bytes:
        type: "integer"
        format: "int64"
      total_objects:
        type: "integer"
        format: "int64"
    title: "ObjectStorageZoneStat"
    description: "ObjectStorageZoneStat contains info of os zone"
    example:
      object_kbytes_ps: 6.027456183070403
      total_objects: 2
      bandwidth_kbyte: 0.8008281904610115
      total_bytes: 5
      create: "2000-01-23T04:56:07.000+00:00"
      objects_pm: 1.4658129805029452
      total_object_bytes: 5
  ObjectStorageZone_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uuid:
        type: "string"
    title: "ObjectStorageZone_Nestview"
    example:
      id: 7
      uuid: "uuid"
  ObjectStorageZonesRecordResp:
    type: "object"
    properties:
      os_zones:
        type: "array"
        items:
          $ref: "#/definitions/ObjectStorageZoneRecord"
    title: "ObjectStorageZonesRecordResp"
    example:
      os_zones:
      - ""
      - ""
  Osd:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      data_dir:
        type: "string"
      disk:
        $ref: "#/definitions/Disk_Nestview"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      in:
        type: "boolean"
      init_time:
        type: "string"
        format: "date-time"
      last_scrub_time:
        type: "string"
        format: "date-time"
      meta_bytes:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      omap_byte:
        type: "integer"
        format: "int64"
      osd_group:
        $ref: "#/definitions/OsdGroup_Nestview"
      osd_id:
        type: "integer"
        format: "int64"
      partition:
        $ref: "#/definitions/Partition"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      read_cache_size:
        type: "integer"
        format: "int64"
      role:
        type: "string"
      status:
        type: "string"
      type:
        type: "string"
      up:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
      uuid:
        type: "string"
    title: "Osd"
    description: "Osd defines the Ceph Osd @grpc-models-proto"
  OsdCreateReq:
    type: "object"
    properties:
      osd:
        $ref: "#/definitions/OsdCreateReq_Osd"
    title: "OsdCreateReq"
    example:
      osd:
        partition_id: 1
        role: "role"
        omap_byte: 6
        read_cache_size: 5
        disk_id: 0
  OsdCreateReq_Osd:
    type: "object"
    properties:
      disk_id:
        type: "integer"
        format: "int64"
        description: "data disk id"
      omap_byte:
        type: "integer"
        format: "int64"
        description: "size of omap partition"
      partition_id:
        type: "integer"
        format: "int64"
        description: "cache partition id"
      read_cache_size:
        type: "integer"
        format: "int64"
        description: "read cache size in bytes"
      role:
        type: "string"
        description: "osd role: \"data\" or \"index\", default is \"data\""
    title: "OsdCreateReq_Osd"
    example:
      partition_id: 1
      role: "role"
      omap_byte: 6
      read_cache_size: 5
      disk_id: 0
  OsdGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      device_type:
        type: "string"
      device_type_check_disabled:
        type: "boolean"
      failure_domain_type:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      osd_async_recovery_max_updates:
        type: "integer"
        format: "int64"
      osd_full_ratio:
        type: "number"
        format: "double"
      osd_num:
        type: "integer"
        format: "int64"
      pools:
        type: "array"
        items:
          $ref: "#/definitions/Pool_Nestview"
      qos:
        $ref: "#/definitions/OsdQos"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "OsdGroup"
    description: "OsdGroup defines model of osd group"
  OsdGroupOsdsUpdateReq:
    type: "object"
    required:
    - "osd_group"
    properties:
      osd_group:
        $ref: "#/definitions/OsdGroupOsdsUpdateReq_OsdGroup"
    title: "OsdGroupOsdsUpdateReq"
    example:
      osd_group:
        osd_ids:
        - 0
        - 0
  OsdGroupOsdsUpdateReq_OsdGroup:
    type: "object"
    required:
    - "osd_ids"
    properties:
      osd_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OsdGroupOsdsUpdateReq_OsdGroup"
    example:
      osd_ids:
      - 0
      - 0
  OsdGroupRecord:
    title: "OsdGroupRecord"
    allOf:
    - $ref: "#/definitions/OsdGroup"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/OsdGroupStat"
    description: "OsdGroupRecord combine OsdGroup and OsdGroupStat as API response"
  OsdGroupResp:
    type: "object"
    properties:
      osd_group:
        $ref: "#/definitions/OsdGroupRecord"
    title: "OsdGroupResp"
    example:
      osd_group: ""
  OsdGroupSamplesResp:
    type: "object"
    required:
    - "osd_group_samples"
    properties:
      osd_group_samples:
        type: "array"
        items:
          $ref: "#/definitions/OsdGroupStat"
    title: "OsdGroupSamplesResp"
    example:
      osd_group_samples:
      - used_kbyte: 6
        total_kbyte: 0
        create: "2000-01-23T04:56:07.000+00:00"
      - used_kbyte: 6
        total_kbyte: 0
        create: "2000-01-23T04:56:07.000+00:00"
  OsdGroupSetQosReq:
    type: "object"
    required:
    - "osd_group"
    properties:
      osd_group:
        $ref: "#/definitions/OsdGroupSetQosReq_OsdGroup"
    title: "OsdGroupSetQosReq"
    example:
      osd_group:
        qos:
          mode: 5
          bandwidth: 0
          bandwidth_max: 6
          id: 5
          client_threshold: 1
          recovery_rate_type: "recovery_rate_type"
  OsdGroupSetQosReq_OsdGroup:
    type: "object"
    required:
    - "qos"
    properties:
      qos:
        $ref: "#/definitions/OsdQos"
    title: "OsdGroupSetQosReq_OsdGroup"
    example:
      qos:
        mode: 5
        bandwidth: 0
        bandwidth_max: 6
        id: 5
        client_threshold: 1
        recovery_rate_type: "recovery_rate_type"
  OsdGroupStat:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      total_kbyte:
        type: "integer"
        format: "int64"
      used_kbyte:
        type: "integer"
        format: "int64"
    title: "OsdGroupStat"
    description: "OsdGroupStat defines stat of a osd group"
    example:
      used_kbyte: 6
      total_kbyte: 0
      create: "2000-01-23T04:56:07.000+00:00"
  OsdGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "OsdGroup_Nestview"
  OsdGroupsResp:
    type: "object"
    properties:
      osd_groups:
        type: "array"
        items:
          $ref: "#/definitions/OsdGroupRecord"
    title: "OsdGroupsResp"
    example:
      osd_groups:
      - ""
      - ""
  OsdPredictionsResp:
    type: "object"
    required:
    - "osd_predictions"
    properties:
      osd_predictions:
        type: "array"
        description: "osd predictions"
        items:
          $ref: "#/definitions/DiskPrediction"
    title: "OsdPredictionsResp"
    example:
      osd_predictions:
      - used_kbyte_30days: 1
        used_kbyte_7days: 5
        used_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        used_kbyte_1day: 6
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
      - used_kbyte_30days: 1
        used_kbyte_7days: 5
        used_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        used_kbyte_1day: 6
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
  OsdQos:
    type: "object"
    properties:
      bandwidth:
        type: "integer"
        format: "int64"
      bandwidth_max:
        type: "integer"
        format: "int64"
      client_threshold:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      mode:
        type: "integer"
        format: "int64"
      recovery_rate_type:
        type: "string"
    title: "OsdQos"
    description: "OsdQos defines qos for osd"
    example:
      mode: 5
      bandwidth: 0
      bandwidth_max: 6
      id: 5
      client_threshold: 1
      recovery_rate_type: "recovery_rate_type"
  OsdRebuildReq:
    type: "object"
    properties:
      osd:
        $ref: "#/definitions/OsdRebuildReq_Osd"
    title: "OsdRebuildReq"
    example:
      osd:
        new_omap_byte: 6
        new_partition_id: 1
        new_read_cache_size: 5
        new_disk_id: 0
  OsdRebuildReq_Osd:
    type: "object"
    properties:
      new_disk_id:
        type: "integer"
        format: "int64"
        description: "new data disk id"
      new_omap_byte:
        type: "integer"
        format: "int64"
        description: "new size of omap partition"
      new_partition_id:
        type: "integer"
        format: "int64"
        description: "new cache partition id"
      new_read_cache_size:
        type: "integer"
        format: "int64"
        description: "new read cache size in bytes"
    title: "OsdRebuildReq_Osd"
    example:
      new_omap_byte: 6
      new_partition_id: 1
      new_read_cache_size: 5
      new_disk_id: 0
  OsdRecord:
    title: "OsdRecord"
    allOf:
    - $ref: "#/definitions/Osd"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/OsdStat"
    description: "OsdRecord contains information of a osd"
  OsdResp:
    type: "object"
    required:
    - "osd"
    properties:
      osd:
        description: "osd"
        $ref: "#/definitions/OsdRecord"
    title: "OsdResp"
    example:
      osd: ""
  OsdSamplesResp:
    type: "object"
    required:
    - "osd_samples"
    properties:
      osd_samples:
        type: "array"
        description: "osd samples"
        items:
          $ref: "#/definitions/OsdStat"
    title: "OsdSamplesResp"
    example:
      osd_samples:
      - ""
      - ""
  OsdStat:
    title: "OsdStat"
    allOf:
    - $ref: "#/definitions/DiskStat"
    - properties:
        create:
          type: "string"
          format: "date-time"
        partition:
          $ref: "#/definitions/PartitionStat"
    description: "OsdStat defines the basic info of a OsdStat"
  OsdUpdateReq:
    type: "object"
    properties:
      osd:
        $ref: "#/definitions/OsdUpdateReq_Osd"
    title: "OsdUpdateReq"
    example:
      osd:
        action_status: "action_status"
        status: "status"
  OsdUpdateReq_Osd:
    type: "object"
    properties:
      action_status:
        type: "string"
      status:
        type: "string"
    title: "OsdUpdateReq_Osd"
    example:
      action_status: "action_status"
      status: "status"
  OsdsAddReq:
    type: "object"
    required:
    - "osd_ids"
    properties:
      osd_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OsdsAddReq"
    example:
      osd_ids:
      - 0
      - 0
  OsdsRemoveReq:
    type: "object"
    required:
    - "osd_ids"
    properties:
      osd_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "OsdsRemoveReq"
    example:
      osd_ids:
      - 0
      - 0
  OsdsResp:
    type: "object"
    required:
    - "osds"
    properties:
      osds:
        type: "array"
        description: "osds"
        items:
          $ref: "#/definitions/OsdRecord"
    title: "OsdsResp"
    example:
      osds:
      - ""
      - ""
  Paging:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
      duration:
        type: "integer"
        format: "int64"
      duration_begin:
        type: "string"
        format: "date-time"
      duration_end:
        type: "string"
        format: "date-time"
      limit:
        type: "integer"
        format: "int64"
      next:
        type: "string"
      offset:
        type: "integer"
        format: "int64"
      period:
        type: "string"
      total_count:
        type: "integer"
        format: "int64"
      truncated:
        type: "boolean"
    title: "Paging"
    description: "Paging defines paging object"
    example:
      duration: 1
      next: "next"
      period: "period"
      offset: 5
      total_count: 2
      count: 6
      duration_end: "2000-01-23T04:56:07.000+00:00"
      limit: 5
      truncated: true
      duration_begin: "2000-01-23T04:56:07.000+00:00"
  Partition:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      disk:
        $ref: "#/definitions/Disk_Nestview"
      id:
        type: "integer"
        format: "int64"
      omap_byte:
        type: "integer"
        format: "int64"
      omap_device_path:
        type: "string"
      path:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      used:
        type: "boolean"
      uuid:
        type: "string"
      version:
        type: "integer"
        format: "int64"
    title: "Partition"
    description: "Partition defines cache partition of disk"
    example:
      omap_device_path: "omap_device_path"
      update: "2000-01-23T04:56:07.000+00:00"
      omap_byte: 1
      used: true
      uuid: "uuid"
      version: 5
      path: "path"
      disk:
        disk_type: "disk_type"
        id: 0
        device: "device"
      size: 5
      create: "2000-01-23T04:56:07.000+00:00"
      id: 6
      action_status: "action_status"
      status: "status"
  PartitionResp:
    type: "object"
    properties:
      partition:
        $ref: "#/definitions/Partition"
    title: "PartitionResp"
    example:
      partition:
        omap_device_path: "omap_device_path"
        update: "2000-01-23T04:56:07.000+00:00"
        omap_byte: 1
        used: true
        uuid: "uuid"
        version: 5
        path: "path"
        disk:
          disk_type: "disk_type"
          id: 0
          device: "device"
        size: 5
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        action_status: "action_status"
        status: "status"
  PartitionStat:
    type: "object"
    properties:
      avg_queue_len:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      io_util:
        type: "number"
        format: "double"
      kbyte_per_io:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_merged_ps:
        type: "number"
        format: "double"
      read_wait_us:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_io_wait_us:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_merged_ps:
        type: "number"
        format: "double"
      write_wait_us:
        type: "number"
        format: "double"
    title: "PartitionStat"
    description: "PartitionStat defines the basic info of a PartitionStat"
  PartitionsCreateReq:
    type: "object"
    properties:
      partitions:
        $ref: "#/definitions/PartitionsCreateReq_Partitions"
    title: "PartitionsCreateReq"
    example:
      partitions:
        num: 0
        omap_byte: 6
  PartitionsCreateReq_Partitions:
    type: "object"
    properties:
      num:
        type: "integer"
        format: "int64"
      omap_byte:
        type: "integer"
        format: "int64"
    title: "PartitionsCreateReq_Partitions"
    example:
      num: 0
      omap_byte: 6
  PartitionsResp:
    type: "object"
    properties:
      partitions:
        type: "array"
        items:
          $ref: "#/definitions/Partition"
    title: "PartitionsResp"
    example:
      partitions:
      - omap_device_path: "omap_device_path"
        update: "2000-01-23T04:56:07.000+00:00"
        omap_byte: 1
        used: true
        uuid: "uuid"
        version: 5
        path: "path"
        disk:
          disk_type: "disk_type"
          id: 0
          device: "device"
        size: 5
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        action_status: "action_status"
        status: "status"
      - omap_device_path: "omap_device_path"
        update: "2000-01-23T04:56:07.000+00:00"
        omap_byte: 1
        used: true
        uuid: "uuid"
        version: 5
        path: "path"
        disk:
          disk_type: "disk_type"
          id: 0
          device: "device"
        size: 5
        create: "2000-01-23T04:56:07.000+00:00"
        id: 6
        action_status: "action_status"
        status: "status"
  PdRecord:
    title: "PdRecord"
    allOf:
    - $ref: "#/definitions/ProtectionDomain"
    description: "PdRecord defines the response content of protection domain related\
      \ API"
  PlacementGroup:
    type: "object"
    properties:
      chunk_id:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      osd_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "PlacementGroup"
    description: "PlacementGroup defines the statistics metric of a placement group\
      \ PG is not\nexposed to user, rename it as chunk"
  PlacementGroupScrub:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      repair_status:
        type: "string"
      repair_time:
        type: "string"
        format: "date-time"
      scrub_status:
        type: "string"
      scrub_time:
        type: "string"
        format: "date-time"
    title: "PlacementGroupScrub"
    description: "PlacementGroupScrub defines the statistics info of placement group"
  PlacementNode:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating placement node"
      id:
        type: "integer"
        format: "int64"
        description: "id of placement node"
      name:
        type: "string"
        description: "name of placement node"
      parent:
        description: "parent of placement node"
        $ref: "#/definitions/PlacementNode"
      properties:
        description: "properties for this placement node like is_witness"
        $ref: "#/definitions/PlacementNodeProperties"
      type:
        type: "string"
        description: "type of placement node"
      update:
        type: "string"
        format: "date-time"
        description: "time of updating placement node"
    title: "PlacementNode"
    description: "PlacementNode defines a placement node managing a range of hosts"
    example:
      parent: null
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 6
      type: "type"
      properties:
        is_witness: true
  PlacementNodeCreateReq:
    type: "object"
    properties:
      placement_node:
        $ref: "#/definitions/PlacementNodeCreateReq_PlacementNode"
    title: "PlacementNodeCreateReq"
    example:
      placement_node:
        is_witness: true
        parent_id: 0
        name: "name"
        type: "type"
  PlacementNodeCreateReq_PlacementNode:
    type: "object"
    required:
    - "name"
    - "parent_id"
    - "type"
    properties:
      is_witness:
        type: "boolean"
      name:
        type: "string"
      parent_id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
    title: "PlacementNodeCreateReq_PlacementNode"
    example:
      is_witness: true
      parent_id: 0
      name: "name"
      type: "type"
  PlacementNodeProperties:
    type: "object"
    properties:
      is_witness:
        type: "boolean"
        description: "whether this is a witness node"
    title: "PlacementNodeProperties"
    description: "PlacementNodeProperties contains properties for a placement node."
    example:
      is_witness: true
  PlacementNodeRecord:
    title: "PlacementNodeRecord"
    allOf:
    - $ref: "#/definitions/PlacementNode"
    - {}
  PlacementNodeResp:
    type: "object"
    required:
    - "placement_node"
    properties:
      placement_node:
        description: "placement node"
        $ref: "#/definitions/PlacementNodeRecord"
    title: "PlacementNodeResp"
    example:
      placement_node: ""
  PlacementNodeTopology:
    title: "PlacementNodeTopology"
    allOf:
    - $ref: "#/definitions/PlacementNode"
    - properties:
        available_osd_num:
          type: "integer"
          format: "int64"
        children:
          type: "array"
          items:
            $ref: "#/definitions/PlacementNodeTopology"
    description: "PlacementNodeTopology defines the response content of placement\
      \ node topology"
  PlacementNodeTopologyResp:
    type: "object"
    required:
    - "topology"
    properties:
      topology:
        description: "topology of placement nodes"
        $ref: "#/definitions/PlacementNodeTopology"
    title: "PlacementNodeTopologyResp"
    example:
      topology: ""
  PlacementNodeUpdateReq:
    type: "object"
    properties:
      placement_node:
        $ref: "#/definitions/PlacementNodeUpdateReq_PlacementNode"
    title: "PlacementNodeUpdateReq"
    example:
      placement_node:
        parent_id: 0
        name: "name"
  PlacementNodeUpdateReq_PlacementNode:
    type: "object"
    required:
    - "name"
    - "parent_id"
    properties:
      name:
        type: "string"
      parent_id:
        type: "integer"
        format: "int64"
    title: "PlacementNodeUpdateReq_PlacementNode"
    example:
      parent_id: 0
      name: "name"
  PlacementNode_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id of placement node"
      parent:
        $ref: "#/definitions/PlacementNode_Nestview_parent"
    title: "PlacementNode_Nestview"
  Pool:
    type: "object"
    properties:
      action_status:
        type: "string"
      block_volume_num:
        type: "integer"
        format: "int64"
      coding_chunk_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      data_chunk_num:
        type: "integer"
        format: "int64"
      default_managed_volume_format:
        type: "integer"
        format: "int64"
      device_type:
        type: "string"
      device_type_check_disabled:
        type: "boolean"
      failure_domain_type:
        type: "string"
      hidden:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      io_bypass_enabled:
        type: "boolean"
      io_bypass_threshold:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      osd_group:
        $ref: "#/definitions/OsdGroup_Nestview"
      osd_num:
        type: "integer"
        format: "int64"
      pool_id:
        type: "integer"
        format: "int32"
      pool_mode:
        type: "string"
      pool_name:
        type: "string"
      pool_role:
        type: "string"
      pool_type:
        type: "string"
      primary_placement_node:
        description: "placement node with the primary replica"
        $ref: "#/definitions/PlacementNode_Nestview"
      property:
        type: "object"
      protection_domain:
        $ref: "#/definitions/ProtectionDomain_Nestview"
      qos:
        $ref: "#/definitions/OsdQos"
      replicate_size:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      stretched:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
    title: "Pool"
    description: "A Pool is a set of temporary objects that may be individually saved\
      \ and\nretrieved.\n\nAny item stored in the Pool may be removed automatically\
      \ at any time without\nnotification. If the Pool holds the only reference when\
      \ this happens, the item\nmight be deallocated.\n\nA Pool is safe for use by\
      \ multiple goroutines simultaneously.\n\nPool's purpose is to cache allocated\
      \ but unused items for later reuse, relieving\npressure on the garbage collector.\
      \ That is, it makes it easy to build efficient,\nthread-safe free lists. However,\
      \ it is not suitable for all free lists.\n\nAn appropriate use of a Pool is\
      \ to manage a group of temporary items silently\nshared among and potentially\
      \ reused by concurrent independent clients of a\npackage. Pool provides a way\
      \ to amortize allocation overhead across many\nclients.\n\nAn example of good\
      \ use of a Pool is in the fmt package, which maintains a\ndynamically-sized\
      \ store of temporary output buffers. The store scales under load\n(when many\
      \ goroutines are actively printing) and shrinks when quiescent.\n\nOn the other\
      \ hand, a free list maintained as part of a short-lived object is not\na suitable\
      \ use for a Pool, since the overhead does not amortize well in that\nscenario.\
      \ It is more efficient to have such objects implement their own free\nlist.\n\
      \nA Pool must not be copied after first use."
  PoolCreateReq:
    type: "object"
    properties:
      pool:
        $ref: "#/definitions/PoolCreateReq_Pool"
    title: "PoolCreateReq"
    example:
      pool:
        data_chunk_num: 6
        failure_domain_type: "failure_domain_type"
        osd_ids:
        - 1
        - 1
        ruleset:
        - placement_node_id: 2
          replicate_num: 7
        - placement_node_id: 2
          replicate_num: 7
        coding_chunk_num: 0
        primary_placement_node_id: 5
        protection_domain_id: 5
        stretched: true
        size: 3
        name: "name"
        pool_role: "pool_role"
        pool_type: "pool_type"
        shared_pool_id: 9
  PoolCreateReq_Pool:
    type: "object"
    properties:
      coding_chunk_num:
        type: "integer"
        format: "int64"
      data_chunk_num:
        type: "integer"
        format: "int64"
      failure_domain_type:
        type: "string"
      name:
        type: "string"
      osd_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      pool_role:
        type: "string"
      pool_type:
        type: "string"
      primary_placement_node_id:
        type: "integer"
        format: "int64"
      protection_domain_id:
        type: "integer"
        format: "int64"
      ruleset:
        type: "array"
        items:
          $ref: "#/definitions/PoolRuleReq"
      shared_pool_id:
        type: "integer"
        format: "int64"
      size:
        type: "integer"
        format: "int64"
      stretched:
        type: "boolean"
    title: "PoolCreateReq_Pool"
    example:
      data_chunk_num: 6
      failure_domain_type: "failure_domain_type"
      osd_ids:
      - 1
      - 1
      ruleset:
      - placement_node_id: 2
        replicate_num: 7
      - placement_node_id: 2
        replicate_num: 7
      coding_chunk_num: 0
      primary_placement_node_id: 5
      protection_domain_id: 5
      stretched: true
      size: 3
      name: "name"
      pool_role: "pool_role"
      pool_type: "pool_type"
      shared_pool_id: 9
  PoolPlacementNode:
    type: "object"
    properties:
      children:
        type: "array"
        items:
          $ref: "#/definitions/PoolPlacementNode"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      placement_node:
        $ref: "#/definitions/PlacementNode"
      replicate_num:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "PoolPlacementNode"
    description: "PoolPlacementNode defines a shadow placement node in a pool"
    example:
      children:
      - null
      - null
      create: "2000-01-23T04:56:07.000+00:00"
      replicate_num: 1
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      placement_node:
        parent: null
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        type: "type"
        properties:
          is_witness: true
      status: "status"
  PoolPrediction:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      data_kbyte_1day:
        type: "integer"
        format: "int64"
      data_kbyte_30days:
        type: "integer"
        format: "int64"
      data_kbyte_7days:
        type: "integer"
        format: "int64"
      data_kbyte_points:
        type: "array"
        items:
          $ref: "#/definitions/PredictionPoint"
      id:
        type: "integer"
        format: "int64"
      used_kbyte_1day:
        type: "integer"
        format: "int64"
      used_kbyte_30days:
        type: "integer"
        format: "int64"
      used_kbyte_7days:
        type: "integer"
        format: "int64"
      used_kbyte_points:
        type: "array"
        items:
          $ref: "#/definitions/PredictionPoint"
    title: "PoolPrediction"
    description: "PoolPrediction contains pool prediction data"
    example:
      used_kbyte_30days: 2
      data_kbyte_1day: 0
      used_kbyte_7days: 7
      used_kbyte_points:
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      data_kbyte_7days: 1
      used_kbyte_1day: 5
      create: "2000-01-23T04:56:07.000+00:00"
      data_kbyte_points:
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      - used_kbyte: 5
        create: "2000-01-23T04:56:07.000+00:00"
      id: 5
      data_kbyte_30days: 6
  PoolPredictionsResp:
    type: "object"
    required:
    - "pool_predictions"
    properties:
      pool_predictions:
        type: "array"
        description: "pool predictions"
        items:
          $ref: "#/definitions/PoolPrediction"
    title: "PoolPredictionsResp"
    example:
      pool_predictions:
      - used_kbyte_30days: 2
        data_kbyte_1day: 0
        used_kbyte_7days: 7
        used_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        data_kbyte_7days: 1
        used_kbyte_1day: 5
        create: "2000-01-23T04:56:07.000+00:00"
        data_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        data_kbyte_30days: 6
      - used_kbyte_30days: 2
        data_kbyte_1day: 0
        used_kbyte_7days: 7
        used_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        data_kbyte_7days: 1
        used_kbyte_1day: 5
        create: "2000-01-23T04:56:07.000+00:00"
        data_kbyte_points:
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        - used_kbyte: 5
          create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        data_kbyte_30days: 6
  PoolRecord:
    title: "PoolRecord"
    allOf:
    - $ref: "#/definitions/Pool"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/PoolStat"
    description: "PoolRecord is used to combine Pool and PoolStat to let API comfortable"
  PoolResp:
    type: "object"
    required:
    - "pool"
    properties:
      pool:
        description: "pool"
        $ref: "#/definitions/PoolRecord"
    title: "PoolResp"
    example:
      pool: ""
  PoolRuleReq:
    type: "object"
    properties:
      placement_node_id:
        type: "integer"
        format: "int64"
      replicate_num:
        type: "integer"
        format: "int64"
    title: "PoolRuleReq"
    example:
      placement_node_id: 2
      replicate_num: 7
  PoolSamplesResp:
    type: "object"
    required:
    - "pool_samples"
    properties:
      pool_samples:
        type: "array"
        description: "pool samples"
        items:
          $ref: "#/definitions/PoolStat"
    title: "PoolSamplesResp"
    example:
      pool_samples:
      - healthy_percent: 9.301444243932576
        error_kbyte: 2
        recovery_percent: 1.1730742509559433
        total_bandwidth_kbyte: 4.965218492984954
        read_latency_us: 1.0246457001441578
        data_kbyte: 1
        read_bandwidth_kbyte: 7.386281948385884
        healthy_num: 7
        recovery_iops: 6.84685269835264
        omap_total_kbyte: 3.616076749251911
        degraded_num: 5
        create: "2000-01-23T04:56:07.000+00:00"
        recovery_bandwidth_kbyte: 1.4894159098541704
        write_iops: 3.5571952270680973
        total_kbyte: 9
        degraded_percent: 5.637376656633329
        unavailable_num: 9
        write_latency_us: 6.965117697638846
        total_iops: 5.025004791520295
        unavailable_percent: 6.683562403749608
        read_iops: 1.2315135367772556
        actual_kbyte: 0
        omap_used_kbyte: 2.027123023002322
        omap_used_percent: 4.145608029883936
        used_kbyte: 8
        write_bandwidth_kbyte: 6.438423552598547
        creating_num: 6
        used_percent: 9.018348186070783
        recovery_num: 7
      - healthy_percent: 9.301444243932576
        error_kbyte: 2
        recovery_percent: 1.1730742509559433
        total_bandwidth_kbyte: 4.965218492984954
        read_latency_us: 1.0246457001441578
        data_kbyte: 1
        read_bandwidth_kbyte: 7.386281948385884
        healthy_num: 7
        recovery_iops: 6.84685269835264
        omap_total_kbyte: 3.616076749251911
        degraded_num: 5
        create: "2000-01-23T04:56:07.000+00:00"
        recovery_bandwidth_kbyte: 1.4894159098541704
        write_iops: 3.5571952270680973
        total_kbyte: 9
        degraded_percent: 5.637376656633329
        unavailable_num: 9
        write_latency_us: 6.965117697638846
        total_iops: 5.025004791520295
        unavailable_percent: 6.683562403749608
        read_iops: 1.2315135367772556
        actual_kbyte: 0
        omap_used_kbyte: 2.027123023002322
        omap_used_percent: 4.145608029883936
        used_kbyte: 8
        write_bandwidth_kbyte: 6.438423552598547
        creating_num: 6
        used_percent: 9.018348186070783
        recovery_num: 7
  PoolStat:
    type: "object"
    properties:
      actual_kbyte:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      creating_num:
        type: "integer"
        format: "int64"
      data_kbyte:
        type: "integer"
        format: "int64"
      degraded_num:
        type: "integer"
        format: "int64"
      degraded_percent:
        type: "number"
        format: "double"
      error_kbyte:
        type: "integer"
        format: "int64"
      healthy_num:
        type: "integer"
        format: "int64"
      healthy_percent:
        type: "number"
        format: "double"
      omap_total_kbyte:
        type: "number"
        format: "double"
      omap_used_kbyte:
        type: "number"
        format: "double"
      omap_used_percent:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      recovery_bandwidth_kbyte:
        type: "number"
        format: "double"
      recovery_iops:
        type: "number"
        format: "double"
      recovery_num:
        type: "integer"
        format: "int64"
      recovery_percent:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      total_kbyte:
        type: "integer"
        format: "int64"
      unavailable_num:
        type: "integer"
        format: "int64"
      unavailable_percent:
        type: "number"
        format: "double"
      used_kbyte:
        type: "integer"
        format: "int64"
      used_percent:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "PoolStat"
    description: "PoolStat contains pool stats data"
    example:
      healthy_percent: 9.301444243932576
      error_kbyte: 2
      recovery_percent: 1.1730742509559433
      total_bandwidth_kbyte: 4.965218492984954
      read_latency_us: 1.0246457001441578
      data_kbyte: 1
      read_bandwidth_kbyte: 7.386281948385884
      healthy_num: 7
      recovery_iops: 6.84685269835264
      omap_total_kbyte: 3.616076749251911
      degraded_num: 5
      create: "2000-01-23T04:56:07.000+00:00"
      recovery_bandwidth_kbyte: 1.4894159098541704
      write_iops: 3.5571952270680973
      total_kbyte: 9
      degraded_percent: 5.637376656633329
      unavailable_num: 9
      write_latency_us: 6.965117697638846
      total_iops: 5.025004791520295
      unavailable_percent: 6.683562403749608
      read_iops: 1.2315135367772556
      actual_kbyte: 0
      omap_used_kbyte: 2.027123023002322
      omap_used_percent: 4.145608029883936
      used_kbyte: 8
      write_bandwidth_kbyte: 6.438423552598547
      creating_num: 6
      used_percent: 9.018348186070783
      recovery_num: 7
  PoolTopologyResp:
    type: "object"
    required:
    - "pool_topology"
    properties:
      pool_topology:
        description: "pool topology"
        $ref: "#/definitions/PoolPlacementNode"
    title: "PoolTopologyResp"
    example:
      pool_topology:
        children:
        - null
        - null
        create: "2000-01-23T04:56:07.000+00:00"
        replicate_num: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        placement_node:
          parent: null
          name: "name"
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 6
          type: "type"
          properties:
            is_witness: true
        status: "status"
  PoolUpdateReq:
    type: "object"
    required:
    - "pool"
    properties:
      pool:
        $ref: "#/definitions/PoolUpdateReq_Pool"
    title: "PoolUpdateReq"
    example:
      pool:
        failure_domain_type: "failure_domain_type"
        io_bypass_enabled: true
        qos:
          mode: 5
          bandwidth: 0
          bandwidth_max: 6
          id: 5
          client_threshold: 1
          recovery_rate_type: "recovery_rate_type"
        size: 5
        name: "name"
        property:
          key: ""
        ruleset:
        - placement_node_id: 2
          replicate_num: 7
        - placement_node_id: 2
          replicate_num: 7
        primary_placement_node_id: 1
        default_managed_volume_format: 0
        io_bypass_threshold: 6
  PoolUpdateReq_Pool:
    type: "object"
    properties:
      default_managed_volume_format:
        type: "integer"
        format: "int64"
        description: "default managed volume format: 128 or 129"
      failure_domain_type:
        type: "string"
      io_bypass_enabled:
        type: "boolean"
      io_bypass_threshold:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      primary_placement_node_id:
        type: "integer"
        format: "int64"
      property:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/RawMessage"
      qos:
        $ref: "#/definitions/OsdQos"
      ruleset:
        type: "array"
        items:
          $ref: "#/definitions/PoolRuleReq"
      size:
        type: "integer"
        format: "int64"
    title: "PoolUpdateReq_Pool"
    example:
      failure_domain_type: "failure_domain_type"
      io_bypass_enabled: true
      qos:
        mode: 5
        bandwidth: 0
        bandwidth_max: 6
        id: 5
        client_threshold: 1
        recovery_rate_type: "recovery_rate_type"
      size: 5
      name: "name"
      property:
        key: ""
      ruleset:
      - placement_node_id: 2
        replicate_num: 7
      - placement_node_id: 2
        replicate_num: 7
      primary_placement_node_id: 1
      default_managed_volume_format: 0
      io_bypass_threshold: 6
  Pool_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "Pool_Nestview"
    example:
      name: "name"
      id: 5
  PoolsResp:
    type: "object"
    required:
    - "pools"
    properties:
      pools:
        type: "array"
        description: "pools"
        items:
          $ref: "#/definitions/PoolRecord"
    title: "PoolsResp"
    example:
      pools:
      - ""
      - ""
  PredictionPoint:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      used_kbyte:
        type: "integer"
        format: "int64"
    title: "PredictionPoint"
    description: "PredictionPoint is a point in a prediction graph"
    example:
      used_kbyte: 5
      create: "2000-01-23T04:56:07.000+00:00"
  ProductFeature:
    type: "object"
    properties:
      functions:
        type: "array"
        items:
          type: "string"
      limits:
        type: "object"
        description: "for viewing only"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      protocols:
        type: "array"
        items:
          type: "string"
    title: "ProductFeature"
    description: "ProductFeature defines product feature"
    example:
      functions:
      - "functions"
      - "functions"
      name: "name"
      protocols:
      - "protocols"
      - "protocols"
      limits:
        key: "limits"
  ProductInfo:
    type: "object"
    properties:
      model:
        type: "string"
      series:
        type: "string"
    title: "ProductInfo"
    description: "ProductInfo defines product info"
    example:
      series: "series"
      model: "model"
  ProductLimits:
    type: "object"
    description: "ProductLimits defines product limits"
    additionalProperties:
      type: "string"
  ProductService:
    type: "object"
    properties:
      expired_time:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      start_time:
        type: "string"
        format: "date-time"
    title: "ProductService"
    description: "ProductService defines product service"
    example:
      start_time: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      expired_time: "2000-01-23T04:56:07.000+00:00"
  ProtectionDomain:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating protection domain"
      description:
        type: "string"
        description: "description of protection domain"
      id:
        type: "integer"
        format: "int64"
        description: "id of protection domain"
      name:
        type: "string"
        description: "name of protection domain"
      placement_node:
        description: "placement node of protection domain"
        $ref: "#/definitions/PlacementNode_Nestview"
      status:
        type: "string"
        description: "status protection domain"
      update:
        type: "string"
        format: "date-time"
        description: "time of updating protection domain"
    title: "ProtectionDomain"
    description: "ProtectionDomain defines protection domain objects"
  ProtectionDomainRecordResp:
    type: "object"
    required:
    - "protection_domain"
    properties:
      protection_domain:
        description: "protection domain"
        $ref: "#/definitions/PdRecord"
    title: "ProtectionDomainRecordResp"
    example:
      protection_domain: ""
  ProtectionDomainRecordsResp:
    type: "object"
    required:
    - "protection_domains"
    properties:
      protection_domains:
        type: "array"
        description: "protection domains"
        items:
          $ref: "#/definitions/PdRecord"
    title: "ProtectionDomainRecordsResp"
    example:
      protection_domains:
      - ""
      - ""
  ProtectionDomain_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id of protection domain"
      name:
        type: "string"
        description: "name of protection domain"
    title: "ProtectionDomain_Nestview"
    example:
      name: "name"
      id: 5
  RawMessage:
    type: "array"
    description: "RawMessage is a raw encoded JSON value. It implements Marshaler\
      \ and Unmarshaler\nand can be used to delay JSON decoding or precompute a JSON\
      \ encoding."
    items:
      type: "string"
      format: "byte"
      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
  RawObjectStorageBucketResp:
    type: "object"
    required:
    - "os_bucket"
    properties:
      os_bucket:
        description: "object storage bucket"
        $ref: "#/definitions/ObjectStorageBucket"
    title: "RawObjectStorageBucketResp"
    example:
      os_bucket:
        owner_permission: "owner_permission"
        replication_uuid: "replication_uuid"
        policy_enabled: true
        logging_suspended: true
        virtual: true
        flag: "{}"
        os_replication_zone_num: 2
        auth_user_permission: "auth_user_permission"
        bucket_policy: "bucket_policy"
        update: "2000-01-23T04:56:07.000+00:00"
        lifecycle:
          rules:
          - "{}"
          - "{}"
          id: 6
          status: "status"
        logging_enabled: true
        logging_owner:
          name: "name"
          id: 1
        specification_objects: 7
        logging_grants:
        - os_user_email: "os_user_email"
          os_user_name: "os_user_name"
          permission: "permission"
          uri: "uri"
        - os_user_email: "os_user_email"
          os_user_name: "os_user_name"
          permission: "permission"
          uri: "uri"
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        quota_max_size: 2
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        policy:
          name: "name"
          id: 9
        owner:
          name: "name"
          id: 1
        os_zone:
          id: 7
          uuid: "uuid"
        os_zone_uuid: "os_zone_uuid"
        log_delivery_permission: "log_delivery_permission"
        logging_prefix: "logging_prefix"
        nfs_client_num: 5
        shards: 4
        metadata_search_enabled: true
        quota_max_objects: 3
        name: "name"
        all_user_permission: "all_user_permission"
        os_replication_path_num: 5
        logging_target_bucket:
          lifecycle:
            rules:
            - "{}"
            - "{}"
            id: 6
            status: "status"
          name: "name"
          id: 0
        status: "status"
  RemoteCluster:
    type: "object"
    properties:
      access_token:
        type: "string"
      block_snapshot_num:
        type: "integer"
        format: "int64"
      block_volume_num:
        type: "integer"
        format: "int64"
      connected:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      dp_site_num:
        type: "integer"
        format: "int64"
      fs_id:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      os_zone_num:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      url:
        type: "string"
      version:
        type: "string"
    title: "RemoteCluster"
    description: "RemoteCluster remote clusters communicated via public API"
    example:
      dp_site_num: 1
      block_volume_num: 6
      update: "2000-01-23T04:56:07.000+00:00"
      version: "version"
      os_zone_num: 5
      url: "url"
      access_token: "access_token"
      block_snapshot_num: 0
      connected: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 5
      fs_id: "fs_id"
      status: "status"
  RemoteClusterCreateReq:
    type: "object"
    properties:
      remote_cluster:
        $ref: "#/definitions/RemoteClusterCreateReq_RemoteCluster"
    title: "RemoteClusterCreateReq"
    example:
      remote_cluster:
        access_token: "access_token"
        url: "url"
  RemoteClusterCreateReq_RemoteCluster:
    type: "object"
    required:
    - "access_token"
    - "url"
    properties:
      access_token:
        type: "string"
        description: "access token of remote cluster"
      url:
        type: "string"
        description: "URL of remote cluster"
    title: "RemoteClusterCreateReq_RemoteCluster"
    example:
      access_token: "access_token"
      url: "url"
  RemoteClusterResp:
    type: "object"
    properties:
      remote_cluster:
        $ref: "#/definitions/RemoteCluster"
    title: "RemoteClusterResp"
    example:
      remote_cluster:
        dp_site_num: 1
        block_volume_num: 6
        update: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        os_zone_num: 5
        url: "url"
        access_token: "access_token"
        block_snapshot_num: 0
        connected: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        fs_id: "fs_id"
        status: "status"
  RemoteClusterUpdateReq:
    type: "object"
    properties:
      remote_cluster:
        $ref: "#/definitions/RemoteClusterUpdateReq_RemoteCluster"
    title: "RemoteClusterUpdateReq"
    example:
      remote_cluster:
        access_token: "access_token"
        url: "url"
  RemoteClusterUpdateReq_RemoteCluster:
    type: "object"
    required:
    - "access_token"
    - "url"
    properties:
      access_token:
        type: "string"
        description: "access token of remote cluster"
      url:
        type: "string"
        description: "URL of remote cluster"
    title: "RemoteClusterUpdateReq_RemoteCluster"
    example:
      access_token: "access_token"
      url: "url"
  RemoteCluster_Nestview:
    type: "object"
    properties:
      fs_id:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      url:
        type: "string"
    title: "RemoteCluster_Nestview"
    example:
      name: "name"
      id: 2
      fs_id: "fs_id"
      url: "url"
  RemoteClustersResp:
    type: "object"
    properties:
      remote_clusters:
        type: "array"
        items:
          $ref: "#/definitions/RemoteCluster"
    title: "RemoteClustersResp"
    example:
      remote_clusters:
      - dp_site_num: 1
        block_volume_num: 6
        update: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        os_zone_num: 5
        url: "url"
        access_token: "access_token"
        block_snapshot_num: 0
        connected: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        fs_id: "fs_id"
        status: "status"
      - dp_site_num: 1
        block_volume_num: 6
        update: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        os_zone_num: 5
        url: "url"
        access_token: "access_token"
        block_snapshot_num: 0
        connected: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        fs_id: "fs_id"
        status: "status"
  RoleMapping:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating identity platform"
      id:
        type: "integer"
        format: "int64"
        description: "id of role mapping"
      identity_platform:
        description: "identity platform of role mapping"
        $ref: "#/definitions/IdentityPlatform_Nestview"
      role:
        type: "string"
        description: "mapped role of sds platform"
      update:
        type: "string"
        format: "date-time"
        description: "time of updating identity platform"
      value:
        type: "string"
        description: "roles of external identity platform"
    title: "RoleMapping"
    description: "RoleMapping defines role mappings for auth"
    example:
      role: "role"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      value: "value"
      identity_platform:
        name: "name"
        id: 6
  RoleMappingCreateReq:
    type: "object"
    properties:
      role_mapping:
        $ref: "#/definitions/RoleMappingCreateReq_Mapping"
    title: "RoleMappingCreateReq"
    example:
      role_mapping:
        role: "role"
        identity_platform_id: 0
        value: "value"
  RoleMappingCreateReq_Mapping:
    type: "object"
    properties:
      identity_platform_id:
        type: "integer"
        format: "int64"
        description: "id of identity platform"
      role:
        type: "string"
        description: "mapped role of sds platform"
      value:
        type: "string"
        description: "roles of identity platform"
    title: "RoleMappingCreateReq_Mapping"
    example:
      role: "role"
      identity_platform_id: 0
      value: "value"
  RoleMappingResp:
    type: "object"
    properties:
      role_mapping:
        description: "role mapping"
        $ref: "#/definitions/RoleMapping"
    title: "RoleMappingResp"
    example:
      role_mapping:
        role: "role"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        value: "value"
        identity_platform:
          name: "name"
          id: 6
  RoleMappingUpdateReq:
    type: "object"
    properties:
      role_mapping:
        $ref: "#/definitions/RoleMappingUpdateReq_Mapping"
    title: "RoleMappingUpdateReq"
    example:
      role_mapping:
        value: "value"
  RoleMappingUpdateReq_Mapping:
    type: "object"
    properties:
      value:
        type: "string"
        description: "roles of identity platform"
    title: "RoleMappingUpdateReq_Mapping"
    example:
      value: "value"
  RoleMappingsResp:
    type: "object"
    properties:
      role_mappings:
        type: "array"
        description: "role mappings"
        items:
          $ref: "#/definitions/RoleMapping"
    title: "RoleMappingsResp"
    example:
      role_mappings:
      - role: "role"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        value: "value"
        identity_platform:
          name: "name"
          id: 6
      - role: "role"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        value: "value"
        identity_platform:
          name: "name"
          id: 6
  S3LoadBalancer:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      group:
        $ref: "#/definitions/S3LoadBalancerGroup_Nestview"
      host:
        $ref: "#/definitions/Host_Nestview"
      https_port:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      interface_name:
        type: "string"
        description: "the interface where vip is bound, exclusive to ip"
      ip:
        type: "string"
        description: "the interface of ip where vip is bound, exclusive to interface_name"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      roles:
        type: "array"
        items:
          type: "string"
      search_https_port:
        type: "integer"
        format: "int64"
      search_port:
        type: "integer"
        format: "int64"
      ssl_certificate:
        $ref: "#/definitions/SSLCertificate_Nestview"
      status:
        type: "string"
      sync_port:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
      vip:
        type: "string"
        description: "designated(master) vip"
      vip_mask:
        type: "integer"
        format: "int64"
        description: "mask of vip, default: 32"
      vips:
        type: "string"
        description: "current effective vips"
      web_console_endpoint:
        type: "string"
    title: "S3LoadBalancer"
    description: "S3LoadBalancer is a load balancer for rados loadBalancers @grpc-models-proto"
  S3LoadBalancerGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      https_port:
        type: "integer"
        format: "int64"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      roles:
        type: "array"
        items:
          type: "string"
      search_https_port:
        type: "integer"
        format: "int64"
      search_port:
        type: "integer"
        format: "int64"
      ssl_certificate:
        $ref: "#/definitions/SSLCertificate_Nestview"
      status:
        type: "string"
      sync_port:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
      web_console_endpoint:
        type: "string"
    title: "S3LoadBalancerGroup"
    description: "S3LoadBalancerGroup groups s3 load balancer with vips"
    example:
      ssl_certificate:
        force_https: true
        name: "name"
        id: 2
      search_port: 5
      roles:
      - "roles"
      - "roles"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      https_port: 0
      search_https_port: 5
      port: 1
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      web_console_endpoint: "web_console_endpoint"
      id: 6
      sync_port: 7
      action_status: "action_status"
      status: "status"
  S3LoadBalancerGroupCreateReq:
    type: "object"
    required:
    - "s3_load_balancer_group"
    properties:
      s3_load_balancer_group:
        $ref: "#/definitions/S3LoadBalancerGroupCreateReq_Group"
    title: "S3LoadBalancerGroupCreateReq"
    example:
      s3_load_balancer_group:
        https_port: 0
        search_https_port: 5
        search_port: 5
        port: 6
        roles:
        - "roles"
        - "roles"
        name: "name"
        description: "description"
        web_console_endpoint: "web_console_endpoint"
        s3_load_balancers:
        - ip: "ip"
          interface_name: "interface_name"
          vip: "vip"
          host_id: 1
        - ip: "ip"
          interface_name: "interface_name"
          vip: "vip"
          host_id: 1
        sync_port: 2
  S3LoadBalancerGroupCreateReq_Group:
    type: "object"
    required:
    - "name"
    - "s3_load_balancers"
    properties:
      description:
        type: "string"
        description: "group description"
      https_port:
        type: "integer"
        format: "int64"
        description: "group access https port"
      name:
        type: "string"
        description: "group name"
      port:
        type: "integer"
        format: "int64"
        description: "group access http port"
      roles:
        type: "array"
        description: "group roles"
        items:
          type: "string"
      s3_load_balancers:
        type: "array"
        description: "s3 load balancers"
        items:
          $ref: "#/definitions/S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt"
      search_https_port:
        type: "integer"
        format: "int64"
        description: "group search https port"
      search_port:
        type: "integer"
        format: "int64"
        description: "group search http port"
      sync_port:
        type: "integer"
        format: "int64"
        description: "group sync http port"
      web_console_endpoint:
        type: "string"
    title: "S3LoadBalancerGroupCreateReq_Group"
    example:
      https_port: 0
      search_https_port: 5
      search_port: 5
      port: 6
      roles:
      - "roles"
      - "roles"
      name: "name"
      description: "description"
      web_console_endpoint: "web_console_endpoint"
      s3_load_balancers:
      - ip: "ip"
        interface_name: "interface_name"
        vip: "vip"
        host_id: 1
      - ip: "ip"
        interface_name: "interface_name"
        vip: "vip"
        host_id: 1
      sync_port: 2
  S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt:
    type: "object"
    required:
    - "host_id"
    - "vip"
    properties:
      host_id:
        type: "integer"
        format: "int64"
        description: "host id of load balancer"
      interface_name:
        type: "string"
        description: "vip will be bounded to interface, exclusive to ip"
      ip:
        type: "string"
        description: "vip will be bounded to interface of the gateway ip, exclusive\
          \ to interface name"
      vip:
        type: "string"
        description: "vip of load balancer"
    title: "S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt"
    example:
      ip: "ip"
      interface_name: "interface_name"
      vip: "vip"
      host_id: 1
  S3LoadBalancerGroupResp:
    type: "object"
    required:
    - "s3_load_balancer_group"
    properties:
      s3_load_balancer_group:
        description: "s3 load balancer group"
        $ref: "#/definitions/S3LoadBalancerGroup"
    title: "S3LoadBalancerGroupResp"
    example:
      s3_load_balancer_group:
        ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        search_port: 5
        roles:
        - "roles"
        - "roles"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        https_port: 0
        search_https_port: 5
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        web_console_endpoint: "web_console_endpoint"
        id: 6
        sync_port: 7
        action_status: "action_status"
        status: "status"
  S3LoadBalancerGroupUpdateReq:
    type: "object"
    required:
    - "s3_load_balancer_group"
    properties:
      s3_load_balancer_group:
        $ref: "#/definitions/S3LoadBalancerGroupUpdateReq_Group"
    title: "S3LoadBalancerGroupUpdateReq"
    example:
      s3_load_balancer_group:
        https_port: 0
        search_https_port: 1
        search_port: 5
        port: 6
        roles:
        - "roles"
        - "roles"
        name: "name"
        description: "description"
        web_console_endpoint: "web_console_endpoint"
        sync_port: 5
  S3LoadBalancerGroupUpdateReq_Group:
    type: "object"
    properties:
      description:
        type: "string"
        description: "group description"
      https_port:
        type: "integer"
        format: "int64"
        description: "group access https port"
      name:
        type: "string"
        description: "group name"
      port:
        type: "integer"
        format: "int64"
        description: "group access http port"
      roles:
        type: "array"
        description: "group roles"
        items:
          type: "string"
      search_https_port:
        type: "integer"
        format: "int64"
        description: "group search https port"
      search_port:
        type: "integer"
        format: "int64"
        description: "group search http port"
      sync_port:
        type: "integer"
        format: "int64"
        description: "group sync http port"
      web_console_endpoint:
        type: "string"
    title: "S3LoadBalancerGroupUpdateReq_Group"
    example:
      https_port: 0
      search_https_port: 1
      search_port: 5
      port: 6
      roles:
      - "roles"
      - "roles"
      name: "name"
      description: "description"
      web_console_endpoint: "web_console_endpoint"
      sync_port: 5
  S3LoadBalancerGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
    title: "S3LoadBalancerGroup_Nestview"
    example:
      name: "name"
      id: 6
      status: "status"
  S3LoadBalancerGroupsResp:
    type: "object"
    required:
    - "s3_load_balancer_groups"
    properties:
      s3_load_balancer_groups:
        type: "array"
        description: "s3 load balancer groups"
        items:
          $ref: "#/definitions/S3LoadBalancerGroup"
    title: "S3LoadBalancerGroupsResp"
    example:
      s3_load_balancer_groups:
      - ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        search_port: 5
        roles:
        - "roles"
        - "roles"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        https_port: 0
        search_https_port: 5
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        web_console_endpoint: "web_console_endpoint"
        id: 6
        sync_port: 7
        action_status: "action_status"
        status: "status"
      - ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        search_port: 5
        roles:
        - "roles"
        - "roles"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        https_port: 0
        search_https_port: 5
        port: 1
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        web_console_endpoint: "web_console_endpoint"
        id: 6
        sync_port: 7
        action_status: "action_status"
        status: "status"
  S3LoadBalancerRecord:
    title: "S3LoadBalancerRecord"
    allOf:
    - $ref: "#/definitions/S3LoadBalancer"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/S3LoadBalancerStat"
    description: "S3LoadBalancerRecord defines s3 load balancer with samples"
  S3LoadBalancerResp:
    type: "object"
    required:
    - "s3_load_balancer"
    properties:
      s3_load_balancer:
        description: "s3 load balancer"
        $ref: "#/definitions/S3LoadBalancerRecord"
    title: "S3LoadBalancerResp"
    example:
      s3_load_balancer: ""
  S3LoadBalancerSamplesElem:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      paging:
        $ref: "#/definitions/Paging"
      samples:
        type: "array"
        items:
          $ref: "#/definitions/S3LoadBalancerStat"
    title: "S3LoadBalancerSamplesElem"
    example:
      paging:
        duration: 1
        next: "next"
        period: "period"
        offset: 5
        total_count: 2
        count: 6
        duration_end: "2000-01-23T04:56:07.000+00:00"
        limit: 5
        truncated: true
        duration_begin: "2000-01-23T04:56:07.000+00:00"
      id: 0
      samples:
      - up_bandwidth_kbyte: 9.301444243932576
        down_bandwidth_kbyte: 5.962133916683182
        success_requests: 7.061401241503109
        mem_usage_percent: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        active_connections: 6.027456183070403
        cpu_util: 1.4658129805029452
        failure_requests: 5.637376656633329
      - up_bandwidth_kbyte: 9.301444243932576
        down_bandwidth_kbyte: 5.962133916683182
        success_requests: 7.061401241503109
        mem_usage_percent: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        active_connections: 6.027456183070403
        cpu_util: 1.4658129805029452
        failure_requests: 5.637376656633329
  S3LoadBalancerSamplesResp:
    type: "object"
    required:
    - "s3_load_balancer_samples"
    properties:
      s3_load_balancer_samples:
        type: "array"
        description: "s3 load balancer samples"
        items:
          $ref: "#/definitions/S3LoadBalancerStat"
    title: "S3LoadBalancerSamplesResp"
    example:
      s3_load_balancer_samples:
      - up_bandwidth_kbyte: 9.301444243932576
        down_bandwidth_kbyte: 5.962133916683182
        success_requests: 7.061401241503109
        mem_usage_percent: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        active_connections: 6.027456183070403
        cpu_util: 1.4658129805029452
        failure_requests: 5.637376656633329
      - up_bandwidth_kbyte: 9.301444243932576
        down_bandwidth_kbyte: 5.962133916683182
        success_requests: 7.061401241503109
        mem_usage_percent: 2.3021358869347655
        create: "2000-01-23T04:56:07.000+00:00"
        active_connections: 6.027456183070403
        cpu_util: 1.4658129805029452
        failure_requests: 5.637376656633329
  S3LoadBalancerStat:
    type: "object"
    properties:
      active_connections:
        type: "number"
        format: "double"
      cpu_util:
        type: "number"
        format: "double"
      create:
        type: "string"
        format: "date-time"
      down_bandwidth_kbyte:
        type: "number"
        format: "double"
      failure_requests:
        type: "number"
        format: "double"
      mem_usage_percent:
        type: "number"
        format: "double"
      success_requests:
        type: "number"
        format: "double"
      up_bandwidth_kbyte:
        type: "number"
        format: "double"
    title: "S3LoadBalancerStat"
    description: "S3LoadBalancerStat define s3 load balancer stat info"
    example:
      up_bandwidth_kbyte: 9.301444243932576
      down_bandwidth_kbyte: 5.962133916683182
      success_requests: 7.061401241503109
      mem_usage_percent: 2.3021358869347655
      create: "2000-01-23T04:56:07.000+00:00"
      active_connections: 6.027456183070403
      cpu_util: 1.4658129805029452
      failure_requests: 5.637376656633329
  S3LoadBalancersAddReq:
    type: "object"
    required:
    - "s3_load_balancers"
    properties:
      s3_load_balancers:
        type: "array"
        items:
          $ref: "#/definitions/S3LoadBalancersAddReq_LoadBalancers_Elt"
    title: "S3LoadBalancersAddReq"
    example:
      s3_load_balancers:
      - ip: "ip"
        interface_name: "interface_name"
        vip: "vip"
        host_id: 0
      - ip: "ip"
        interface_name: "interface_name"
        vip: "vip"
        host_id: 0
  S3LoadBalancersAddReq_LoadBalancers_Elt:
    type: "object"
    required:
    - "host_id"
    - "vip"
    properties:
      host_id:
        type: "integer"
        format: "int64"
        description: "host of load balancer"
      interface_name:
        type: "string"
        description: "vip will be bound to interface, exclusive to ip"
      ip:
        type: "string"
        description: "vip will be bound to interface of the gateway ip, exclusive\
          \ to interface_name"
      vip:
        type: "string"
        description: "vip of load balancer"
    title: "S3LoadBalancersAddReq_LoadBalancers_Elt"
    example:
      ip: "ip"
      interface_name: "interface_name"
      vip: "vip"
      host_id: 0
  S3LoadBalancersRemoveReq:
    type: "object"
    required:
    - "s3_load_balancer_ids"
    properties:
      s3_load_balancer_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "S3LoadBalancersRemoveReq"
    example:
      s3_load_balancer_ids:
      - 0
      - 0
  S3LoadBalancersResp:
    type: "object"
    required:
    - "s3_load_balancers"
    properties:
      s3_load_balancers:
        type: "array"
        description: "s3 load balancers"
        items:
          $ref: "#/definitions/S3LoadBalancerRecord"
    title: "S3LoadBalancersResp"
    example:
      s3_load_balancers:
      - ""
      - ""
  SSLCertificate:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "created time of certificate"
      description:
        type: "string"
        description: "certificate description"
      enabled:
        type: "boolean"
        description: "enabled or not"
      force_https:
        type: "boolean"
        description: "redirect http request to https"
      id:
        type: "integer"
        format: "int64"
        description: "certificate id"
      issuer:
        type: "object"
        description: "issuer info"
        properties: {}
      name:
        type: "string"
        description: "certificate name"
      not_after:
        type: "string"
        format: "date-time"
        description: "validity is not after the time"
      not_before:
        type: "string"
        format: "date-time"
        description: "validity is not before the time"
      permitted_dns_domains:
        type: "array"
        description: "permitted dns domains"
        items:
          type: "object"
          properties: {}
      public_key_algorithm:
        type: "string"
        description: "public key algorithm"
      raw_certificate:
        type: "string"
        description: "public certificate"
      signature_algorithm:
        type: "string"
        description: "signature algorithm"
      status:
        type: "string"
      subject:
        type: "object"
        description: "subject info"
        properties: {}
      type:
        type: "string"
        description: "applied type: admin, s3"
      update:
        type: "string"
        format: "date-time"
        description: "updated time of certificate"
      version:
        type: "integer"
        format: "int64"
        description: "certificate version"
    title: "SSLCertificate"
    description: "SSLCertificate ssl certificate model @grpc-models-proto"
    example:
      not_before: "2000-01-23T04:56:07.000+00:00"
      subject: "{}"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      version: 6
      enabled: true
      issuer: "{}"
      not_after: "2000-01-23T04:56:07.000+00:00"
      force_https: true
      raw_certificate: "raw_certificate"
      permitted_dns_domains:
      - "{}"
      - "{}"
      public_key_algorithm: "public_key_algorithm"
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      signature_algorithm: "signature_algorithm"
      id: 0
      status: "status"
  SSLCertificateCreateReq:
    type: "object"
    required:
    - "ssl_certificate"
    properties:
      ssl_certificate:
        $ref: "#/definitions/SSLCertificateCreateReq_Certificate"
    title: "SSLCertificateCreateReq"
  SSLCertificateCreateReq_Certificate:
    type: "object"
    required:
    - "certificate"
    - "name"
    - "private_key"
    properties:
      certificate:
        type: "string"
        description: "certificate in pem"
      description:
        type: "string"
        description: "certificate description"
      name:
        type: "string"
        description: "certificate name"
      private_key:
        type: "string"
        description: "private key in pem"
    title: "SSLCertificateCreateReq_Certificate"
  SSLCertificateResp:
    type: "object"
    required:
    - "ssl_certificate"
    properties:
      ssl_certificate:
        description: "ssl certificate"
        $ref: "#/definitions/SSLCertificate"
    title: "SSLCertificateResp"
    example:
      ssl_certificate:
        not_before: "2000-01-23T04:56:07.000+00:00"
        subject: "{}"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        version: 6
        enabled: true
        issuer: "{}"
        not_after: "2000-01-23T04:56:07.000+00:00"
        force_https: true
        raw_certificate: "raw_certificate"
        permitted_dns_domains:
        - "{}"
        - "{}"
        public_key_algorithm: "public_key_algorithm"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        signature_algorithm: "signature_algorithm"
        id: 0
        status: "status"
  SSLCertificateUpdateReq:
    type: "object"
    required:
    - "ssl_certificate"
    properties:
      ssl_certificate:
        $ref: "#/definitions/SSLCertificateUpdateReq_Certificate"
    title: "SSLCertificateUpdateReq"
  SSLCertificateUpdateReq_Certificate:
    type: "object"
    properties:
      description:
        type: "string"
        description: "certificate description"
      enabled:
        type: "boolean"
        description: "enabled or not"
      force_https:
        type: "boolean"
        description: "redirect http request to https"
      name:
        type: "string"
        description: "certificate name"
      type:
        type: "string"
        description: "applied type: admin, s3"
    title: "SSLCertificateUpdateReq_Certificate"
  SSLCertificate_Nestview:
    type: "object"
    properties:
      force_https:
        type: "boolean"
        description: "redirect http request to https"
      id:
        type: "integer"
        format: "int64"
        description: "certificate id"
      name:
        type: "string"
        description: "certificate name"
    title: "SSLCertificate_Nestview"
    example:
      force_https: true
      name: "name"
      id: 2
  SSLCertificatesResp:
    type: "object"
    required:
    - "ssl_certificates"
    properties:
      ssl_certificates:
        type: "array"
        description: "ssl certificates"
        items:
          $ref: "#/definitions/SSLCertificate"
    title: "SSLCertificatesResp"
    example:
      ssl_certificates:
      - not_before: "2000-01-23T04:56:07.000+00:00"
        subject: "{}"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        version: 6
        enabled: true
        issuer: "{}"
        not_after: "2000-01-23T04:56:07.000+00:00"
        force_https: true
        raw_certificate: "raw_certificate"
        permitted_dns_domains:
        - "{}"
        - "{}"
        public_key_algorithm: "public_key_algorithm"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        signature_algorithm: "signature_algorithm"
        id: 0
        status: "status"
      - not_before: "2000-01-23T04:56:07.000+00:00"
        subject: "{}"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        version: 6
        enabled: true
        issuer: "{}"
        not_after: "2000-01-23T04:56:07.000+00:00"
        force_https: true
        raw_certificate: "raw_certificate"
        permitted_dns_domains:
        - "{}"
        - "{}"
        public_key_algorithm: "public_key_algorithm"
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        signature_algorithm: "signature_algorithm"
        id: 0
        status: "status"
  Service:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      enabled:
        type: "boolean"
      heartbeat:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      primary:
        type: "boolean"
      ssl_certificate:
        $ref: "#/definitions/SSLCertificate_Nestview"
      started_time:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      type:
        type: "string"
      up:
        type: "boolean"
      update:
        type: "string"
        format: "date-time"
    title: "Service"
    description: "Service defines basic install task, used to as API"
    example:
      ssl_certificate:
        force_https: true
        name: "name"
        id: 2
      heartbeat: "2000-01-23T04:56:07.000+00:00"
      started_time: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      enabled: true
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      up: true
      primary: true
      status: "status"
  ServiceResp:
    type: "object"
    required:
    - "service"
    properties:
      service:
        description: "service"
        $ref: "#/definitions/Service"
    title: "ServiceResp"
    example:
      service:
        ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        heartbeat: "2000-01-23T04:56:07.000+00:00"
        started_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        up: true
        primary: true
        status: "status"
  ServicesResp:
    type: "object"
    required:
    - "services"
    properties:
      services:
        type: "array"
        description: "services"
        items:
          $ref: "#/definitions/Service"
    title: "ServicesResp"
    example:
      services:
      - ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        heartbeat: "2000-01-23T04:56:07.000+00:00"
        started_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        up: true
        primary: true
        status: "status"
      - ssl_certificate:
          force_https: true
          name: "name"
          id: 2
        heartbeat: "2000-01-23T04:56:07.000+00:00"
        started_time: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enabled: true
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        up: true
        primary: true
        status: "status"
  SetOsdFullRatioReq:
    type: "object"
    required:
    - "osd_group"
    properties:
      osd_group:
        $ref: "#/definitions/SetOsdFullRatioReq_OsdGroup"
    title: "SetOsdFullRatioReq"
    example:
      osd_group:
        osd_full_ratio: 0.8008281904610115
  SetOsdFullRatioReq_OsdGroup:
    type: "object"
    required:
    - "osd_full_ratio"
    properties:
      osd_full_ratio:
        type: "number"
        format: "double"
    title: "SetOsdFullRatioReq_OsdGroup"
    example:
      osd_full_ratio: 0.8008281904610115
  SliceStringField:
    type: "array"
    description: "A slice string field."
    items:
      type: "string"
  SmartAttr:
    type: "object"
    properties:
      attr_id:
        type: "integer"
        format: "int64"
        description: "sata only"
      create:
        type: "string"
        format: "date-time"
      flag:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "base"
      raw_value:
        type: "string"
      status:
        type: "string"
      thresh:
        type: "string"
      type:
        type: "string"
      value:
        type: "string"
      when_failed:
        type: "string"
      worst:
        type: "string"
    title: "SmartAttr"
    description: "SmartAttr defines disk smart attribute"
  Snapshot:
    type: "object"
    properties:
      action_status:
        type: "string"
      allocated_size:
        type: "integer"
        format: "int64"
      block_volume_group_snapshot:
        $ref: "#/definitions/VolumeGroupSnapshot_Nestview"
      cloned_block_volume_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      creator:
        type: "string"
      description:
        type: "string"
      hidden:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      passive:
        type: "boolean"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      protected:
        type: "boolean"
      remote_cluster:
        description: "the snapshot is replicated from a remote cluster"
        $ref: "#/definitions/RemoteCluster_Nestview"
      reserved:
        type: "boolean"
      size:
        type: "integer"
        format: "int64"
      snap_name:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      volume:
        $ref: "#/definitions/Volume_Nestview"
    title: "Snapshot"
    description: "Snapshot is the corresponding rbd snapshot"
    example:
      cloned_block_volume_num: 1
      creator: "creator"
      hidden: true
      pool:
        name: "name"
        id: 5
      snap_name: "snap_name"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      allocated_size: 0
      passive: true
      volume:
        original_name: "original_name"
        name: "name"
        id: 9
      protected: true
      size: 7
      remote_cluster:
        name: "name"
        id: 2
        fs_id: "fs_id"
        url: "url"
      reserved: true
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      id: 5
      action_status: "action_status"
      block_volume_group_snapshot:
        name: "name"
        id: 6
      status: "status"
  SnapshotBackupConfig:
    type: "object"
    properties:
      access_key:
        type: "string"
      app_id:
        type: "string"
      bucket:
        type: "string"
      mount_path:
        type: "string"
      password:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      region:
        type: "string"
      secret_key:
        type: "string"
      username:
        type: "string"
    title: "SnapshotBackupConfig"
    description: "SnapshotBackupConfig contains config for snapshot backup"
    example:
      bucket: "bucket"
      secret_key: "secret_key"
      mount_path: "mount_path"
      password: "password"
      port: 0
      access_key: "access_key"
      region: "region"
      app_id: "app_id"
      username: "username"
  SnapshotCreateReq:
    type: "object"
    required:
    - "block_snapshot"
    properties:
      block_snapshot:
        $ref: "#/definitions/SnapshotCreateReq_Snapshot"
    title: "SnapshotCreateReq"
    example:
      block_snapshot:
        block_volume_id: 0
        name: "name"
        description: "description"
  SnapshotCreateReq_Snapshot:
    type: "object"
    required:
    - "block_volume_id"
    - "description"
    - "name"
    properties:
      block_volume_id:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      name:
        type: "string"
    title: "SnapshotCreateReq_Snapshot"
    example:
      block_volume_id: 0
      name: "name"
      description: "description"
  SnapshotReplicationConfig:
    type: "object"
    properties:
      remote_gateway:
        type: "string"
    title: "SnapshotReplicationConfig"
    description: "SnapshotReplicationConfig contains config for snapshot replication"
    example:
      remote_gateway: "remote_gateway"
  SnapshotResp:
    type: "object"
    required:
    - "block_snapshot"
    properties:
      block_snapshot:
        description: "snapshot"
        $ref: "#/definitions/Snapshot"
    title: "SnapshotResp"
    example:
      block_snapshot:
        cloned_block_volume_num: 1
        creator: "creator"
        hidden: true
        pool:
          name: "name"
          id: 5
        snap_name: "snap_name"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        passive: true
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        protected: true
        size: 7
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        reserved: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
  SnapshotUpdateReq:
    type: "object"
    required:
    - "block_snapshot"
    properties:
      block_snapshot:
        $ref: "#/definitions/SnapshotUpdateReq_Snapshot"
    title: "SnapshotUpdateReq"
    example:
      block_snapshot:
        name: "name"
        description: "description"
  SnapshotUpdateReq_Snapshot:
    type: "object"
    properties:
      description:
        type: "string"
      name:
        type: "string"
    title: "SnapshotUpdateReq_Snapshot"
    example:
      name: "name"
      description: "description"
  Snapshot_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "Snapshot_Nestview"
    example:
      name: "name"
      id: 0
  SnapshotsResp:
    type: "object"
    required:
    - "block_snapshots"
    properties:
      block_snapshots:
        type: "array"
        description: "snapshots"
        items:
          $ref: "#/definitions/Snapshot"
    title: "SnapshotsResp"
    example:
      block_snapshots:
      - cloned_block_volume_num: 1
        creator: "creator"
        hidden: true
        pool:
          name: "name"
          id: 5
        snap_name: "snap_name"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        passive: true
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        protected: true
        size: 7
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        reserved: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
      - cloned_block_volume_num: 1
        creator: "creator"
        hidden: true
        pool:
          name: "name"
          id: 5
        snap_name: "snap_name"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        allocated_size: 0
        passive: true
        volume:
          original_name: "original_name"
          name: "name"
          id: 9
        protected: true
        size: 7
        remote_cluster:
          name: "name"
          id: 2
          fs_id: "fs_id"
          url: "url"
        reserved: true
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        id: 5
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
  SnmpGateway:
    type: "object"
    properties:
      auth_password:
        type: "string"
      auth_protocol:
        type: "string"
      context_engine_id:
        type: "string"
      context_name:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      priv_password:
        type: "string"
      priv_protocol:
        type: "string"
      read_community:
        type: "string"
        description: "V2c specific"
      security_engine_id:
        type: "string"
      security_level:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      user_name:
        type: "string"
        description: "V3 specific"
      version:
        type: "string"
      write_community:
        type: "string"
    title: "SnmpGateway"
    description: "SnmpGateway defines the snmp gateway"
    example:
      read_community: "read_community"
      user_name: "user_name"
      ip: "ip"
      auth_password: "auth_password"
      update: "2000-01-23T04:56:07.000+00:00"
      context_name: "context_name"
      priv_protocol: "priv_protocol"
      version: "version"
      priv_password: "priv_password"
      security_level: "security_level"
      auth_protocol: "auth_protocol"
      context_engine_id: "context_engine_id"
      port: 6
      write_community: "write_community"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      id: 0
      security_engine_id: "security_engine_id"
      status: "status"
  SnmpGatewayReq:
    type: "object"
    properties:
      Port:
        type: "integer"
        format: "int64"
      auth_password:
        type: "string"
      auth_protocol:
        type: "string"
      context_engine_id:
        type: "string"
      context_name:
        type: "string"
      host_id:
        type: "integer"
        format: "int64"
      priv_password:
        type: "string"
      priv_protocol:
        type: "string"
      read_community:
        type: "string"
      security_engine_id:
        type: "string"
      security_level:
        type: "string"
      user_name:
        type: "string"
      version:
        type: "string"
      write_community:
        type: "string"
    title: "SnmpGatewayReq"
    example:
      read_community: "read_community"
      user_name: "user_name"
      Port: 0
      auth_password: "auth_password"
      context_name: "context_name"
      priv_protocol: "priv_protocol"
      version: "version"
      host_id: 6
      priv_password: "priv_password"
      security_level: "security_level"
      auth_protocol: "auth_protocol"
      context_engine_id: "context_engine_id"
      write_community: "write_community"
      security_engine_id: "security_engine_id"
  SnmpResp:
    type: "object"
    required:
    - "snmp"
    properties:
      snmp:
        $ref: "#/definitions/SnmpResp_Snmp"
    title: "SnmpResp"
    example:
      snmp:
        gateways:
        - read_community: "read_community"
          user_name: "user_name"
          ip: "ip"
          auth_password: "auth_password"
          update: "2000-01-23T04:56:07.000+00:00"
          context_name: "context_name"
          priv_protocol: "priv_protocol"
          version: "version"
          priv_password: "priv_password"
          security_level: "security_level"
          auth_protocol: "auth_protocol"
          context_engine_id: "context_engine_id"
          port: 6
          write_community: "write_community"
          host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          id: 0
          security_engine_id: "security_engine_id"
          status: "status"
        - read_community: "read_community"
          user_name: "user_name"
          ip: "ip"
          auth_password: "auth_password"
          update: "2000-01-23T04:56:07.000+00:00"
          context_name: "context_name"
          priv_protocol: "priv_protocol"
          version: "version"
          priv_password: "priv_password"
          security_level: "security_level"
          auth_protocol: "auth_protocol"
          context_engine_id: "context_engine_id"
          port: 6
          write_community: "write_community"
          host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          id: 0
          security_engine_id: "security_engine_id"
          status: "status"
        receivers:
        - port: 5
          ip: "ip"
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 1
          msg_level: "msg_level"
        - port: 5
          ip: "ip"
          create: "2000-01-23T04:56:07.000+00:00"
          update: "2000-01-23T04:56:07.000+00:00"
          id: 1
          msg_level: "msg_level"
        enabled: true
  SnmpResp_Snmp:
    type: "object"
    required:
    - "enabled"
    - "gateways"
    - "receivers"
    properties:
      enabled:
        type: "boolean"
        description: "enable snmp or not"
      gateways:
        type: "array"
        description: "snmp gateways"
        items:
          $ref: "#/definitions/SnmpGateway"
      receivers:
        type: "array"
        description: "snmp receivers"
        items:
          $ref: "#/definitions/TrapReceiver"
    title: "SnmpResp_Snmp"
    example:
      gateways:
      - read_community: "read_community"
        user_name: "user_name"
        ip: "ip"
        auth_password: "auth_password"
        update: "2000-01-23T04:56:07.000+00:00"
        context_name: "context_name"
        priv_protocol: "priv_protocol"
        version: "version"
        priv_password: "priv_password"
        security_level: "security_level"
        auth_protocol: "auth_protocol"
        context_engine_id: "context_engine_id"
        port: 6
        write_community: "write_community"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        security_engine_id: "security_engine_id"
        status: "status"
      - read_community: "read_community"
        user_name: "user_name"
        ip: "ip"
        auth_password: "auth_password"
        update: "2000-01-23T04:56:07.000+00:00"
        context_name: "context_name"
        priv_protocol: "priv_protocol"
        version: "version"
        priv_password: "priv_password"
        security_level: "security_level"
        auth_protocol: "auth_protocol"
        context_engine_id: "context_engine_id"
        port: 6
        write_community: "write_community"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        id: 0
        security_engine_id: "security_engine_id"
        status: "status"
      receivers:
      - port: 5
        ip: "ip"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        msg_level: "msg_level"
      - port: 5
        ip: "ip"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 1
        msg_level: "msg_level"
      enabled: true
  SnmpSetReq:
    type: "object"
    properties:
      snmp:
        $ref: "#/definitions/SnmpSetReq_Snmp"
    title: "SnmpSetReq"
    example:
      snmp:
        gateways:
        - read_community: "read_community"
          user_name: "user_name"
          Port: 0
          auth_password: "auth_password"
          context_name: "context_name"
          priv_protocol: "priv_protocol"
          version: "version"
          host_id: 6
          priv_password: "priv_password"
          security_level: "security_level"
          auth_protocol: "auth_protocol"
          context_engine_id: "context_engine_id"
          write_community: "write_community"
          security_engine_id: "security_engine_id"
        - read_community: "read_community"
          user_name: "user_name"
          Port: 0
          auth_password: "auth_password"
          context_name: "context_name"
          priv_protocol: "priv_protocol"
          version: "version"
          host_id: 6
          priv_password: "priv_password"
          security_level: "security_level"
          auth_protocol: "auth_protocol"
          context_engine_id: "context_engine_id"
          write_community: "write_community"
          security_engine_id: "security_engine_id"
        receivers:
        - port: 1
          ip: "ip"
        - port: 1
          ip: "ip"
        enabled: true
  SnmpSetReq_Snmp:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      gateways:
        type: "array"
        items:
          $ref: "#/definitions/SnmpGatewayReq"
      receivers:
        type: "array"
        items:
          $ref: "#/definitions/SnmpTrapReceiverReq"
    title: "SnmpSetReq_Snmp"
    example:
      gateways:
      - read_community: "read_community"
        user_name: "user_name"
        Port: 0
        auth_password: "auth_password"
        context_name: "context_name"
        priv_protocol: "priv_protocol"
        version: "version"
        host_id: 6
        priv_password: "priv_password"
        security_level: "security_level"
        auth_protocol: "auth_protocol"
        context_engine_id: "context_engine_id"
        write_community: "write_community"
        security_engine_id: "security_engine_id"
      - read_community: "read_community"
        user_name: "user_name"
        Port: 0
        auth_password: "auth_password"
        context_name: "context_name"
        priv_protocol: "priv_protocol"
        version: "version"
        host_id: 6
        priv_password: "priv_password"
        security_level: "security_level"
        auth_protocol: "auth_protocol"
        context_engine_id: "context_engine_id"
        write_community: "write_community"
        security_engine_id: "security_engine_id"
      receivers:
      - port: 1
        ip: "ip"
      - port: 1
        ip: "ip"
      enabled: true
  SnmpTrapReceiverReq:
    type: "object"
    properties:
      ip:
        type: "string"
      port:
        type: "integer"
        format: "int64"
    title: "SnmpTrapReceiverReq"
    example:
      port: 1
      ip: "ip"
  SourceRecord:
    type: "object"
    properties:
      type:
        type: "string"
    title: "SourceRecord"
    example:
      type: "type"
  SourcesResp:
    type: "object"
    properties:
      sources:
        type: "array"
        items:
          $ref: "#/definitions/SourceRecord"
    title: "SourcesResp"
    example:
      sources:
      - type: "type"
      - type: "type"
  SystemLog:
    type: "object"
    properties:
      catalog:
        type: "string"
      host:
        $ref: "#/definitions/Host"
      id:
        type: "integer"
        format: "int64"
      last_updated_time:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      size:
        type: "integer"
        format: "int64"
    title: "SystemLog"
    description: "SystemLog defines the system log"
    example:
      last_updated_time: "2000-01-23T04:56:07.000+00:00"
      size: 9
      catalog: "catalog"
      host:
        roles: "roles"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        enclosures:
        - "{}"
        - "{}"
        private_ip: "private_ip"
        root_disk:
          disk_type: "disk_type"
          id: 0
          device: "device"
        cores: 6
        is_master_db: true
        disk_num: 1
        cpu_model: "cpu_model"
        vendor: "vendor"
        create: "2000-01-23T04:56:07.000+00:00"
        model: "model"
        id: 5
        up: true
        action_status: "action_status"
        public_ips: "public_ips"
        memory_kbyte: 2
        rack: "rack"
        gateway_ips: "gateway_ips"
        os: "os"
        clock_diff: 0
        admin_ip: "admin_ip"
        protection_domain:
          name: "name"
          id: 5
        name: "name"
        fcports:
        - host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          id: 5
          wwn: "wwn"
        - host:
            name: "name"
            admin_ip: "admin_ip"
            id: 0
          create: "2000-01-23T04:56:07.000+00:00"
          id: 5
          wwn: "wwn"
        status: "status"
      name: "name"
      id: 7
  SystemLogsResp:
    type: "object"
    required:
    - "system_logs"
    properties:
      system_logs:
        type: "array"
        description: "system logs"
        items:
          $ref: "#/definitions/SystemLog"
    title: "SystemLogsResp"
    example:
      system_logs:
      - last_updated_time: "2000-01-23T04:56:07.000+00:00"
        size: 9
        catalog: "catalog"
        host:
          roles: "roles"
          description: "description"
          update: "2000-01-23T04:56:07.000+00:00"
          type: "type"
          enclosures:
          - "{}"
          - "{}"
          private_ip: "private_ip"
          root_disk:
            disk_type: "disk_type"
            id: 0
            device: "device"
          cores: 6
          is_master_db: true
          disk_num: 1
          cpu_model: "cpu_model"
          vendor: "vendor"
          create: "2000-01-23T04:56:07.000+00:00"
          model: "model"
          id: 5
          up: true
          action_status: "action_status"
          public_ips: "public_ips"
          memory_kbyte: 2
          rack: "rack"
          gateway_ips: "gateway_ips"
          os: "os"
          clock_diff: 0
          admin_ip: "admin_ip"
          protection_domain:
            name: "name"
            id: 5
          name: "name"
          fcports:
          - host:
              name: "name"
              admin_ip: "admin_ip"
              id: 0
            create: "2000-01-23T04:56:07.000+00:00"
            id: 5
            wwn: "wwn"
          - host:
              name: "name"
              admin_ip: "admin_ip"
              id: 0
            create: "2000-01-23T04:56:07.000+00:00"
            id: 5
            wwn: "wwn"
          status: "status"
        name: "name"
        id: 7
      - last_updated_time: "2000-01-23T04:56:07.000+00:00"
        size: 9
        catalog: "catalog"
        host:
          roles: "roles"
          description: "description"
          update: "2000-01-23T04:56:07.000+00:00"
          type: "type"
          enclosures:
          - "{}"
          - "{}"
          private_ip: "private_ip"
          root_disk:
            disk_type: "disk_type"
            id: 0
            device: "device"
          cores: 6
          is_master_db: true
          disk_num: 1
          cpu_model: "cpu_model"
          vendor: "vendor"
          create: "2000-01-23T04:56:07.000+00:00"
          model: "model"
          id: 5
          up: true
          action_status: "action_status"
          public_ips: "public_ips"
          memory_kbyte: 2
          rack: "rack"
          gateway_ips: "gateway_ips"
          os: "os"
          clock_diff: 0
          admin_ip: "admin_ip"
          protection_domain:
            name: "name"
            id: 5
          name: "name"
          fcports:
          - host:
              name: "name"
              admin_ip: "admin_ip"
              id: 0
            create: "2000-01-23T04:56:07.000+00:00"
            id: 5
            wwn: "wwn"
          - host:
              name: "name"
              admin_ip: "admin_ip"
              id: 0
            create: "2000-01-23T04:56:07.000+00:00"
            id: 5
            wwn: "wwn"
          status: "status"
        name: "name"
        id: 7
  Target:
    type: "object"
    properties:
      access_path:
        $ref: "#/definitions/AccessPath_Nestview"
      board:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      iqn:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "Target"
    description: "Target defines access path info for host"
    example:
      access_path:
        name: "name"
        id: 0
      port: 1
      iqn: "iqn"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 6
      board: 0
      status: "status"
  TargetCreateReq:
    type: "object"
    properties:
      target:
        $ref: "#/definitions/TargetCreateReq_Target"
    title: "TargetCreateReq"
    example:
      target:
        access_path_id: 0
        host_id: 6
  TargetCreateReq_Target:
    type: "object"
    properties:
      access_path_id:
        type: "integer"
        format: "int64"
      host_id:
        type: "integer"
        format: "int64"
    title: "TargetCreateReq_Target"
    example:
      access_path_id: 0
      host_id: 6
  TargetResp:
    type: "object"
    required:
    - "target"
    properties:
      target:
        $ref: "#/definitions/Target"
    title: "TargetResp"
    example:
      target:
        access_path:
          name: "name"
          id: 0
        port: 1
        iqn: "iqn"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        board: 0
        status: "status"
  Target_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "Target_Nestview"
  TargetsResp:
    type: "object"
    required:
    - "targets"
    properties:
      targets:
        type: "array"
        items:
          $ref: "#/definitions/Target"
    title: "TargetsResp"
    example:
      targets:
      - access_path:
          name: "name"
          id: 0
        port: 1
        iqn: "iqn"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        board: 0
        status: "status"
      - access_path:
          name: "name"
          id: 0
        port: 1
        iqn: "iqn"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
        board: 0
        status: "status"
  Task:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      data:
        type: "string"
      error_msg:
        type: "string"
      execute:
        type: "string"
        format: "date-time"
      finish:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      host_role:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      priority:
        type: "integer"
        format: "int64"
      retried:
        type: "boolean"
      retry:
        type: "integer"
        format: "int64"
      retry_type:
        type: "string"
      status:
        type: "string"
      type:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "Task"
    description: "Task defines a task will be run on a host @grpc-models-proto"
    example:
      retried: true
      error_msg: "error_msg"
      data: "data"
      update: "2000-01-23T04:56:07.000+00:00"
      priority: 5
      type: "type"
      execute: "2000-01-23T04:56:07.000+00:00"
      host_role: "host_role"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      finish: "2000-01-23T04:56:07.000+00:00"
      id: 5
      retry: 2
      retry_type: "retry_type"
      status: "status"
  TaskResp:
    type: "object"
    required:
    - "task"
    properties:
      task:
        description: "task"
        $ref: "#/definitions/Task"
    title: "TaskResp"
    example:
      task:
        retried: true
        error_msg: "error_msg"
        data: "data"
        update: "2000-01-23T04:56:07.000+00:00"
        priority: 5
        type: "type"
        execute: "2000-01-23T04:56:07.000+00:00"
        host_role: "host_role"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 5
        retry: 2
        retry_type: "retry_type"
        status: "status"
  TasksResp:
    type: "object"
    required:
    - "tasks"
    properties:
      tasks:
        type: "array"
        description: "tasks"
        items:
          $ref: "#/definitions/Task"
    title: "TasksResp"
    example:
      tasks:
      - retried: true
        error_msg: "error_msg"
        data: "data"
        update: "2000-01-23T04:56:07.000+00:00"
        priority: 5
        type: "type"
        execute: "2000-01-23T04:56:07.000+00:00"
        host_role: "host_role"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 5
        retry: 2
        retry_type: "retry_type"
        status: "status"
      - retried: true
        error_msg: "error_msg"
        data: "data"
        update: "2000-01-23T04:56:07.000+00:00"
        priority: 5
        type: "type"
        execute: "2000-01-23T04:56:07.000+00:00"
        host_role: "host_role"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 5
        retry: 2
        retry_type: "retry_type"
        status: "status"
  Token:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      expires:
        type: "string"
        format: "date-time"
      user:
        $ref: "#/definitions/User"
      uuid:
        type: "string"
      valid:
        type: "boolean"
    title: "Token"
    description: "An access token contains the security information for a logon session.\
      \ The\nsystem creates an access token when a user logs on, and every process\
      \ executed\non behalf of the user has a copy of the token. The token identifies\
      \ the user,\nthe user's groups, and the user's privileges. The system uses the\
      \ token to\ncontrol access to securable objects and to control the ability of\
      \ the user to\nperform various system-related operations on the local computer."
  TokenCreateReq:
    type: "object"
    required:
    - "auth"
    properties:
      auth:
        $ref: "#/definitions/TokenCreateReq_Auth"
    title: "TokenCreateReq"
    example:
      auth:
        identity:
          password:
            user:
              password: "password"
              name: "name"
              id: 0
              email: "email"
          token:
            uuid: "uuid"
  TokenCreateReq_Auth:
    type: "object"
    required:
    - "identity"
    properties:
      identity:
        $ref: "#/definitions/TokenCreateReq_Auth_Identity"
    title: "TokenCreateReq_Auth"
    example:
      identity:
        password:
          user:
            password: "password"
            name: "name"
            id: 0
            email: "email"
        token:
          uuid: "uuid"
  TokenCreateReq_Auth_Identity:
    type: "object"
    properties:
      password:
        description: "password for auth"
        $ref: "#/definitions/AuthPasswordReq"
      token:
        description: "token for auth"
        $ref: "#/definitions/AuthTokenReq"
    title: "TokenCreateReq_Auth_Identity"
    example:
      password:
        user:
          password: "password"
          name: "name"
          id: 0
          email: "email"
      token:
        uuid: "uuid"
  TokenRecord:
    title: "TokenRecord"
    allOf:
    - $ref: "#/definitions/Token"
    - properties:
        roles:
          type: "array"
          items:
            type: "string"
    description: "TokenRecord defines token record for api response"
  TokenResp:
    type: "object"
    required:
    - "token"
    properties:
      token:
        description: "token"
        $ref: "#/definitions/TokenRecord"
    title: "TokenResp"
    example:
      token: ""
  TrapReceiver:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      msg_level:
        type: "string"
      port:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "TrapReceiver"
    description: "TrapReceiver defines the snmp trap receiver"
    example:
      port: 5
      ip: "ip"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 1
      msg_level: "msg_level"
  Trash:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      enabled:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
      retention:
        type: "string"
      status:
        type: "string"
      trash_resource_num:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "Trash"
    description: "Trash defines the trash attributes."
    example:
      trash_resource_num: 6
      resource_type: "resource_type"
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      enabled: true
      retention: "retention"
      status: "status"
  TrashResource:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      expire_time:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "TrashResource"
    description: "TrashResource is the corresponding trash record."
    example:
      resource_type: "resource_type"
      create: "2000-01-23T04:56:07.000+00:00"
      expire_time: "2000-01-23T04:56:07.000+00:00"
      resource_id: 6
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      action_status: "action_status"
      status: "status"
  TrashResourceResp:
    type: "object"
    required:
    - "trash_resource"
    properties:
      trash_resource:
        description: "trash resource"
        $ref: "#/definitions/TrashResource"
    title: "TrashResourceResp"
    example:
      trash_resource:
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expire_time: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
  TrashResource_Nestview:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      expire_time:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
    title: "TrashResource_Nestview"
  TrashResourcesResp:
    type: "object"
    required:
    - "trash_resources"
    properties:
      trash_resources:
        type: "array"
        description: "trash resources"
        items:
          $ref: "#/definitions/TrashResource"
    title: "TrashResourcesResp"
    example:
      trash_resources:
      - resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expire_time: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
      - resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        expire_time: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        action_status: "action_status"
        status: "status"
  TrashResp:
    type: "object"
    required:
    - "trash"
    properties:
      trash:
        description: "trash"
        $ref: "#/definitions/Trash"
    title: "TrashResp"
    example:
      trash:
        trash_resource_num: 6
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
        retention: "retention"
        status: "status"
  TrashUpdateReq:
    type: "object"
    required:
    - "trash"
    properties:
      trash:
        $ref: "#/definitions/TrashUpdateReq_Trash"
    title: "TrashUpdateReq"
    example:
      trash:
        enabled: true
        retention: "retention"
  TrashUpdateReq_Trash:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      retention:
        type: "string"
    title: "TrashUpdateReq_Trash"
    example:
      enabled: true
      retention: "retention"
  TrashesResp:
    type: "object"
    required:
    - "trashes"
    properties:
      trashes:
        type: "array"
        description: "trashes"
        items:
          $ref: "#/definitions/Trash"
    title: "TrashesResp"
    example:
      trashes:
      - trash_resource_num: 6
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
        retention: "retention"
        status: "status"
      - trash_resource_num: 6
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        enabled: true
        retention: "retention"
        status: "status"
  UpdateAlertRuleResourceBlacklistReq:
    type: "object"
    required:
    - "alert_rule_resource_blacklist"
    properties:
      alert_rule_resource_blacklist:
        description: "create resource blacklist request"
        $ref: "#/definitions/UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist"
    title: "UpdateAlertRuleResourceBlacklistReq"
    example:
      alert_rule_resource_blacklist:
        resource_ids:
        - 0
        - 0
  UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist:
    type: "object"
    properties:
      resource_ids:
        type: "array"
        description: "resource blacklist id must array, ex: [1, 2, 3]"
        items:
          type: "integer"
          format: "int64"
    title: "UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist"
    example:
      resource_ids:
      - 0
      - 0
  User:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating user"
      email:
        type: "string"
        description: "email of user"
      enabled:
        type: "boolean"
        description: "enable the user or not"
      external_id:
        type: "string"
        description: "external id of user"
      id:
        type: "integer"
        format: "int64"
        description: "id of user"
      identity_platform:
        description: "identity platform of user"
        $ref: "#/definitions/IdentityPlatform_Nestview"
      name:
        type: "string"
        description: "name of user"
      password_last_update:
        type: "string"
        format: "date-time"
        description: "time of last password update"
      roles:
        type: "array"
        description: "roles of user"
        items:
          type: "string"
    title: "User"
  UserCreateReq:
    type: "object"
    required:
    - "user"
    properties:
      user:
        $ref: "#/definitions/UserCreateReq_User"
    title: "UserCreateReq"
    example:
      user:
        password: "password"
        roles:
        - "roles"
        - "roles"
        name: "name"
        email: "email"
        enabled: true
  UserCreateReq_User:
    type: "object"
    required:
    - "email"
    - "enabled"
    - "name"
    - "password"
    properties:
      email:
        type: "string"
        description: "email of user"
      enabled:
        type: "boolean"
        description: "enable or disable the user"
      name:
        type: "string"
        description: "name of user"
      password:
        type: "string"
        description: "password of user"
      roles:
        type: "array"
        description: "roles of user"
        items:
          type: "string"
    title: "UserCreateReq_User"
    example:
      password: "password"
      roles:
      - "roles"
      - "roles"
      name: "name"
      email: "email"
      enabled: true
  UserRecord:
    title: "UserRecord"
    allOf:
    - $ref: "#/definitions/User"
    description: "UserRecord defines user record for api response"
  UserResp:
    type: "object"
    required:
    - "user"
    properties:
      user:
        description: "user"
        $ref: "#/definitions/UserRecord"
    title: "UserResp"
    example:
      user: ""
  UserSettings:
    type: "object"
    required:
    - "user"
    properties:
      user:
        $ref: "#/definitions/UserSettings_User"
    title: "UserSettings"
    example:
      user:
        settings:
          dashboard: "dashboard"
  UserSettings_User:
    type: "object"
    required:
    - "settings"
    properties:
      settings:
        $ref: "#/definitions/UserSettings_User_Settings"
    title: "UserSettings_User"
    example:
      settings:
        dashboard: "dashboard"
  UserSettings_User_Settings:
    type: "object"
    properties:
      dashboard:
        type: "string"
        description: "dashboard setting"
    title: "UserSettings_User_Settings"
    example:
      dashboard: "dashboard"
  UserUpdateReq:
    type: "object"
    required:
    - "user"
    properties:
      user:
        $ref: "#/definitions/UserUpdateReq_User"
    title: "UserUpdateReq"
    example:
      user:
        roles:
        - "roles"
        - "roles"
        name: "name"
        email: "email"
        enabled: true
  UserUpdateReq_User:
    type: "object"
    required:
    - "email"
    - "enabled"
    - "name"
    properties:
      email:
        type: "string"
        description: "email of user"
      enabled:
        type: "boolean"
        description: "enable or disable the user"
      name:
        type: "string"
        description: "name of user"
      roles:
        type: "array"
        description: "roles of user"
        items:
          type: "string"
    title: "UserUpdateReq_User"
    example:
      roles:
      - "roles"
      - "roles"
      name: "name"
      email: "email"
      enabled: true
  User_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id of user"
      name:
        type: "string"
        description: "name of user"
    title: "User_Nestview"
    example:
      name: "name"
      id: 6
  UsersResp:
    type: "object"
    required:
    - "users"
    properties:
      users:
        type: "array"
        description: "users"
        items:
          $ref: "#/definitions/UserRecord"
    title: "UsersResp"
    example:
      users:
      - ""
      - ""
  VIP:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      mac_address:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      vip_group:
        $ref: "#/definitions/VIPGroup_Nestview"
      virtual_router_id:
        type: "integer"
        format: "int64"
    title: "VIP"
    description: "VIP is a virtual IP provided access to resources."
  VIPCreateReq:
    type: "object"
    required:
    - "vip"
    properties:
      vip:
        $ref: "#/definitions/VIPCreateReq_VIP"
    title: "VIPCreateReq"
  VIPCreateReq_VIP:
    type: "object"
    required:
    - "ip"
    - "network_address_id"
    - "vip_group_id"
    properties:
      ip:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
      network_address_id:
        type: "integer"
        format: "int64"
      vip_group_id:
        type: "integer"
        format: "int64"
    title: "VIPCreateReq_VIP"
  VIPGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      network:
        type: "string"
      preempt:
        type: "boolean"
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "VIPGroup"
    description: "VIPGroup contains many vips and associated to a resource."
    example:
      name: "name"
      resource_type: "resource_type"
      create: "2000-01-23T04:56:07.000+00:00"
      resource_id: 6
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      preempt: true
      action_status: "action_status"
      network: "network"
      status: "status"
  VIPGroupCreateReq:
    type: "object"
    required:
    - "vip_group"
    properties:
      vip_group:
        $ref: "#/definitions/VIPGroupCreateReq_VIPGroup"
    title: "VIPGroupCreateReq"
  VIPGroupCreateReq_VIPGroup:
    type: "object"
    required:
    - "network"
    - "resource_id"
    - "resource_type"
    - "vips"
    properties:
      network:
        type: "string"
      preempt:
        type: "boolean"
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
      vips:
        type: "array"
        items:
          $ref: "#/definitions/VIPGroupCreateReq_VIPGroup_VIPs_Elt"
    title: "VIPGroupCreateReq_VIPGroup"
  VIPGroupCreateReq_VIPGroup_VIPs_Elt:
    type: "object"
    required:
    - "ip"
    - "network_address_id"
    properties:
      ip:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
      network_address_id:
        type: "integer"
        format: "int64"
    title: "VIPGroupCreateReq_VIPGroup_VIPs_Elt"
  VIPGroupResp:
    type: "object"
    required:
    - "vip_group"
    properties:
      vip_group:
        $ref: "#/definitions/VIPGroup"
    title: "VIPGroupResp"
    example:
      vip_group:
        name: "name"
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        preempt: true
        action_status: "action_status"
        network: "network"
        status: "status"
  VIPGroupResps:
    type: "object"
    required:
    - "vip_groups"
    properties:
      vip_groups:
        type: "array"
        items:
          $ref: "#/definitions/VIPGroup"
    title: "VIPGroupResps"
    example:
      vip_groups:
      - name: "name"
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        preempt: true
        action_status: "action_status"
        network: "network"
        status: "status"
      - name: "name"
        resource_type: "resource_type"
        create: "2000-01-23T04:56:07.000+00:00"
        resource_id: 6
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        preempt: true
        action_status: "action_status"
        network: "network"
        status: "status"
  VIPGroupUpdateReq:
    type: "object"
    required:
    - "vip_group"
    properties:
      vip_group:
        $ref: "#/definitions/VIPGroupUpdateReq_VIPGroup"
    title: "VIPGroupUpdateReq"
  VIPGroupUpdateReq_VIPGroup:
    type: "object"
    properties:
      preempt:
        type: "boolean"
    title: "VIPGroupUpdateReq_VIPGroup"
  VIPGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      network:
        type: "string"
      resource_id:
        type: "integer"
        format: "int64"
      resource_type:
        type: "string"
    title: "VIPGroup_Nestview"
  VIPInstance:
    type: "object"
    properties:
      action_status:
        type: "string"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      network_address:
        $ref: "#/definitions/NetworkAddress_Nestview"
      priority:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
      vip:
        $ref: "#/definitions/VIP_Nestview"
    title: "VIPInstance"
    description: "VIPInstance is an instance of a VIP."
    example:
      create: "2000-01-23T04:56:07.000+00:00"
      network_address:
        ip: "ip"
        id: 6
        mask: 1
      update: "2000-01-23T04:56:07.000+00:00"
      id: 0
      priority: 6
      vip:
        ip: "ip"
        id: 1
        mask: 5
      action_status: "action_status"
      status: "status"
  VIPInstanceResp:
    type: "object"
    properties:
      vip_instance:
        $ref: "#/definitions/VIPInstance"
    title: "VIPInstanceResp"
    example:
      vip_instance:
        create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        priority: 6
        vip:
          ip: "ip"
          id: 1
          mask: 5
        action_status: "action_status"
        status: "status"
  VIPInstance_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    title: "VIPInstance_Nestview"
  VIPInstancesResp:
    type: "object"
    properties:
      vip_instances:
        type: "array"
        items:
          $ref: "#/definitions/VIPInstance"
    title: "VIPInstancesResp"
    example:
      vip_instances:
      - create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        priority: 6
        vip:
          ip: "ip"
          id: 1
          mask: 5
        action_status: "action_status"
        status: "status"
      - create: "2000-01-23T04:56:07.000+00:00"
        network_address:
          ip: "ip"
          id: 6
          mask: 1
        update: "2000-01-23T04:56:07.000+00:00"
        id: 0
        priority: 6
        vip:
          ip: "ip"
          id: 1
          mask: 5
        action_status: "action_status"
        status: "status"
  VIPRecord:
    title: "VIPRecord"
    allOf:
    - $ref: "#/definitions/VIP"
    - properties:
        current_vip_instance:
          $ref: "#/definitions/VIPInstance_Nestview"
        default_vip_instance:
          description: "Copy these two fields from corresponding fields of VIP to\
            \ avoid JSON marshal\nrecursion."
          $ref: "#/definitions/VIPInstance_Nestview"
    description: "VIPRecord represents doc returned by API."
  VIPResp:
    type: "object"
    properties:
      vip:
        $ref: "#/definitions/VIPRecord"
    title: "VIPResp"
    example:
      vip: ""
  VIP_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      ip:
        type: "string"
      mask:
        type: "integer"
        format: "int64"
    title: "VIP_Nestview"
    example:
      ip: "ip"
      id: 1
      mask: 5
  VIPsResp:
    type: "object"
    properties:
      vips:
        type: "array"
        items:
          $ref: "#/definitions/VIPRecord"
    title: "VIPsResp"
    example:
      vips:
      - ""
      - ""
  VMFlavor:
    type: "object"
    properties:
      cpu:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      id:
        type: "integer"
        format: "int64"
      memory_kbyte:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      root_disk_size:
        type: "integer"
        format: "int64"
      update:
        type: "string"
        format: "date-time"
    title: "VMFlavor"
    description: "VMFlavor defines flavor of vm"
    example:
      memory_kbyte: 1
      root_disk_size: 5
      name: "name"
      cpu: 0
      create: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 6
  VMFlavorResp:
    type: "object"
    properties:
      vm_flavor:
        $ref: "#/definitions/VMFlavor"
    title: "VMFlavorResp"
    example:
      vm_flavor:
        memory_kbyte: 1
        root_disk_size: 5
        name: "name"
        cpu: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
  VMFlavor_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "VMFlavor_Nestview"
  VMFlavorsResp:
    type: "object"
    properties:
      vm_flavors:
        type: "array"
        items:
          $ref: "#/definitions/VMFlavor"
    title: "VMFlavorsResp"
    example:
      vm_flavors:
      - memory_kbyte: 1
        root_disk_size: 5
        name: "name"
        cpu: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
      - memory_kbyte: 1
        root_disk_size: 5
        name: "name"
        cpu: 0
        create: "2000-01-23T04:56:07.000+00:00"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 6
  VersionResp:
    type: "object"
    required:
    - "version"
    properties:
      version:
        type: "string"
        description: "version"
    title: "VersionResp"
    example:
      version: "version"
  Volume:
    type: "object"
    properties:
      access_path:
        $ref: "#/definitions/AccessPath_Nestview"
      action_status:
        type: "string"
      allocated_size:
        type: "integer"
        format: "int64"
      block_snapshot_num:
        type: "integer"
        format: "int64"
      block_volume_group:
        $ref: "#/definitions/VolumeGroup_Nestview"
      client_group_num:
        type: "integer"
        format: "int64"
      cloud_platform:
        $ref: "#/definitions/CloudPlatform_Nestview"
      crc_check:
        type: "boolean"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      dp_block_backup_policy_num:
        type: "integer"
        format: "int64"
      dp_block_replication_policy:
        $ref: "#/definitions/DpBlockReplicationPolicy_Nestview"
      dp_block_snapshot_policy:
        $ref: "#/definitions/DpBlockSnapshotPolicy_Nestview"
      flattened:
        type: "boolean"
      format:
        type: "integer"
        format: "int64"
        description: "128 or 129 (advanced)"
      hidden:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      image_id:
        type: "string"
      latest_snapshot_time:
        type: "string"
        format: "date-time"
      migration_stripes:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      original_name:
        type: "string"
      original_volume_name:
        type: "string"
      passive:
        type: "boolean"
      performance_priority:
        type: "integer"
        format: "int64"
        description: "0 or 1"
      pool:
        $ref: "#/definitions/Pool_Nestview"
      progress:
        type: "number"
        format: "double"
      qos:
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
      recycled:
        type: "boolean"
        description: "trash"
      remote_cluster:
        description: "the volume is replicated from a remote cluster, via snapshot\
          \ or IO"
        $ref: "#/definitions/RemoteCluster_Nestview"
      replication_dest:
        type: "string"
      replication_pool:
        type: "string"
      replication_pool_id:
        type: "integer"
        format: "int64"
      replication_pool_name:
        type: "string"
      replication_role:
        type: "string"
      replication_status:
        type: "string"
      replication_version:
        type: "integer"
        format: "int64"
      replication_volume:
        type: "string"
      replication_volume_id:
        type: "integer"
        format: "int64"
      replication_volume_name:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      sn:
        type: "string"
      snapshot:
        $ref: "#/definitions/Snapshot_Nestview"
      snapshot_replication_pool:
        type: "string"
      snapshot_replication_pool_id:
        type: "integer"
        format: "int64"
      snapshot_replication_role:
        type: "string"
      snapshot_replication_status:
        type: "string"
      snapshot_replication_volume:
        type: "string"
      snapshot_replication_volume_id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      trash_resource:
        $ref: "#/definitions/TrashResource_Nestview"
      update:
        type: "string"
        format: "date-time"
      volume_name:
        type: "string"
    title: "Volume"
    description: "Volume is the corresponding rbd image @grpc-models-proto"
  VolumeBackupProtectionReq:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeBackupProtectionReq_Volume"
    title: "VolumeBackupProtectionReq"
    example:
      block_volume:
        dp_block_backup_policy_id: 0
  VolumeBackupProtectionReq_Volume:
    type: "object"
    required:
    - "dp_block_backup_policy_id"
    properties:
      dp_block_backup_policy_id:
        type: "integer"
        format: "int64"
        description: "policy"
    title: "VolumeBackupProtectionReq_Volume"
    example:
      dp_block_backup_policy_id: 0
  VolumeCrcSetReq:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeCrcSetReq_Volume"
    title: "VolumeCrcSetReq"
    example:
      block_volume:
        crc_check: true
  VolumeCrcSetReq_Volume:
    type: "object"
    required:
    - "crc_check"
    properties:
      crc_check:
        type: "boolean"
    title: "VolumeCrcSetReq_Volume"
    example:
      crc_check: true
  VolumeCreateReq:
    type: "object"
    required:
    - "block_volume"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeCreateReq_Volume"
    title: "VolumeCreateReq"
    example:
      block_volume:
        flattened: true
        replication_pool: "replication_pool"
        replication_version: 2
        format: 6
        description: "description"
        pool_id: 5
        performance_priority: 1
        qos:
          burst_total_iops: 2
          max_total_iops: 9
          burst_total_bw: 5
          max_total_bw: 7
        replication_pool_id: 3
        replication_pool_name: "replication_pool_name"
        size: 7
        replication_volume: "replication_volume"
        replication_volume_name: "replication_volume_name"
        snapshot_replication_volume: "snapshot_replication_volume"
        block_snapshot_id: 0
        name: "name"
        snapshot_replication_pool_id: 1
        snapshot_replication_volume_id: 1
        remote_cluster_fs_id: "remote_cluster_fs_id"
        snapshot_replication_pool: "snapshot_replication_pool"
        crc_check: true
        sn: "sn"
        replication_volume_id: 4
        qos_enabled: true
  VolumeCreateReq_Volume:
    type: "object"
    required:
    - "name"
    - "pool_id"
    properties:
      block_snapshot_id:
        type: "integer"
        format: "int64"
        description: "id of related block volume snapshot"
      crc_check:
        type: "boolean"
        description: "crc check or not"
      description:
        type: "string"
        description: "description of volume"
      flattened:
        type: "boolean"
        description: "flatten or not flatten"
      format:
        type: "integer"
        format: "int64"
        description: "volume format: { 128 | 129 (advanced) }, default 128"
      name:
        type: "string"
        description: "name of volume"
      performance_priority:
        type: "integer"
        format: "int64"
        description: "performance priority: { 0 | 1 }, default 0"
      pool_id:
        type: "integer"
        format: "int64"
        description: "id of pool belonged to"
      qos:
        description: "qos of volume"
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
        description: "enable or disable the qos"
      remote_cluster_fs_id:
        type: "string"
        description: "replication remote cluster fsid"
      replication_pool:
        type: "string"
        description: "replication peer pool"
      replication_pool_id:
        type: "integer"
        format: "int64"
        description: "replication peer pool id"
      replication_pool_name:
        type: "string"
        description: "replication peer pool name"
      replication_version:
        type: "integer"
        format: "int64"
        description: "replication version"
      replication_volume:
        type: "string"
        description: "replication peer volume"
      replication_volume_id:
        type: "integer"
        format: "int64"
        description: "replication peer volume id"
      replication_volume_name:
        type: "string"
        description: "replication peer volume name"
      size:
        type: "integer"
        format: "int64"
        description: "size of volume"
      sn:
        type: "string"
        description: "volume sn, used when creating replication volume"
      snapshot_replication_pool:
        type: "string"
        description: "snapshot replication peer pool"
      snapshot_replication_pool_id:
        type: "integer"
        format: "int64"
        description: "snapshot replication peer pool id"
      snapshot_replication_volume:
        type: "string"
        description: "snapshot replication peer volume"
      snapshot_replication_volume_id:
        type: "integer"
        format: "int64"
        description: "snapshot replication peer volume id"
    title: "VolumeCreateReq_Volume"
    example:
      flattened: true
      replication_pool: "replication_pool"
      replication_version: 2
      format: 6
      description: "description"
      pool_id: 5
      performance_priority: 1
      qos:
        burst_total_iops: 2
        max_total_iops: 9
        burst_total_bw: 5
        max_total_bw: 7
      replication_pool_id: 3
      replication_pool_name: "replication_pool_name"
      size: 7
      replication_volume: "replication_volume"
      replication_volume_name: "replication_volume_name"
      snapshot_replication_volume: "snapshot_replication_volume"
      block_snapshot_id: 0
      name: "name"
      snapshot_replication_pool_id: 1
      snapshot_replication_volume_id: 1
      remote_cluster_fs_id: "remote_cluster_fs_id"
      snapshot_replication_pool: "snapshot_replication_pool"
      crc_check: true
      sn: "sn"
      replication_volume_id: 4
      qos_enabled: true
  VolumeDpBlockBackupPolicyMapping:
    type: "object"
    properties:
      dp_block_backup_policy:
        $ref: "#/definitions/DpBlockBackupPolicy_Nestview"
      id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      volume:
        $ref: "#/definitions/Volume_Nestview"
    title: "VolumeDpBlockBackupPolicyMapping"
    description: "VolumeDpBlockBackupPolicyMapping represent the mapping relationship\
      \ of volume\nand dp block backup policies"
    example:
      volume:
        original_name: "original_name"
        name: "name"
        id: 9
      dp_block_backup_policy:
        name: "name"
        id: 1
      id: 0
      status: "status"
  VolumeDpBlockBackupPolicyMappingsResp:
    type: "object"
    properties:
      volume_dp_block_backup_policy_mappings:
        type: "array"
        items:
          $ref: "#/definitions/VolumeDpBlockBackupPolicyMapping"
    title: "VolumeDpBlockBackupPolicyMappingsResp"
    example:
      volume_dp_block_backup_policy_mappings:
      - volume:
          original_name: "original_name"
          name: "name"
          id: 9
        dp_block_backup_policy:
          name: "name"
          id: 1
        id: 0
        status: "status"
      - volume:
          original_name: "original_name"
          name: "name"
          id: 9
        dp_block_backup_policy:
          name: "name"
          id: 1
        id: 0
        status: "status"
  VolumeFailedTask:
    type: "object"
    properties:
      abort:
        type: "number"
        format: "double"
      busy:
        type: "number"
        format: "double"
      check_cond:
        type: "number"
        format: "double"
      resv_conflict:
        type: "number"
        format: "double"
    title: "VolumeFailedTask"
    example:
      abort: 7.061401241503109
      busy: 9.301444243932576
      check_cond: 3.616076749251911
      resv_conflict: 2.027123023002322
  VolumeGroup:
    type: "object"
    properties:
      action_status:
        type: "string"
      block_volume_group_snapshot:
        $ref: "#/definitions/VolumeGroupSnapshot_Nestview"
      block_volume_group_snapshot_num:
        type: "integer"
        format: "int64"
      block_volume_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      flattened:
        type: "boolean"
      id:
        type: "integer"
        format: "int64"
      latest_snapshot_time:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      progress:
        type: "number"
        format: "double"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "VolumeGroup"
    description: "VolumeGroup defines the model of volume group"
    example:
      flattened: true
      block_volume_num: 6
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      latest_snapshot_time: "2000-01-23T04:56:07.000+00:00"
      block_volume_group_snapshot_num: 0
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      progress: 5.962133916683182
      id: 1
      action_status: "action_status"
      block_volume_group_snapshot:
        name: "name"
        id: 6
      status: "status"
  VolumeGroupAddVolumeReq:
    type: "object"
    required:
    - "block_volume_ids"
    properties:
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "VolumeGroupAddVolumeReq"
    example:
      block_volume_ids:
      - 0
      - 0
  VolumeGroupCreateReq:
    type: "object"
    required:
    - "block_volume_group"
    properties:
      block_volume_group:
        $ref: "#/definitions/VolumeGroupCreateReq_VolumeGroup"
    title: "VolumeGroupCreateReq"
    example:
      block_volume_group:
        flattened: true
        block_volume_ids:
        - 6
        - 6
        name: "name"
        description: "description"
        block_volume_group_snapshot_id: 0
  VolumeGroupCreateReq_VolumeGroup:
    type: "object"
    required:
    - "name"
    properties:
      block_volume_group_snapshot_id:
        type: "integer"
        format: "int64"
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      description:
        type: "string"
      flattened:
        type: "boolean"
      name:
        type: "string"
    title: "VolumeGroupCreateReq_VolumeGroup"
    example:
      flattened: true
      block_volume_ids:
      - 6
      - 6
      name: "name"
      description: "description"
      block_volume_group_snapshot_id: 0
  VolumeGroupRemoveVolumeReq:
    type: "object"
    required:
    - "block_volume_ids"
    properties:
      block_volume_ids:
        type: "array"
        items:
          type: "integer"
          format: "int64"
    title: "VolumeGroupRemoveVolumeReq"
    example:
      block_volume_ids:
      - 0
      - 0
  VolumeGroupResp:
    type: "object"
    properties:
      block_volume_group:
        $ref: "#/definitions/VolumeGroup"
    title: "VolumeGroupResp"
    example:
      block_volume_group:
        flattened: true
        block_volume_num: 6
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        latest_snapshot_time: "2000-01-23T04:56:07.000+00:00"
        block_volume_group_snapshot_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 5.962133916683182
        id: 1
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
  VolumeGroupSnapshot:
    type: "object"
    properties:
      block_snapshot_num:
        type: "integer"
        format: "int64"
      block_volume_group:
        $ref: "#/definitions/VolumeGroup_Nestview"
      cloned_block_volume_group_num:
        type: "integer"
        format: "int64"
      create:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
      update:
        type: "string"
        format: "date-time"
    title: "VolumeGroupSnapshot"
    description: "VolumeGroupSnapshot defines the model of volume group snapshot"
    example:
      block_snapshot_num: 0
      cloned_block_volume_group_num: 1
      block_volume_group:
        name: "name"
        id: 6
      name: "name"
      create: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      update: "2000-01-23T04:56:07.000+00:00"
      id: 5
      status: "status"
  VolumeGroupSnapshotCreateReq:
    type: "object"
    required:
    - "block_volume_group_snapshot"
    properties:
      block_volume_group_snapshot:
        $ref: "#/definitions/VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot"
    title: "VolumeGroupSnapshotCreateReq"
    example:
      block_volume_group_snapshot:
        name: "name"
        description: "description"
        block_volume_group_id: 0
  VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot:
    type: "object"
    required:
    - "block_volume_group_id"
    - "description"
    - "name"
    properties:
      block_volume_group_id:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      name:
        type: "string"
    title: "VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot"
    example:
      name: "name"
      description: "description"
      block_volume_group_id: 0
  VolumeGroupSnapshotResp:
    type: "object"
    required:
    - "block_volume_group_snapshot"
    properties:
      block_volume_group_snapshot:
        $ref: "#/definitions/VolumeGroupSnapshot"
    title: "VolumeGroupSnapshotResp"
    example:
      block_volume_group_snapshot:
        block_snapshot_num: 0
        cloned_block_volume_group_num: 1
        block_volume_group:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
  VolumeGroupSnapshotUpdateReq:
    type: "object"
    required:
    - "block_volume_group_snapshot"
    properties:
      block_volume_group_snapshot:
        $ref: "#/definitions/VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot"
    title: "VolumeGroupSnapshotUpdateReq"
    example:
      block_volume_group_snapshot:
        name: "name"
        description: "description"
  VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot:
    type: "object"
    properties:
      description:
        type: "string"
      name:
        type: "string"
    title: "VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot"
    example:
      name: "name"
      description: "description"
  VolumeGroupSnapshot_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "VolumeGroupSnapshot_Nestview"
    example:
      name: "name"
      id: 6
  VolumeGroupSnapshotsResp:
    type: "object"
    required:
    - "block_volume_group_snapshots"
    properties:
      block_volume_group_snapshots:
        type: "array"
        items:
          $ref: "#/definitions/VolumeGroupSnapshot"
    title: "VolumeGroupSnapshotsResp"
    example:
      block_volume_group_snapshots:
      - block_snapshot_num: 0
        cloned_block_volume_group_num: 1
        block_volume_group:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
      - block_snapshot_num: 0
        cloned_block_volume_group_num: 1
        block_volume_group:
          name: "name"
          id: 6
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        id: 5
        status: "status"
  VolumeGroupUpdateReq:
    type: "object"
    required:
    - "block_volume_group"
    properties:
      block_volume_group:
        $ref: "#/definitions/VolumeGroupUpdateReq_VolumeGroup"
    title: "VolumeGroupUpdateReq"
    example:
      block_volume_group:
        flattened: true
        name: "name"
        description: "description"
  VolumeGroupUpdateReq_VolumeGroup:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
      flattened:
        type: "boolean"
      name:
        type: "string"
    title: "VolumeGroupUpdateReq_VolumeGroup"
    example:
      flattened: true
      name: "name"
      description: "description"
  VolumeGroup_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    title: "VolumeGroup_Nestview"
    example:
      name: "name"
      id: 6
  VolumeGroupsResp:
    type: "object"
    properties:
      block_volume_groups:
        type: "array"
        items:
          $ref: "#/definitions/VolumeGroup"
    title: "VolumeGroupsResp"
    example:
      block_volume_groups:
      - flattened: true
        block_volume_num: 6
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        latest_snapshot_time: "2000-01-23T04:56:07.000+00:00"
        block_volume_group_snapshot_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 5.962133916683182
        id: 1
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
      - flattened: true
        block_volume_num: 6
        description: "description"
        update: "2000-01-23T04:56:07.000+00:00"
        latest_snapshot_time: "2000-01-23T04:56:07.000+00:00"
        block_volume_group_snapshot_num: 0
        name: "name"
        create: "2000-01-23T04:56:07.000+00:00"
        progress: 5.962133916683182
        id: 1
        action_status: "action_status"
        block_volume_group_snapshot:
          name: "name"
          id: 6
        status: "status"
  VolumeIOSize:
    type: "object"
    properties:
      0_4kbyte:
        type: "number"
        format: "double"
      32_64kbyte:
        type: "number"
        format: "double"
      4_8kbyte:
        type: "number"
        format: "double"
      64_512kbyte:
        type: "number"
        format: "double"
      8_32kbyte:
        type: "number"
        format: "double"
      above_512kbyte:
        type: "number"
        format: "double"
    title: "VolumeIOSize"
    example:
      8_32kbyte: 1.4894159098541704
      0_4kbyte: 4.145608029883936
      32_64kbyte: 7.386281948385884
      4_8kbyte: 1.2315135367772556
      above_512kbyte: 6.84685269835264
      64_512kbyte: 1.0246457001441578
  VolumeMigrateReq:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeMigrateReq_Volume"
    title: "VolumeMigrateReq"
    example:
      block_volume:
        dest_pool_id: 0
        migration_stripes: 6
  VolumeMigrateReq_Volume:
    type: "object"
    required:
    - "dest_pool_id"
    properties:
      dest_pool_id:
        type: "integer"
        format: "int64"
        description: "migrate destination pool"
      migration_stripes:
        type: "integer"
        format: "int64"
    title: "VolumeMigrateReq_Volume"
    example:
      dest_pool_id: 0
      migration_stripes: 6
  VolumeMigrationJob:
    type: "object"
    properties:
      create:
        type: "string"
        format: "date-time"
      dest_pool:
        $ref: "#/definitions/Pool_Nestview"
      finished_at:
        type: "string"
        format: "date-time"
      host:
        $ref: "#/definitions/Host_Nestview"
      id:
        type: "integer"
        format: "int64"
      remaining_time:
        type: "integer"
        format: "int64"
      source_pool:
        $ref: "#/definitions/Pool_Nestview"
      started_at:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      stripes:
        type: "integer"
        format: "int64"
      task:
        $ref: "#/definitions/Task"
      update:
        type: "string"
        format: "date-time"
      volume:
        $ref: "#/definitions/Volume_Nestview"
    title: "VolumeMigrationJob"
    description: "VolumeMigrationJob defines the volume migration job record"
    example:
      finished_at: "2000-01-23T04:56:07.000+00:00"
      update: "2000-01-23T04:56:07.000+00:00"
      stripes: 1
      volume:
        original_name: "original_name"
        name: "name"
        id: 9
      remaining_time: 6
      source_pool:
        name: "name"
        id: 5
      task:
        retried: true
        error_msg: "error_msg"
        data: "data"
        update: "2000-01-23T04:56:07.000+00:00"
        priority: 5
        type: "type"
        execute: "2000-01-23T04:56:07.000+00:00"
        host_role: "host_role"
        host:
          name: "name"
          admin_ip: "admin_ip"
          id: 0
        create: "2000-01-23T04:56:07.000+00:00"
        finish: "2000-01-23T04:56:07.000+00:00"
        id: 5
        retry: 2
        retry_type: "retry_type"
        status: "status"
      host:
        name: "name"
        admin_ip: "admin_ip"
        id: 0
      create: "2000-01-23T04:56:07.000+00:00"
      dest_pool:
        name: "name"
        id: 5
      started_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      status: "status"
  VolumeNonIOTask:
    type: "object"
    properties:
      ats:
        type: "number"
        format: "double"
      other:
        type: "number"
        format: "double"
      unmap:
        type: "number"
        format: "double"
      write_same:
        type: "number"
        format: "double"
      xcopy:
        type: "number"
        format: "double"
    title: "VolumeNonIOTask"
    example:
      ats: 5.025004791520295
      other: 9.965781217890562
      write_same: 6.683562403749608
      xcopy: 8.762042012749001
      unmap: 9.369310271410669
  VolumeQosSpec:
    type: "object"
    properties:
      burst_total_bw:
        type: "integer"
        format: "int64"
      burst_total_iops:
        type: "integer"
        format: "int64"
      max_total_bw:
        type: "integer"
        format: "int64"
      max_total_iops:
        type: "integer"
        format: "int64"
    title: "VolumeQosSpec"
    description: "VolumeQosSpec is a collection of all qos field"
    example:
      burst_total_iops: 2
      max_total_iops: 9
      burst_total_bw: 5
      max_total_bw: 7
  VolumeRecord:
    title: "VolumeRecord"
    allOf:
    - $ref: "#/definitions/Volume"
    - properties:
        samples:
          type: "array"
          items:
            $ref: "#/definitions/VolumeStat"
    description: "VolumeRecord defines the response content of volume related API"
  VolumeReplicationSetReq:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeReplicationSetReq_Volume"
    title: "VolumeReplicationSetReq"
    example:
      block_volume:
        dest_pool_id: 0
        dest_volume_name: "dest_volume_name"
        dp_block_replication_policy_id: 6
  VolumeReplicationSetReq_Volume:
    type: "object"
    required:
    - "dest_pool_id"
    - "dest_volume_name"
    - "dp_block_replication_policy_id"
    properties:
      dest_pool_id:
        type: "integer"
        format: "int64"
        description: "destination pool id"
      dest_volume_name:
        type: "string"
        description: "destination volume name"
      dp_block_replication_policy_id:
        type: "integer"
        format: "int64"
        description: "block replication policy id"
    title: "VolumeReplicationSetReq_Volume"
    example:
      dest_pool_id: 0
      dest_volume_name: "dest_volume_name"
      dp_block_replication_policy_id: 6
  VolumeResp:
    type: "object"
    required:
    - "block_volume"
    properties:
      block_volume:
        description: "volume"
        $ref: "#/definitions/VolumeRecord"
    title: "VolumeResp"
    example:
      block_volume: ""
  VolumeSamplesElem:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      paging:
        $ref: "#/definitions/Paging"
      samples:
        type: "array"
        items:
          $ref: "#/definitions/VolumeStat"
    title: "VolumeSamplesElem"
    example:
      paging:
        duration: 1
        next: "next"
        period: "period"
        offset: 5
        total_count: 2
        count: 6
        duration_end: "2000-01-23T04:56:07.000+00:00"
        limit: 5
        truncated: true
        duration_begin: "2000-01-23T04:56:07.000+00:00"
      id: 0
      samples:
      - migrate_write_iops: 1.1730742509559433
        FailedTask:
          abort: 7.061401241503109
          busy: 9.301444243932576
          check_cond: 3.616076749251911
          resv_conflict: 2.027123023002322
        total_bandwidth_kbyte: 1.284659006116532
        write_latency_us: 5.944895607614016
        total_iops: 2.8841621266687802
        read_latency_us: 6.965117697638846
        read_iops: 3.5571952270680973
        migrate_write_latency_us: 4.965218492984954
        non_io_task:
          ats: 5.025004791520295
          other: 9.965781217890562
          write_same: 6.683562403749608
          xcopy: 8.762042012749001
          unmap: 9.369310271410669
        io_size:
          8_32kbyte: 1.4894159098541704
          0_4kbyte: 4.145608029883936
          32_64kbyte: 7.386281948385884
          4_8kbyte: 1.2315135367772556
          above_512kbyte: 6.84685269835264
          64_512kbyte: 1.0246457001441578
        read_bandwidth_kbyte: 6.438423552598547
        write_bandwidth_kbyte: 6.778324963048013
        migrate_write_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 6.878052220127876
        queue_depth: 9.018348186070783
      - migrate_write_iops: 1.1730742509559433
        FailedTask:
          abort: 7.061401241503109
          busy: 9.301444243932576
          check_cond: 3.616076749251911
          resv_conflict: 2.027123023002322
        total_bandwidth_kbyte: 1.284659006116532
        write_latency_us: 5.944895607614016
        total_iops: 2.8841621266687802
        read_latency_us: 6.965117697638846
        read_iops: 3.5571952270680973
        migrate_write_latency_us: 4.965218492984954
        non_io_task:
          ats: 5.025004791520295
          other: 9.965781217890562
          write_same: 6.683562403749608
          xcopy: 8.762042012749001
          unmap: 9.369310271410669
        io_size:
          8_32kbyte: 1.4894159098541704
          0_4kbyte: 4.145608029883936
          32_64kbyte: 7.386281948385884
          4_8kbyte: 1.2315135367772556
          above_512kbyte: 6.84685269835264
          64_512kbyte: 1.0246457001441578
        read_bandwidth_kbyte: 6.438423552598547
        write_bandwidth_kbyte: 6.778324963048013
        migrate_write_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 6.878052220127876
        queue_depth: 9.018348186070783
  VolumeSamplesResp:
    type: "object"
    required:
    - "block_volume_samples"
    properties:
      block_volume_samples:
        type: "array"
        description: "volume samples"
        items:
          $ref: "#/definitions/VolumeStat"
    title: "VolumeSamplesResp"
    example:
      block_volume_samples:
      - migrate_write_iops: 1.1730742509559433
        FailedTask:
          abort: 7.061401241503109
          busy: 9.301444243932576
          check_cond: 3.616076749251911
          resv_conflict: 2.027123023002322
        total_bandwidth_kbyte: 1.284659006116532
        write_latency_us: 5.944895607614016
        total_iops: 2.8841621266687802
        read_latency_us: 6.965117697638846
        read_iops: 3.5571952270680973
        migrate_write_latency_us: 4.965218492984954
        non_io_task:
          ats: 5.025004791520295
          other: 9.965781217890562
          write_same: 6.683562403749608
          xcopy: 8.762042012749001
          unmap: 9.369310271410669
        io_size:
          8_32kbyte: 1.4894159098541704
          0_4kbyte: 4.145608029883936
          32_64kbyte: 7.386281948385884
          4_8kbyte: 1.2315135367772556
          above_512kbyte: 6.84685269835264
          64_512kbyte: 1.0246457001441578
        read_bandwidth_kbyte: 6.438423552598547
        write_bandwidth_kbyte: 6.778324963048013
        migrate_write_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 6.878052220127876
        queue_depth: 9.018348186070783
      - migrate_write_iops: 1.1730742509559433
        FailedTask:
          abort: 7.061401241503109
          busy: 9.301444243932576
          check_cond: 3.616076749251911
          resv_conflict: 2.027123023002322
        total_bandwidth_kbyte: 1.284659006116532
        write_latency_us: 5.944895607614016
        total_iops: 2.8841621266687802
        read_latency_us: 6.965117697638846
        read_iops: 3.5571952270680973
        migrate_write_latency_us: 4.965218492984954
        non_io_task:
          ats: 5.025004791520295
          other: 9.965781217890562
          write_same: 6.683562403749608
          xcopy: 8.762042012749001
          unmap: 9.369310271410669
        io_size:
          8_32kbyte: 1.4894159098541704
          0_4kbyte: 4.145608029883936
          32_64kbyte: 7.386281948385884
          4_8kbyte: 1.2315135367772556
          above_512kbyte: 6.84685269835264
          64_512kbyte: 1.0246457001441578
        read_bandwidth_kbyte: 6.438423552598547
        write_bandwidth_kbyte: 6.778324963048013
        migrate_write_bandwidth_kbyte: 7.457744773683766
        create: "2000-01-23T04:56:07.000+00:00"
        write_iops: 6.878052220127876
        queue_depth: 9.018348186070783
  VolumeSnapshotProtectionReq:
    type: "object"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeSnapshotProtectionReq_Volume"
    title: "VolumeSnapshotProtectionReq"
    example:
      block_volume:
        dest_pool_id: 0
        dest_volume_name: "dest_volume_name"
        dp_block_snapshot_policy_id: 6
  VolumeSnapshotProtectionReq_Volume:
    type: "object"
    required:
    - "dp_block_snapshot_policy_id"
    properties:
      dest_pool_id:
        type: "integer"
        format: "int64"
        description: "destination pool id"
      dest_volume_name:
        type: "string"
        description: "destination volume name"
      dp_block_snapshot_policy_id:
        type: "integer"
        format: "int64"
        description: "policy"
    title: "VolumeSnapshotProtectionReq_Volume"
    example:
      dest_pool_id: 0
      dest_volume_name: "dest_volume_name"
      dp_block_snapshot_policy_id: 6
  VolumeStat:
    type: "object"
    properties:
      FailedTask:
        $ref: "#/definitions/VolumeFailedTask"
      create:
        type: "string"
        format: "date-time"
      io_size:
        $ref: "#/definitions/VolumeIOSize"
      migrate_write_bandwidth_kbyte:
        type: "number"
        format: "double"
      migrate_write_iops:
        type: "number"
        format: "double"
      migrate_write_latency_us:
        type: "number"
        format: "double"
      non_io_task:
        $ref: "#/definitions/VolumeNonIOTask"
      queue_depth:
        type: "number"
        format: "double"
      read_bandwidth_kbyte:
        type: "number"
        format: "double"
      read_iops:
        type: "number"
        format: "double"
      read_latency_us:
        type: "number"
        format: "double"
      total_bandwidth_kbyte:
        type: "number"
        format: "double"
      total_iops:
        type: "number"
        format: "double"
      write_bandwidth_kbyte:
        type: "number"
        format: "double"
      write_iops:
        type: "number"
        format: "double"
      write_latency_us:
        type: "number"
        format: "double"
    title: "VolumeStat"
    description: "VolumeStat records volume stat info"
    example:
      migrate_write_iops: 1.1730742509559433
      FailedTask:
        abort: 7.061401241503109
        busy: 9.301444243932576
        check_cond: 3.616076749251911
        resv_conflict: 2.027123023002322
      total_bandwidth_kbyte: 1.284659006116532
      write_latency_us: 5.944895607614016
      total_iops: 2.8841621266687802
      read_latency_us: 6.965117697638846
      read_iops: 3.5571952270680973
      migrate_write_latency_us: 4.965218492984954
      non_io_task:
        ats: 5.025004791520295
        other: 9.965781217890562
        write_same: 6.683562403749608
        xcopy: 8.762042012749001
        unmap: 9.369310271410669
      io_size:
        8_32kbyte: 1.4894159098541704
        0_4kbyte: 4.145608029883936
        32_64kbyte: 7.386281948385884
        4_8kbyte: 1.2315135367772556
        above_512kbyte: 6.84685269835264
        64_512kbyte: 1.0246457001441578
      read_bandwidth_kbyte: 6.438423552598547
      write_bandwidth_kbyte: 6.778324963048013
      migrate_write_bandwidth_kbyte: 7.457744773683766
      create: "2000-01-23T04:56:07.000+00:00"
      write_iops: 6.878052220127876
      queue_depth: 9.018348186070783
  VolumeUpdateReq:
    type: "object"
    required:
    - "block_volume"
    properties:
      block_volume:
        $ref: "#/definitions/VolumeUpdateReq_Volume"
    title: "VolumeUpdateReq"
    example:
      block_volume:
        flattened: true
        performance_priority: 6
        qos:
          burst_total_iops: 2
          max_total_iops: 9
          burst_total_bw: 5
          max_total_bw: 7
        size: 1
        block_snapshot_id: 0
        name: "name"
        action: "action"
        description: "description"
        qos_enabled: true
  VolumeUpdateReq_Volume:
    type: "object"
    properties:
      action:
        type: "string"
      block_snapshot_id:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      flattened:
        type: "boolean"
      name:
        type: "string"
      performance_priority:
        type: "integer"
        format: "int64"
      qos:
        $ref: "#/definitions/VolumeQosSpec"
      qos_enabled:
        type: "boolean"
      size:
        type: "integer"
        format: "int64"
    title: "VolumeUpdateReq_Volume"
    example:
      flattened: true
      performance_priority: 6
      qos:
        burst_total_iops: 2
        max_total_iops: 9
        burst_total_bw: 5
        max_total_bw: 7
      size: 1
      block_snapshot_id: 0
      name: "name"
      action: "action"
      description: "description"
      qos_enabled: true
  Volume_Nestview:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      original_name:
        type: "string"
    title: "Volume_Nestview"
    example:
      original_name: "original_name"
      name: "name"
      id: 9
  VolumesResp:
    type: "object"
    required:
    - "block_volumes"
    properties:
      block_volumes:
        type: "array"
        description: "volumes"
        items:
          $ref: "#/definitions/VolumeRecord"
    title: "VolumesResp"
    example:
      block_volumes:
      - ""
      - ""
  ObjectStorageBucket_Nestview_lifecycle:
    properties:
      id:
        type: "integer"
        format: "int64"
      rules:
        type: "array"
        items:
          type: "object"
          properties: {}
      status:
        type: "string"
    example:
      rules:
      - "{}"
      - "{}"
      id: 6
      status: "status"
  PlacementNode_Nestview_parent:
    properties:
      create:
        type: "string"
        format: "date-time"
        description: "time of creating placement node"
      id:
        type: "integer"
        format: "int64"
        description: "id of placement node"
      name:
        type: "string"
        description: "name of placement node"
      parent:
        description: "parent of placement node"
        $ref: "#/definitions/PlacementNode"
      properties:
        description: "properties for this placement node like is_witness"
        $ref: "#/definitions/PlacementNodeProperties"
      type:
        type: "string"
        description: "type of placement node"
      update:
        type: "string"
        format: "date-time"
        description: "time of updating placement node"
    description: "parent of placement node"
